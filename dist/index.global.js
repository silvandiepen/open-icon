(() => {
  var __defProp = Object.defineProperty;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __esm = (fn, res) => function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };

  // lib/icon24.ts
  var icon24_exports = {};
  __export(icon24_exports, {
    IconIcon24: () => IconIcon24,
    default: () => icon24_default
  });
  var IconIcon24, icon24_default;
  var init_icon24 = __esm({
    "lib/icon24.ts"() {
      IconIcon24 = `<svg id="Icon24" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="64.09" y1="36" x2="45" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="36" x2="7.91" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="7.91" x2="36" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="45" x2="36" y2="64.09" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="18 45 27 36 18 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="54 27 45 36 54 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 54 36 45 27 54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 18 36 27 45 18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      icon24_default = IconIcon24;
    }
  });

  // lib/arrow-corner-down.ts
  var arrow_corner_down_exports = {};
  __export(arrow_corner_down_exports, {
    IconArrowCornerDown: () => IconArrowCornerDown,
    default: () => arrow_corner_down_default
  });
  var IconArrowCornerDown, arrow_corner_down_default;
  var init_arrow_corner_down = __esm({
    "lib/arrow-corner-down.ts"() {
      IconArrowCornerDown = `<svg id="ArrowCornerDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.5,58.5v-25c0-11.05,8.95-20,20-20h16" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 49.5 22.5 58.5 31.5 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_corner_down_default = IconArrowCornerDown;
    }
  });

  // lib/arrow-corner-left.ts
  var arrow_corner_left_exports = {};
  __export(arrow_corner_left_exports, {
    IconArrowCornerLeft: () => IconArrowCornerLeft,
    default: () => arrow_corner_left_default
  });
  var IconArrowCornerLeft, arrow_corner_left_default;
  var init_arrow_corner_left = __esm({
    "lib/arrow-corner-left.ts"() {
      IconArrowCornerLeft = `<svg id="ArrowCornerLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,22.5h25c11.05,0,20,8.95,20,20v16" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 13.5 13.5 22.5 22.5 31.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_corner_left_default = IconArrowCornerLeft;
    }
  });

  // lib/arrow-corner-right.ts
  var arrow_corner_right_exports = {};
  __export(arrow_corner_right_exports, {
    IconArrowCornerRight: () => IconArrowCornerRight,
    default: () => arrow_corner_right_default
  });
  var IconArrowCornerRight, arrow_corner_right_default;
  var init_arrow_corner_right = __esm({
    "lib/arrow-corner-right.ts"() {
      IconArrowCornerRight = `<svg id="ArrowCornerRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M58.5,49.5h-25c-11.05,0-20-8.95-20-20V13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 58.5 58.5 49.5 49.5 40.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_corner_right_default = IconArrowCornerRight;
    }
  });

  // lib/arrow-corner-up.ts
  var arrow_corner_up_exports = {};
  __export(arrow_corner_up_exports, {
    IconArrowCornerUp: () => IconArrowCornerUp,
    default: () => arrow_corner_up_default
  });
  var IconArrowCornerUp, arrow_corner_up_default;
  var init_arrow_corner_up = __esm({
    "lib/arrow-corner-up.ts"() {
      IconArrowCornerUp = `<svg id="ArrowCornerUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M49.5,13.5v25c0,11.05-8.95,20-20,20H13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 22.5 49.5 13.5 40.5 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_corner_up_default = IconArrowCornerUp;
    }
  });

  // lib/arrow-diagonal-bl-tr-stop.ts
  var arrow_diagonal_bl_tr_stop_exports = {};
  __export(arrow_diagonal_bl_tr_stop_exports, {
    IconArrowDiagonalBlTrStop: () => IconArrowDiagonalBlTrStop,
    default: () => arrow_diagonal_bl_tr_stop_default
  });
  var IconArrowDiagonalBlTrStop, arrow_diagonal_bl_tr_stop_default;
  var init_arrow_diagonal_bl_tr_stop = __esm({
    "lib/arrow-diagonal-bl-tr-stop.ts"() {
      IconArrowDiagonalBlTrStop = `<svg id="ArrowDiagonalBlTrStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><polyline points="25.59 59.14 25.59 46.41 12.86 46.41" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="46.41 12.86 46.41 25.59 59.14 25.59" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="59.91" y1="12.09" x2="46.41" y2="25.59" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="25.59" y1="46.41" x2="12.09" y2="59.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="27" y1="27" x2="45" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_diagonal_bl_tr_stop_default = IconArrowDiagonalBlTrStop;
    }
  });

  // lib/arrow-diagonal-br-tl-stop.ts
  var arrow_diagonal_br_tl_stop_exports = {};
  __export(arrow_diagonal_br_tl_stop_exports, {
    IconArrowDiagonalBrTlStop: () => IconArrowDiagonalBrTlStop,
    default: () => arrow_diagonal_br_tl_stop_default
  });
  var IconArrowDiagonalBrTlStop, arrow_diagonal_br_tl_stop_default;
  var init_arrow_diagonal_br_tl_stop = __esm({
    "lib/arrow-diagonal-br-tl-stop.ts"() {
      IconArrowDiagonalBrTlStop = `<svg id="ArrowDiagonalBrTlStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><polyline points="59.14 46.41 46.41 46.41 46.41 59.14" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="12.86 25.59 25.59 25.59 25.59 12.86" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="12.09" y1="12.09" x2="25.59" y2="25.59" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="46.41" y1="46.41" x2="59.91" y2="59.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="27" y1="45" x2="45" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_diagonal_br_tl_stop_default = IconArrowDiagonalBrTlStop;
    }
  });

  // lib/arrow-diagonal-in-lt-br.ts
  var arrow_diagonal_in_lt_br_exports = {};
  __export(arrow_diagonal_in_lt_br_exports, {
    IconArrowDiagonalInLtBr: () => IconArrowDiagonalInLtBr,
    default: () => arrow_diagonal_in_lt_br_default
  });
  var IconArrowDiagonalInLtBr, arrow_diagonal_in_lt_br_default;
  var init_arrow_diagonal_in_lt_br = __esm({
    "lib/arrow-diagonal-in-lt-br.ts"() {
      IconArrowDiagonalInLtBr = `<svg id="ArrowDiagonalInLtBr" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><polyline points="17.36 30.09 30.09 30.09 30.09 17.36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="13.5" x2="30.09" y2="30.09" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><g><polyline points="54.64 41.91 41.91 41.91 41.91 54.64" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="58.5" x2="41.91" y2="41.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_diagonal_in_lt_br_default = IconArrowDiagonalInLtBr;
    }
  });

  // lib/arrow-diagonal-in-tr-bl.ts
  var arrow_diagonal_in_tr_bl_exports = {};
  __export(arrow_diagonal_in_tr_bl_exports, {
    IconArrowDiagonalInTrBl: () => IconArrowDiagonalInTrBl,
    default: () => arrow_diagonal_in_tr_bl_default
  });
  var IconArrowDiagonalInTrBl, arrow_diagonal_in_tr_bl_default;
  var init_arrow_diagonal_in_tr_bl = __esm({
    "lib/arrow-diagonal-in-tr-bl.ts"() {
      IconArrowDiagonalInTrBl = `<svg id="ArrowDiagonalInTrBl" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><polyline points="30.09 54.64 30.09 41.91 17.36 41.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="58.5" x2="30.09" y2="41.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><g><polyline points="41.91 17.36 41.91 30.09 54.64 30.09" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="13.5" x2="41.91" y2="30.09" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_diagonal_in_tr_bl_default = IconArrowDiagonalInTrBl;
    }
  });

  // lib/arrow-diagonal-tl-br-split.ts
  var arrow_diagonal_tl_br_split_exports = {};
  __export(arrow_diagonal_tl_br_split_exports, {
    IconArrowDiagonalTlBrSplit: () => IconArrowDiagonalTlBrSplit,
    default: () => arrow_diagonal_tl_br_split_default
  });
  var IconArrowDiagonalTlBrSplit, arrow_diagonal_tl_br_split_default;
  var init_arrow_diagonal_tl_br_split = __esm({
    "lib/arrow-diagonal-tl-br-split.ts"() {
      IconArrowDiagonalTlBrSplit = `<svg id="ArrowDiagonalTlBrSplit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="45" y1="45" x2="58.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="13.5" x2="27" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="26.23 13.5 13.5 13.5 13.5 26.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.77 58.5 58.5 58.5 58.5 45.77" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_diagonal_tl_br_split_default = IconArrowDiagonalTlBrSplit;
    }
  });

  // lib/arrow-diagonal-tl-br-stop.ts
  var arrow_diagonal_tl_br_stop_exports = {};
  __export(arrow_diagonal_tl_br_stop_exports, {
    IconArrowDiagonalTlBrStop: () => IconArrowDiagonalTlBrStop,
    default: () => arrow_diagonal_tl_br_stop_default
  });
  var IconArrowDiagonalTlBrStop, arrow_diagonal_tl_br_stop_default;
  var init_arrow_diagonal_tl_br_stop = __esm({
    "lib/arrow-diagonal-tl-br-stop.ts"() {
      IconArrowDiagonalTlBrStop = `<svg id="ArrowDiagonalTlBrStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><polyline points="26.23 13.5 13.5 13.5 13.5 26.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.77 58.5 58.5 58.5 58.5 45.77" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="45" x2="58.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="13.5" x2="27" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="45" y1="27" x2="27" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_diagonal_tl_br_stop_default = IconArrowDiagonalTlBrStop;
    }
  });

  // lib/arrow-diagonal-tl-br.ts
  var arrow_diagonal_tl_br_exports = {};
  __export(arrow_diagonal_tl_br_exports, {
    IconArrowDiagonalTlBr: () => IconArrowDiagonalTlBr,
    default: () => arrow_diagonal_tl_br_default
  });
  var IconArrowDiagonalTlBr, arrow_diagonal_tl_br_default;
  var init_arrow_diagonal_tl_br = __esm({
    "lib/arrow-diagonal-tl-br.ts"() {
      IconArrowDiagonalTlBr = `<svg id="ArrowDiagonalTlBr" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="13.5" x2="58.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="26.23 13.5 13.5 13.5 13.5 26.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.77 58.5 58.5 58.5 58.5 45.77" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_diagonal_tl_br_default = IconArrowDiagonalTlBr;
    }
  });

  // lib/arrow-diagonal-tr-bl-split.ts
  var arrow_diagonal_tr_bl_split_exports = {};
  __export(arrow_diagonal_tr_bl_split_exports, {
    IconArrowDiagonalTrBlSplit: () => IconArrowDiagonalTrBlSplit,
    default: () => arrow_diagonal_tr_bl_split_default
  });
  var IconArrowDiagonalTrBlSplit, arrow_diagonal_tr_bl_split_default;
  var init_arrow_diagonal_tr_bl_split = __esm({
    "lib/arrow-diagonal-tr-bl-split.ts"() {
      IconArrowDiagonalTrBlSplit = `<svg id="ArrowDiagonalTrBlSplit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="27" y1="45" x2="13.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="27" x2="58.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_diagonal_tr_bl_split_default = IconArrowDiagonalTrBlSplit;
    }
  });

  // lib/arrow-diagonal-tr-bl-stop.ts
  var arrow_diagonal_tr_bl_stop_exports = {};
  __export(arrow_diagonal_tr_bl_stop_exports, {
    IconArrowDiagonalTrBlStop: () => IconArrowDiagonalTrBlStop,
    default: () => arrow_diagonal_tr_bl_stop_default
  });
  var IconArrowDiagonalTrBlStop, arrow_diagonal_tr_bl_stop_default;
  var init_arrow_diagonal_tr_bl_stop = __esm({
    "lib/arrow-diagonal-tr-bl-stop.ts"() {
      IconArrowDiagonalTrBlStop = `<svg id="ArrowDiagonalTrBlStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><polyline points="58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="45" x2="13.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="13.5" x2="45" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="27" y1="27" x2="45" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_diagonal_tr_bl_stop_default = IconArrowDiagonalTrBlStop;
    }
  });

  // lib/arrow-diagonal-tr-bl.ts
  var arrow_diagonal_tr_bl_exports = {};
  __export(arrow_diagonal_tr_bl_exports, {
    IconArrowDiagonalTrBl: () => IconArrowDiagonalTrBl,
    default: () => arrow_diagonal_tr_bl_default
  });
  var IconArrowDiagonalTrBl, arrow_diagonal_tr_bl_default;
  var init_arrow_diagonal_tr_bl = __esm({
    "lib/arrow-diagonal-tr-bl.ts"() {
      IconArrowDiagonalTrBl = `<svg id="ArrowDiagonalTrBl" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="58.5" x2="58.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_diagonal_tr_bl_default = IconArrowDiagonalTrBl;
    }
  });

  // lib/arrow-down-copy.ts
  var arrow_down_copy_exports = {};
  __export(arrow_down_copy_exports, {
    IconArrowDownCopy: () => IconArrowDownCopy,
    default: () => arrow_down_copy_default
  });
  var IconArrowDownCopy, arrow_down_copy_default;
  var init_arrow_down_copy = __esm({
    "lib/arrow-down-copy.ts"() {
      IconArrowDownCopy = `<svg id="ArrowDownCopy" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="13.5" x2="36" y2="49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="58.5" x2="49.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 36 36 49.5 22.5 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_down_copy_default = IconArrowDownCopy;
    }
  });

  // lib/arrow-down-left.ts
  var arrow_down_left_exports = {};
  __export(arrow_down_left_exports, {
    IconArrowDownLeft: () => IconArrowDownLeft,
    default: () => arrow_down_left_default
  });
  var IconArrowDownLeft, arrow_down_left_default;
  var init_arrow_down_left = __esm({
    "lib/arrow-down-left.ts"() {
      IconArrowDownLeft = `<svg id="ArrowDownLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="49.82" y1="22.18" x2="18" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="18 34.91 18 54 37.09 54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_down_left_default = IconArrowDownLeft;
    }
  });

  // lib/arrow-down-right.ts
  var arrow_down_right_exports = {};
  __export(arrow_down_right_exports, {
    IconArrowDownRight: () => IconArrowDownRight,
    default: () => arrow_down_right_default
  });
  var IconArrowDownRight, arrow_down_right_default;
  var init_arrow_down_right = __esm({
    "lib/arrow-down-right.ts"() {
      IconArrowDownRight = `<svg id="ArrowDownRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="22.18" y1="22.18" x2="54" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="34.91 54 54 54 54 34.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_down_right_default = IconArrowDownRight;
    }
  });

  // lib/arrow-down.ts
  var arrow_down_exports = {};
  __export(arrow_down_exports, {
    IconArrowDown: () => IconArrowDown,
    default: () => arrow_down_default
  });
  var IconArrowDown, arrow_down_default;
  var init_arrow_down = __esm({
    "lib/arrow-down.ts"() {
      IconArrowDown = `<svg id="ArrowDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="13.5" x2="36" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 45 36 58.5 49.5 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_down_default = IconArrowDown;
    }
  });

  // lib/arrow-download.ts
  var arrow_download_exports = {};
  __export(arrow_download_exports, {
    IconArrowDownload: () => IconArrowDownload,
    default: () => arrow_download_default
  });
  var IconArrowDownload, arrow_download_default;
  var init_arrow_download = __esm({
    "lib/arrow-download.ts"() {
      IconArrowDownload = `<svg id="ArrowDownload" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="13.5" x2="36" y2="49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,49.5l-1.74,3.47c-1.69,3.39-5.16,5.53-8.94,5.53H19.68c-3.79,0-7.25-2.14-8.94-5.53l-1.74-3.47" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 36 36 49.5 49.5 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_download_default = IconArrowDownload;
    }
  });

  // lib/arrow-headed-corner-down.ts
  var arrow_headed_corner_down_exports = {};
  __export(arrow_headed_corner_down_exports, {
    IconArrowHeadedCornerDown: () => IconArrowHeadedCornerDown,
    default: () => arrow_headed_corner_down_default
  });
  var IconArrowHeadedCornerDown, arrow_headed_corner_down_default;
  var init_arrow_headed_corner_down = __esm({
    "lib/arrow-headed-corner-down.ts"() {
      IconArrowHeadedCornerDown = `<svg id="ArrowHeadedCornerDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="31.5 49.5 22.5 58.5 13.5 49.5 31.5 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="31.5 49.5 22.5 58.5 13.5 49.5 31.5 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,49.5v-16c0-11.05,8.95-20,20-20h16" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_corner_down_default = IconArrowHeadedCornerDown;
    }
  });

  // lib/arrow-headed-corner-left.ts
  var arrow_headed_corner_left_exports = {};
  __export(arrow_headed_corner_left_exports, {
    IconArrowHeadedCornerLeft: () => IconArrowHeadedCornerLeft,
    default: () => arrow_headed_corner_left_default
  });
  var IconArrowHeadedCornerLeft, arrow_headed_corner_left_default;
  var init_arrow_headed_corner_left = __esm({
    "lib/arrow-headed-corner-left.ts"() {
      IconArrowHeadedCornerLeft = `<svg id="ArrowHeadedCornerLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="22.5 13.5 13.5 22.5 22.5 31.5 22.5 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="22.5 13.5 13.5 22.5 22.5 31.5 22.5 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,22.5h16c11.05,0,20,8.95,20,20v16" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_corner_left_default = IconArrowHeadedCornerLeft;
    }
  });

  // lib/arrow-headed-corner-right.ts
  var arrow_headed_corner_right_exports = {};
  __export(arrow_headed_corner_right_exports, {
    IconArrowHeadedCornerRight: () => IconArrowHeadedCornerRight,
    default: () => arrow_headed_corner_right_default
  });
  var IconArrowHeadedCornerRight, arrow_headed_corner_right_default;
  var init_arrow_headed_corner_right = __esm({
    "lib/arrow-headed-corner-right.ts"() {
      IconArrowHeadedCornerRight = `<svg id="ArrowHeadedCornerRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="49.5 58.5 58.5 49.5 49.5 40.5 49.5 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="49.5 58.5 58.5 49.5 49.5 40.5 49.5 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,49.5h-16c-11.05,0-20-8.95-20-20V13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_corner_right_default = IconArrowHeadedCornerRight;
    }
  });

  // lib/arrow-headed-corner-up.ts
  var arrow_headed_corner_up_exports = {};
  __export(arrow_headed_corner_up_exports, {
    IconArrowHeadedCornerUp: () => IconArrowHeadedCornerUp,
    default: () => arrow_headed_corner_up_default
  });
  var IconArrowHeadedCornerUp, arrow_headed_corner_up_default;
  var init_arrow_headed_corner_up = __esm({
    "lib/arrow-headed-corner-up.ts"() {
      IconArrowHeadedCornerUp = `<svg id="ArrowHeadedCornerUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="58.5 22.5 49.5 13.5 40.5 22.5 58.5 22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="58.5 22.5 49.5 13.5 40.5 22.5 58.5 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,22.5v16c0,11.05-8.95,20-20,20H13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_corner_up_default = IconArrowHeadedCornerUp;
    }
  });

  // lib/arrow-headed-diagonal-bl-tr-stop.ts
  var arrow_headed_diagonal_bl_tr_stop_exports = {};
  __export(arrow_headed_diagonal_bl_tr_stop_exports, {
    IconArrowHeadedDiagonalBlTrStop: () => IconArrowHeadedDiagonalBlTrStop,
    default: () => arrow_headed_diagonal_bl_tr_stop_default
  });
  var IconArrowHeadedDiagonalBlTrStop, arrow_headed_diagonal_bl_tr_stop_default;
  var init_arrow_headed_diagonal_bl_tr_stop = __esm({
    "lib/arrow-headed-diagonal-bl-tr-stop.ts"() {
      IconArrowHeadedDiagonalBlTrStop = `<svg id="ArrowHeadedDiagonalBlTrStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="25.59 46.41 12.86 46.41 25.59 59.14 25.59 46.41" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="46.41 12.86 46.41 25.59 59.14 25.59 46.41 12.86" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><line x1="59.91" y1="12.09" x2="52.78" y2="19.22" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="19.22" y1="52.78" x2="12.09" y2="59.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><g><polygon points="25.59 46.41 12.86 46.41 25.59 59.14 25.59 46.41" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="46.41 12.86 46.41 25.59 59.14 25.59 46.41 12.86" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="27" y1="27" x2="45" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_diagonal_bl_tr_stop_default = IconArrowHeadedDiagonalBlTrStop;
    }
  });

  // lib/arrow-headed-diagonal-br-tl-stop.ts
  var arrow_headed_diagonal_br_tl_stop_exports = {};
  __export(arrow_headed_diagonal_br_tl_stop_exports, {
    IconArrowHeadedDiagonalBrTlStop: () => IconArrowHeadedDiagonalBrTlStop,
    default: () => arrow_headed_diagonal_br_tl_stop_default
  });
  var IconArrowHeadedDiagonalBrTlStop, arrow_headed_diagonal_br_tl_stop_default;
  var init_arrow_headed_diagonal_br_tl_stop = __esm({
    "lib/arrow-headed-diagonal-br-tl-stop.ts"() {
      IconArrowHeadedDiagonalBrTlStop = `<svg id="ArrowHeadedDiagonalBrTlStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="46.41 46.41 46.41 59.14 59.14 46.41 46.41 46.41" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="12.86 25.59 25.59 25.59 25.59 12.86 12.86 25.59" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><line x1="12.09" y1="12.09" x2="19.22" y2="19.22" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="52.78" y1="52.78" x2="59.91" y2="59.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><g><polygon points="46.41 46.41 46.41 59.14 59.14 46.41 46.41 46.41" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="12.86 25.59 25.59 25.59 25.59 12.86 12.86 25.59" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="27" y1="45" x2="45" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_diagonal_br_tl_stop_default = IconArrowHeadedDiagonalBrTlStop;
    }
  });

  // lib/arrow-headed-diagonal-in-lt-br.ts
  var arrow_headed_diagonal_in_lt_br_exports = {};
  __export(arrow_headed_diagonal_in_lt_br_exports, {
    IconArrowHeadedDiagonalInLtBr: () => IconArrowHeadedDiagonalInLtBr,
    default: () => arrow_headed_diagonal_in_lt_br_default
  });
  var IconArrowHeadedDiagonalInLtBr, arrow_headed_diagonal_in_lt_br_default;
  var init_arrow_headed_diagonal_in_lt_br = __esm({
    "lib/arrow-headed-diagonal-in-lt-br.ts"() {
      IconArrowHeadedDiagonalInLtBr = `<svg id="ArrowHeadedDiagonalInLtBr" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="17.36 30.09 30.09 30.09 30.09 17.36 17.36 30.09" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="41.91 41.91 41.91 54.64 54.64 41.91 41.91 41.91" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="13.5" y1="13.5" x2="23.72" y2="23.72" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="58.5" x2="48.28" y2="48.28" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="17.36 30.09 30.09 30.09 30.09 17.36 17.36 30.09" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="41.91 41.91 41.91 54.64 54.64 41.91 41.91 41.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_diagonal_in_lt_br_default = IconArrowHeadedDiagonalInLtBr;
    }
  });

  // lib/arrow-headed-diagonal-in-tr-bl.ts
  var arrow_headed_diagonal_in_tr_bl_exports = {};
  __export(arrow_headed_diagonal_in_tr_bl_exports, {
    IconArrowHeadedDiagonalInTrBl: () => IconArrowHeadedDiagonalInTrBl,
    default: () => arrow_headed_diagonal_in_tr_bl_default
  });
  var IconArrowHeadedDiagonalInTrBl, arrow_headed_diagonal_in_tr_bl_default;
  var init_arrow_headed_diagonal_in_tr_bl = __esm({
    "lib/arrow-headed-diagonal-in-tr-bl.ts"() {
      IconArrowHeadedDiagonalInTrBl = `<svg id="ArrowHeadedDiagonalInTrBl" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="17.36 41.91 30.09 54.64 30.09 41.91 17.36 41.91" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="41.91 30.09 54.64 30.09 41.91 17.36 41.91 30.09" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="13.5" y1="58.5" x2="23.72" y2="48.28" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="13.5" x2="48.28" y2="23.72" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="17.36 41.91 30.09 54.64 30.09 41.91 17.36 41.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="41.91 30.09 54.64 30.09 41.91 17.36 41.91 30.09" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_diagonal_in_tr_bl_default = IconArrowHeadedDiagonalInTrBl;
    }
  });

  // lib/arrow-headed-diagonal-tl-br-split.ts
  var arrow_headed_diagonal_tl_br_split_exports = {};
  __export(arrow_headed_diagonal_tl_br_split_exports, {
    IconArrowHeadedDiagonalTlBrSplit: () => IconArrowHeadedDiagonalTlBrSplit,
    default: () => arrow_headed_diagonal_tl_br_split_default
  });
  var IconArrowHeadedDiagonalTlBrSplit, arrow_headed_diagonal_tl_br_split_default;
  var init_arrow_headed_diagonal_tl_br_split = __esm({
    "lib/arrow-headed-diagonal-tl-br-split.ts"() {
      IconArrowHeadedDiagonalTlBrSplit = `<svg id="ArrowHeadedDiagonalTlBrSplit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="13.5 13.5 13.5 26.23 26.23 13.5 13.5 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><line x1="45" y1="45" x2="52.14" y2="52.14" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="19.86" y1="19.86" x2="27" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><g><polygon points="13.5 13.5 13.5 26.23 26.23 13.5 13.5 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_diagonal_tl_br_split_default = IconArrowHeadedDiagonalTlBrSplit;
    }
  });

  // lib/arrow-headed-diagonal-tl-br-stop.ts
  var arrow_headed_diagonal_tl_br_stop_exports = {};
  __export(arrow_headed_diagonal_tl_br_stop_exports, {
    IconArrowHeadedDiagonalTlBrStop: () => IconArrowHeadedDiagonalTlBrStop,
    default: () => arrow_headed_diagonal_tl_br_stop_default
  });
  var IconArrowHeadedDiagonalTlBrStop, arrow_headed_diagonal_tl_br_stop_default;
  var init_arrow_headed_diagonal_tl_br_stop = __esm({
    "lib/arrow-headed-diagonal-tl-br-stop.ts"() {
      IconArrowHeadedDiagonalTlBrStop = `<svg id="ArrowHeadedDiagonalTlBrStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="26.23 13.5 13.5 13.5 13.5 26.23 26.23 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><line x1="45" y1="45" x2="52.14" y2="52.14" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="19.86" y1="19.86" x2="27" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><g><polygon points="26.23 13.5 13.5 13.5 13.5 26.23 26.23 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="45" y1="27" x2="27" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_diagonal_tl_br_stop_default = IconArrowHeadedDiagonalTlBrStop;
    }
  });

  // lib/arrow-headed-diagonal-tl-br.ts
  var arrow_headed_diagonal_tl_br_exports = {};
  __export(arrow_headed_diagonal_tl_br_exports, {
    IconArrowHeadedDiagonalTlBr: () => IconArrowHeadedDiagonalTlBr,
    default: () => arrow_headed_diagonal_tl_br_default
  });
  var IconArrowHeadedDiagonalTlBr, arrow_headed_diagonal_tl_br_default;
  var init_arrow_headed_diagonal_tl_br = __esm({
    "lib/arrow-headed-diagonal-tl-br.ts"() {
      IconArrowHeadedDiagonalTlBr = `<svg id="ArrowHeadedDiagonalTlBr" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="13.5 13.5 13.5 26.23 26.23 13.5 13.5 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="26.23 13.5 13.5 13.5 13.5 26.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.77 58.5 58.5 58.5 58.5 45.77" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="19.86" y1="19.86" x2="52.14" y2="52.14" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="13.5 13.5 13.5 26.23 26.23 13.5 13.5 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_diagonal_tl_br_default = IconArrowHeadedDiagonalTlBr;
    }
  });

  // lib/arrow-headed-diagonal-tr-bl-split.ts
  var arrow_headed_diagonal_tr_bl_split_exports = {};
  __export(arrow_headed_diagonal_tr_bl_split_exports, {
    IconArrowHeadedDiagonalTrBlSplit: () => IconArrowHeadedDiagonalTrBlSplit,
    default: () => arrow_headed_diagonal_tr_bl_split_default
  });
  var IconArrowHeadedDiagonalTrBlSplit, arrow_headed_diagonal_tr_bl_split_default;
  var init_arrow_headed_diagonal_tr_bl_split = __esm({
    "lib/arrow-headed-diagonal-tr-bl-split.ts"() {
      IconArrowHeadedDiagonalTrBlSplit = `<svg id="ArrowHeadedDiagonalTrBlSplit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="58.5 13.5 45.77 13.5 58.5 26.23 58.5 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="13.5 58.5 26.23 58.5 13.5 45.77 13.5 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><g><polygon points="58.5 13.5 45.77 13.5 58.5 26.23 58.5 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="13.5 58.5 26.23 58.5 13.5 45.77 13.5 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="27" y1="45" x2="20.25" y2="51.75" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="52.14" y1="19.86" x2="45" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_diagonal_tr_bl_split_default = IconArrowHeadedDiagonalTrBlSplit;
    }
  });

  // lib/arrow-headed-diagonal-tr-bl-stop.ts
  var arrow_headed_diagonal_tr_bl_stop_exports = {};
  __export(arrow_headed_diagonal_tr_bl_stop_exports, {
    IconArrowHeadedDiagonalTrBlStop: () => IconArrowHeadedDiagonalTrBlStop,
    default: () => arrow_headed_diagonal_tr_bl_stop_default
  });
  var IconArrowHeadedDiagonalTrBlStop, arrow_headed_diagonal_tr_bl_stop_default;
  var init_arrow_headed_diagonal_tr_bl_stop = __esm({
    "lib/arrow-headed-diagonal-tr-bl-stop.ts"() {
      IconArrowHeadedDiagonalTrBlStop = `<svg id="ArrowHeadedDiagonalTrBlStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="45.77 13.5 58.5 26.23 58.5 13.5 45.77 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="26.23 58.5 13.5 45.77 13.5 58.5 26.23 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><line x1="27" y1="45" x2="19.86" y2="52.14" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="52.14" y1="19.86" x2="45" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><g><polygon points="45.77 13.5 58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="26.23 58.5 13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="27" y1="27" x2="45" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_diagonal_tr_bl_stop_default = IconArrowHeadedDiagonalTrBlStop;
    }
  });

  // lib/arrow-headed-diagonal-tr-bl.ts
  var arrow_headed_diagonal_tr_bl_exports = {};
  __export(arrow_headed_diagonal_tr_bl_exports, {
    IconArrowHeadedDiagonalTrBl: () => IconArrowHeadedDiagonalTrBl,
    default: () => arrow_headed_diagonal_tr_bl_default
  });
  var IconArrowHeadedDiagonalTrBl, arrow_headed_diagonal_tr_bl_default;
  var init_arrow_headed_diagonal_tr_bl = __esm({
    "lib/arrow-headed-diagonal-tr-bl.ts"() {
      IconArrowHeadedDiagonalTrBl = `<svg id="ArrowHeadedDiagonalTrBl" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="13.5 58.5 26.23 58.5 13.5 45.77 13.5 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45.77 13.5 58.5 26.23 58.5 13.5 45.77 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="19.48" y1="51.75" x2="52.14" y2="19.86" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="13.5 58.5 26.23 58.5 13.5 45.77 13.5 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45.77 13.5 58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_diagonal_tr_bl_default = IconArrowHeadedDiagonalTrBl;
    }
  });

  // lib/arrow-headed-down-left.ts
  var arrow_headed_down_left_exports = {};
  __export(arrow_headed_down_left_exports, {
    IconArrowHeadedDownLeft: () => IconArrowHeadedDownLeft,
    default: () => arrow_headed_down_left_default
  });
  var IconArrowHeadedDownLeft, arrow_headed_down_left_default;
  var init_arrow_headed_down_left = __esm({
    "lib/arrow-headed-down-left.ts"() {
      IconArrowHeadedDownLeft = `<svg id="ArrowHeadedDownLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="18 34.91 18 54 37.09 54 18 34.91" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="49.82" y1="22.18" x2="27.55" y2="44.45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="18 34.91 18 54 37.09 54 18 34.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_down_left_default = IconArrowHeadedDownLeft;
    }
  });

  // lib/arrow-headed-down-right.ts
  var arrow_headed_down_right_exports = {};
  __export(arrow_headed_down_right_exports, {
    IconArrowHeadedDownRight: () => IconArrowHeadedDownRight,
    default: () => arrow_headed_down_right_default
  });
  var IconArrowHeadedDownRight, arrow_headed_down_right_default;
  var init_arrow_headed_down_right = __esm({
    "lib/arrow-headed-down-right.ts"() {
      IconArrowHeadedDownRight = `<svg id="ArrowHeadedDownRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="22.18" y1="22.18" x2="44.45" y2="44.45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="54 34.91 54 54 34.91 54 54 34.91" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="54 34.91 54 54 34.91 54 54 34.91" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_down_right_default = IconArrowHeadedDownRight;
    }
  });

  // lib/arrow-headed-down-stop.ts
  var arrow_headed_down_stop_exports = {};
  __export(arrow_headed_down_stop_exports, {
    IconArrowHeadedDownStop: () => IconArrowHeadedDownStop,
    default: () => arrow_headed_down_stop_default
  });
  var IconArrowHeadedDownStop, arrow_headed_down_stop_default;
  var init_arrow_headed_down_stop = __esm({
    "lib/arrow-headed-down-stop.ts"() {
      IconArrowHeadedDownStop = `<svg id="ArrowHeadedDownStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="49.5 36 36 49.5 22.5 36 49.5 36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="49.5 36 36 49.5 22.5 36 49.5 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="13.5" x2="36" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="58.5" x2="22.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_down_stop_default = IconArrowHeadedDownStop;
    }
  });

  // lib/arrow-headed-down.ts
  var arrow_headed_down_exports = {};
  __export(arrow_headed_down_exports, {
    IconArrowHeadedDown: () => IconArrowHeadedDown,
    default: () => arrow_headed_down_default
  });
  var IconArrowHeadedDown, arrow_headed_down_default;
  var init_arrow_headed_down = __esm({
    "lib/arrow-headed-down.ts"() {
      IconArrowHeadedDown = `<svg id="ArrowHeadedDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="13.5" x2="36" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="49.5 45 36 58.5 22.5 45 49.5 45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="49.5 45 36 58.5 22.5 45 49.5 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_down_default = IconArrowHeadedDown;
    }
  });

  // lib/arrow-headed-download.ts
  var arrow_headed_download_exports = {};
  __export(arrow_headed_download_exports, {
    IconArrowHeadedDownload: () => IconArrowHeadedDownload,
    default: () => arrow_headed_download_default
  });
  var IconArrowHeadedDownload, arrow_headed_download_default;
  var init_arrow_headed_download = __esm({
    "lib/arrow-headed-download.ts"() {
      IconArrowHeadedDownload = `<svg id="ArrowHeadedDownload" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="49.5 36 36 49.5 22.5 36 49.5 36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="49.5 36 36 49.5 22.5 36 49.5 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="13.5" x2="36" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,49.5l-1.74,3.47c-1.69,3.39-5.16,5.53-8.94,5.53H19.68c-3.79,0-7.25-2.14-8.94-5.53l-1.74-3.47" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_download_default = IconArrowHeadedDownload;
    }
  });

  // lib/arrow-headed-in-center.ts
  var arrow_headed_in_center_exports = {};
  __export(arrow_headed_in_center_exports, {
    IconArrowHeadedInCenter: () => IconArrowHeadedInCenter,
    default: () => arrow_headed_in_center_default
  });
  var IconArrowHeadedInCenter, arrow_headed_in_center_default;
  var init_arrow_headed_in_center = __esm({
    "lib/arrow-headed-in-center.ts"() {
      IconArrowHeadedInCenter = `<svg id="ArrowHeadedInCenter" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><g ><polygon points="14.27 45 27 57.73 27 45 14.27 45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="57.73 27 45 14.27 45 27 57.73 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45 45 45 57.73 57.73 45 45 45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="14.27 27 27 27 27 14.27 14.27 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="58.5" y1="13.5" x2="51.75" y2="20.25" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="20.64" y1="51.36" x2="13.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="14.27 45 27 57.73 27 45 14.27 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="57.73 27 45 14.27 45 27 57.73 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45 45 45 57.73 57.73 45 45 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="14.27 27 27 27 27 14.27 14.27 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="13.5" y1="13.5" x2="20.64" y2="20.64" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="51.36" y1="51.36" x2="58.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="4.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_in_center_default = IconArrowHeadedInCenter;
    }
  });

  // lib/arrow-headed-in-diagonal.ts
  var arrow_headed_in_diagonal_exports = {};
  __export(arrow_headed_in_diagonal_exports, {
    IconArrowHeadedInDiagonal: () => IconArrowHeadedInDiagonal,
    default: () => arrow_headed_in_diagonal_default
  });
  var IconArrowHeadedInDiagonal, arrow_headed_in_diagonal_default;
  var init_arrow_headed_in_diagonal = __esm({
    "lib/arrow-headed-in-diagonal.ts"() {
      IconArrowHeadedInDiagonal = `<svg id="ArrowHeadedInDiagonal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="14.27 45 27 57.73 27 45 14.27 45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="57.73 27 45 14.27 45 27 57.73 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45 45 45 57.73 57.73 45 45 45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="14.27 27 27 27 27 14.27 14.27 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="27 57.73 27 45 14.27 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 14.27 45 27 57.73 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="13.5" x2="51.36" y2="20.64" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="20.64" y1="51.36" x2="13.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="57.73 45 45 45 45 57.73" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="14.27 27 27 27 27 14.27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="13.5" x2="20.25" y2="20.25" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="51.36" y1="51.36" x2="58.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="14.27 45 27 57.73 27 45 14.27 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="57.73 27 45 14.27 45 27 57.73 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45 45 45 57.73 57.73 45 45 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="14.27 27 27 27 27 14.27 14.27 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_in_diagonal_default = IconArrowHeadedInDiagonal;
    }
  });

  // lib/arrow-headed-in.ts
  var arrow_headed_in_exports = {};
  __export(arrow_headed_in_exports, {
    IconArrowHeadedIn: () => IconArrowHeadedIn,
    default: () => arrow_headed_in_default
  });
  var IconArrowHeadedIn, arrow_headed_in_default;
  var init_arrow_headed_in = __esm({
    "lib/arrow-headed-in.ts"() {
      IconArrowHeadedIn = `<svg id="ArrowHeadedIn" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="27 36 18 27 18 45 27 36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="54 45 54 27 45 36 54 45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="36 45 27 54 45 54 36 45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="36 27 45 18 27 18 36 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="18 45 27 36 18 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="54 27 45 36 54 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="64.09" y1="36" x2="54.55" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="36" x2="7.91" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 54 36 45 27 54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 18 36 27 45 18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="7.91" x2="36" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="36" y2="64.09" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="27 36 18 27 18 45 27 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="54 45 54 27 45 36 54 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 45 27 54 45 54 36 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 27 45 18 27 18 36 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_in_default = IconArrowHeadedIn;
    }
  });

  // lib/arrow-headed-left-right-split.ts
  var arrow_headed_left_right_split_exports = {};
  __export(arrow_headed_left_right_split_exports, {
    IconArrowHeadedLeftRightSplit: () => IconArrowHeadedLeftRightSplit,
    default: () => arrow_headed_left_right_split_default
  });
  var IconArrowHeadedLeftRightSplit, arrow_headed_left_right_split_default;
  var init_arrow_headed_left_right_split = __esm({
    "lib/arrow-headed-left-right-split.ts"() {
      IconArrowHeadedLeftRightSplit = `<svg id="ArrowHeadedLeftRightSplit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="17.88 26.88 9 36 18.12 44.88 17.88 26.88" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="53.88 27.12 54.12 45.12 63 36 53.88 27.12" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="45" y1="36" x2="54" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18.12" y1="36" x2="27" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="17.88 26.88 9 36 18.12 44.88 17.88 26.88" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="53.88 27.12 54.12 45.12 63 36 53.88 27.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_left_right_split_default = IconArrowHeadedLeftRightSplit;
    }
  });

  // lib/arrow-headed-left-right-stop.ts
  var arrow_headed_left_right_stop_exports = {};
  __export(arrow_headed_left_right_stop_exports, {
    IconArrowHeadedLeftRightStop: () => IconArrowHeadedLeftRightStop,
    default: () => arrow_headed_left_right_stop_default
  });
  var IconArrowHeadedLeftRightStop, arrow_headed_left_right_stop_default;
  var init_arrow_headed_left_right_stop = __esm({
    "lib/arrow-headed-left-right-stop.ts"() {
      IconArrowHeadedLeftRightStop = `<svg id="ArrowHeadedLeftRightStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="9 36 18.12 44.88 17.88 26.88 9 36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="53.88 27.12 54.12 45.12 63 36 53.88 27.12" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="45" y1="36" x2="53.88" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="36" x2="27" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="9 36 18.12 44.88 17.88 26.88 9 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="53.88 27.12 54.12 45.12 63 36 53.88 27.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="36" y1="22.5" x2="36" y2="49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_left_right_stop_default = IconArrowHeadedLeftRightStop;
    }
  });

  // lib/arrow-headed-left-right.ts
  var arrow_headed_left_right_exports = {};
  __export(arrow_headed_left_right_exports, {
    IconArrowHeadedLeftRight: () => IconArrowHeadedLeftRight,
    default: () => arrow_headed_left_right_default
  });
  var IconArrowHeadedLeftRight, arrow_headed_left_right_default;
  var init_arrow_headed_left_right = __esm({
    "lib/arrow-headed-left-right.ts"() {
      IconArrowHeadedLeftRight = `<svg id="ArrowHeadedLeftRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="17.88 26.88 9 36 18.12 44.88 17.88 26.88" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="53.88 27.12 54.12 45.12 63 36 53.88 27.12" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="18.12" y1="36" x2="53.88" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="17.88 26.88 9 36 18.12 44.88 17.88 26.88" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="53.88 27.12 54.12 45.12 63 36 53.88 27.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_left_right_default = IconArrowHeadedLeftRight;
    }
  });

  // lib/arrow-headed-left-stop.ts
  var arrow_headed_left_stop_exports = {};
  __export(arrow_headed_left_stop_exports, {
    IconArrowHeadedLeftStop: () => IconArrowHeadedLeftStop,
    default: () => arrow_headed_left_stop_default
  });
  var IconArrowHeadedLeftStop, arrow_headed_left_stop_default;
  var init_arrow_headed_left_stop = __esm({
    "lib/arrow-headed-left-stop.ts"() {
      IconArrowHeadedLeftStop = `<svg id="ArrowHeadedLeftStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="36 49.5 22.5 36 36 22.5 36 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="36 49.5 22.5 36 36 22.5 36 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="36" x2="36" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="22.5" x2="13.5" y2="49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_left_stop_default = IconArrowHeadedLeftStop;
    }
  });

  // lib/arrow-headed-left.ts
  var arrow_headed_left_exports = {};
  __export(arrow_headed_left_exports, {
    IconArrowHeadedLeft: () => IconArrowHeadedLeft,
    default: () => arrow_headed_left_default
  });
  var IconArrowHeadedLeft, arrow_headed_left_default;
  var init_arrow_headed_left = __esm({
    "lib/arrow-headed-left.ts"() {
      IconArrowHeadedLeft = `<svg id="ArrowHeadedLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="27 49.5 13.5 36 27 22.5 27 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="27 49.5 13.5 36 27 22.5 27 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="36" x2="27" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_left_default = IconArrowHeadedLeft;
    }
  });

  // lib/arrow-headed-out-center.ts
  var arrow_headed_out_center_exports = {};
  __export(arrow_headed_out_center_exports, {
    IconArrowHeadedOutCenter: () => IconArrowHeadedOutCenter,
    default: () => arrow_headed_out_center_default
  });
  var IconArrowHeadedOutCenter, arrow_headed_out_center_default;
  var init_arrow_headed_out_center = __esm({
    "lib/arrow-headed-out-center.ts"() {
      IconArrowHeadedOutCenter = `<svg id="ArrowHeadedOutCenter" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><g ><polygon points="26.23 58.5 13.5 45.77 13.5 58.5 26.23 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="58.5 13.5 45.77 13.5 58.5 26.23 58.5 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="26.23 13.5 13.5 13.5 13.5 26.23 26.23 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="45" y1="27" x2="52.14" y2="19.86" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="19.86" y1="52.14" x2="27" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="27" x2="19.86" y2="19.86" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="52.14" y1="52.14" x2="45" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="26.23 58.5 13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="58.5 13.5 45.77 13.5 58.5 26.23 58.5 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="26.23 13.5 13.5 13.5 13.5 26.23 26.23 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><circle cx="36" cy="36" r="4.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_out_center_default = IconArrowHeadedOutCenter;
    }
  });

  // lib/arrow-headed-reload-down-up.ts
  var arrow_headed_reload_down_up_exports = {};
  __export(arrow_headed_reload_down_up_exports, {
    IconArrowHeadedReloadDownUp: () => IconArrowHeadedReloadDownUp,
    default: () => arrow_headed_reload_down_up_default
  });
  var IconArrowHeadedReloadDownUp, arrow_headed_reload_down_up_default;
  var init_arrow_headed_reload_down_up = __esm({
    "lib/arrow-headed-reload-down-up.ts"() {
      IconArrowHeadedReloadDownUp = `<svg id="ArrowHeadedReloadDownUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="27 49.5 18 58.5 9 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="45 22.5 63 22.5 54 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="27 49.5 18 58.5 9 49.5 27 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,49.5v-16c0-11.05,8.95-20,20-20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="63 22.5 54 13.5 45 22.5 63 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,22.5v16c0,11.05-8.95,20-20,20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_reload_down_up_default = IconArrowHeadedReloadDownUp;
    }
  });

  // lib/arrow-headed-reload-left-right.ts
  var arrow_headed_reload_left_right_exports = {};
  __export(arrow_headed_reload_left_right_exports, {
    IconArrowHeadedReloadLeftRight: () => IconArrowHeadedReloadLeftRight,
    default: () => arrow_headed_reload_left_right_default
  });
  var IconArrowHeadedReloadLeftRight, arrow_headed_reload_left_right_default;
  var init_arrow_headed_reload_left_right = __esm({
    "lib/arrow-headed-reload-left-right.ts"() {
      IconArrowHeadedReloadLeftRight = `<svg id="ArrowHeadedReloadLeftRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="22.5 9 22.5 27 13.5 18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="49.5 63 58.5 54 49.5 45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="22.5 27 13.5 18 22.5 9 22.5 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,18h16c11.05,0,20,8.95,20,20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="49.5 63 58.5 54 49.5 45 49.5 63" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,54h-16c-11.05,0-20-8.95-20-20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_reload_left_right_default = IconArrowHeadedReloadLeftRight;
    }
  });

  // lib/arrow-headed-reload-right-left.ts
  var arrow_headed_reload_right_left_exports = {};
  __export(arrow_headed_reload_right_left_exports, {
    IconArrowHeadedReloadRightLeft: () => IconArrowHeadedReloadRightLeft,
    default: () => arrow_headed_reload_right_left_default
  });
  var IconArrowHeadedReloadRightLeft, arrow_headed_reload_right_left_default;
  var init_arrow_headed_reload_right_left = __esm({
    "lib/arrow-headed-reload-right-left.ts"() {
      IconArrowHeadedReloadRightLeft = `<svg id="ArrowHeadedReloadRightLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="49.5 27 58.5 18 49.5 9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="22.5 63 13.5 54 22.5 45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="49.5 27 58.5 18 49.5 9 49.5 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,18h-16c-11.05,0-20,8.95-20,20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="22.5 63 13.5 54 22.5 45 22.5 63" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,54h16c11.05,0,20-8.95,20-20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_reload_right_left_default = IconArrowHeadedReloadRightLeft;
    }
  });

  // lib/arrow-headed-reload-up-down.ts
  var arrow_headed_reload_up_down_exports = {};
  __export(arrow_headed_reload_up_down_exports, {
    IconArrowHeadedReloadUpDown: () => IconArrowHeadedReloadUpDown,
    default: () => arrow_headed_reload_up_down_default
  });
  var IconArrowHeadedReloadUpDown, arrow_headed_reload_up_down_default;
  var init_arrow_headed_reload_up_down = __esm({
    "lib/arrow-headed-reload-up-down.ts"() {
      IconArrowHeadedReloadUpDown = `<svg id="ArrowHeadedReloadUpDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="63 49.5 54 58.5 45 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="9 22.5 18 13.5 27 22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="63 49.5 54 58.5 45 49.5 63 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,49.5v-16c0-11.05-8.95-20-20-20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="9 22.5 18 13.5 27 22.5 9 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,22.5v16c0,11.05,8.95,20,20,20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_reload_up_down_default = IconArrowHeadedReloadUpDown;
    }
  });

  // lib/arrow-headed-return-down.ts
  var arrow_headed_return_down_exports = {};
  __export(arrow_headed_return_down_exports, {
    IconArrowHeadedReturnDown: () => IconArrowHeadedReturnDown,
    default: () => arrow_headed_return_down_default
  });
  var IconArrowHeadedReturnDown, arrow_headed_return_down_default;
  var init_arrow_headed_return_down = __esm({
    "lib/arrow-headed-return-down.ts"() {
      IconArrowHeadedReturnDown = `<svg id="ArrowHeadedReturnDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="54 36 45 45 36 36 54 36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M45,36v-9c0-7.46-6.04-13.5-13.5-13.5h0c-7.46,0-13.5,6.04-13.5,13.5v27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="54 36 45 45 36 36 54 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_return_down_default = IconArrowHeadedReturnDown;
    }
  });

  // lib/arrow-headed-return-left.ts
  var arrow_headed_return_left_exports = {};
  __export(arrow_headed_return_left_exports, {
    IconArrowHeadedReturnLeft: () => IconArrowHeadedReturnLeft,
    default: () => arrow_headed_return_left_default
  });
  var IconArrowHeadedReturnLeft, arrow_headed_return_left_default;
  var init_arrow_headed_return_left = __esm({
    "lib/arrow-headed-return-left.ts"() {
      IconArrowHeadedReturnLeft = `<svg id="ArrowHeadedReturnLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="36 54 27 45 36 36 36 54" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,45h9c7.46,0,13.5-6.04,13.5-13.5h0c0-7.46-6.04-13.5-13.5-13.5h-27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 54 27 45 36 36 36 54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_return_left_default = IconArrowHeadedReturnLeft;
    }
  });

  // lib/arrow-headed-return-right.ts
  var arrow_headed_return_right_exports = {};
  __export(arrow_headed_return_right_exports, {
    IconArrowHeadedReturnRight: () => IconArrowHeadedReturnRight,
    default: () => arrow_headed_return_right_default
  });
  var IconArrowHeadedReturnRight, arrow_headed_return_right_default;
  var init_arrow_headed_return_right = __esm({
    "lib/arrow-headed-return-right.ts"() {
      IconArrowHeadedReturnRight = `<svg id="ArrowHeadedReturnRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="36 36 45 27 36 18 36 36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,27h-9c-7.46,0-13.5,6.04-13.5,13.5h0c0,7.46,6.04,13.5,13.5,13.5h27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 36 45 27 36 18 36 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_return_right_default = IconArrowHeadedReturnRight;
    }
  });

  // lib/arrow-headed-return-up.ts
  var arrow_headed_return_up_exports = {};
  __export(arrow_headed_return_up_exports, {
    IconArrowHeadedReturnUp: () => IconArrowHeadedReturnUp,
    default: () => arrow_headed_return_up_default
  });
  var IconArrowHeadedReturnUp, arrow_headed_return_up_default;
  var init_arrow_headed_return_up = __esm({
    "lib/arrow-headed-return-up.ts"() {
      IconArrowHeadedReturnUp = `<svg id="ArrowHeadedReturnUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="36 36 27 27 18 36 36 36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M27,36v9c0,7.46,6.04,13.5,13.5,13.5h0c7.46,0,13.5-6.04,13.5-13.5v-27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 36 27 27 18 36 36 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_return_up_default = IconArrowHeadedReturnUp;
    }
  });

  // lib/arrow-headed-right.ts
  var arrow_headed_right_exports = {};
  __export(arrow_headed_right_exports, {
    IconArrowHeadedRight: () => IconArrowHeadedRight,
    default: () => arrow_headed_right_default
  });
  var IconArrowHeadedRight, arrow_headed_right_default;
  var init_arrow_headed_right = __esm({
    "lib/arrow-headed-right.ts"() {
      IconArrowHeadedRight = `<svg id="ArrowHeadedRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="45 49.5 58.5 36 45 22.5 45 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="45 49.5 58.5 36 45 22.5 45 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="36" x2="45" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_right_default = IconArrowHeadedRight;
    }
  });

  // lib/arrow-headed-rotate-bottom-left.ts
  var arrow_headed_rotate_bottom_left_exports = {};
  __export(arrow_headed_rotate_bottom_left_exports, {
    IconArrowHeadedRotateBottomLeft: () => IconArrowHeadedRotateBottomLeft,
    default: () => arrow_headed_rotate_bottom_left_default
  });
  var IconArrowHeadedRotateBottomLeft, arrow_headed_rotate_bottom_left_default;
  var init_arrow_headed_rotate_bottom_left = __esm({
    "lib/arrow-headed-rotate-bottom-left.ts"() {
      IconArrowHeadedRotateBottomLeft = `<svg id="ArrowHeadedRotateBottomLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="36 63 36 45 27 54 36 63" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="36 45 27 54 36 63" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,36c0-9.94,8.06-18,18-18s18,8.06,18,18-8.06,18-18,18h0" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 63 36 45 27 54 36 63" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_rotate_bottom_left_default = IconArrowHeadedRotateBottomLeft;
    }
  });

  // lib/arrow-headed-rotate-bottom-right.ts
  var arrow_headed_rotate_bottom_right_exports = {};
  __export(arrow_headed_rotate_bottom_right_exports, {
    IconArrowHeadedRotateBottomRight: () => IconArrowHeadedRotateBottomRight,
    default: () => arrow_headed_rotate_bottom_right_default
  });
  var IconArrowHeadedRotateBottomRight, arrow_headed_rotate_bottom_right_default;
  var init_arrow_headed_rotate_bottom_right = __esm({
    "lib/arrow-headed-rotate-bottom-right.ts"() {
      IconArrowHeadedRotateBottomRight = `<svg id="ArrowHeadedRotateBottomRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="36 45 36 63 45 54 36 45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="36 45 45 54 36 63" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,36c0-9.94-8.06-18-18-18s-18,8.06-18,18c0,9.94,8.06,18,18,18h0" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 45 36 63 45 54 36 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_rotate_bottom_right_default = IconArrowHeadedRotateBottomRight;
    }
  });

  // lib/arrow-headed-rotate-top-left.ts
  var arrow_headed_rotate_top_left_exports = {};
  __export(arrow_headed_rotate_top_left_exports, {
    IconArrowHeadedRotateTopLeft: () => IconArrowHeadedRotateTopLeft,
    default: () => arrow_headed_rotate_top_left_default
  });
  var IconArrowHeadedRotateTopLeft, arrow_headed_rotate_top_left_default;
  var init_arrow_headed_rotate_top_left = __esm({
    "lib/arrow-headed-rotate-top-left.ts"() {
      IconArrowHeadedRotateTopLeft = `<svg id="ArrowHeadedRotateTopLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="36 9 27 18 36 27 36 9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="36 27 27 18 36 9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,36c0,9.94,8.06,18,18,18s18-8.06,18-18c0-9.94-8.06-18-18-18h0" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 9 27 18 36 27 36 9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_rotate_top_left_default = IconArrowHeadedRotateTopLeft;
    }
  });

  // lib/arrow-headed-rotate-top-right.ts
  var arrow_headed_rotate_top_right_exports = {};
  __export(arrow_headed_rotate_top_right_exports, {
    IconArrowHeadedRotateTopRight: () => IconArrowHeadedRotateTopRight,
    default: () => arrow_headed_rotate_top_right_default
  });
  var IconArrowHeadedRotateTopRight, arrow_headed_rotate_top_right_default;
  var init_arrow_headed_rotate_top_right = __esm({
    "lib/arrow-headed-rotate-top-right.ts"() {
      IconArrowHeadedRotateTopRight = `<svg id="ArrowHeadedRotateTopRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="36 9 36 27 45 18 36 9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="36 27 45 18 36 9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,36c0,9.94-8.06,18-18,18s-18-8.06-18-18,8.06-18,18-18h0" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 9 36 27 45 18 36 9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_rotate_top_right_default = IconArrowHeadedRotateTopRight;
    }
  });

  // lib/arrow-headed-rounded-left-up.ts
  var arrow_headed_rounded_left_up_exports = {};
  __export(arrow_headed_rounded_left_up_exports, {
    IconArrowHeadedRoundedLeftUp: () => IconArrowHeadedRoundedLeftUp,
    default: () => arrow_headed_rounded_left_up_default
  });
  var IconArrowHeadedRoundedLeftUp, arrow_headed_rounded_left_up_default;
  var init_arrow_headed_rounded_left_up = __esm({
    "lib/arrow-headed-rounded-left-up.ts"() {
      IconArrowHeadedRoundedLeftUp = `<svg id="ArrowHeadedRoundedLeftUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="58.5 22.5 49.5 13.5 40.5 22.5 58.5 22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="22.5 58.5 13.5 49.5 22.5 40.5 22.5 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="58.5 22.5 49.5 13.5 40.5 22.5 58.5 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,22.5v7c0,11.05-8.95,20-20,20h-7" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="22.5 58.5 13.5 49.5 22.5 40.5 22.5 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_rounded_left_up_default = IconArrowHeadedRoundedLeftUp;
    }
  });

  // lib/arrow-headed-rounded-right-down.ts
  var arrow_headed_rounded_right_down_exports = {};
  __export(arrow_headed_rounded_right_down_exports, {
    IconArrowHeadedRoundedRightDown: () => IconArrowHeadedRoundedRightDown,
    default: () => arrow_headed_rounded_right_down_default
  });
  var IconArrowHeadedRoundedRightDown, arrow_headed_rounded_right_down_default;
  var init_arrow_headed_rounded_right_down = __esm({
    "lib/arrow-headed-rounded-right-down.ts"() {
      IconArrowHeadedRoundedRightDown = `<svg id="ArrowHeadedRoundedRightDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="31.5 49.5 22.5 58.5 13.5 49.5 31.5 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="49.5 31.5 58.5 22.5 49.5 13.5 49.5 31.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="31.5 49.5 22.5 58.5 13.5 49.5 31.5 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,49.5v-7c0-11.05,8.95-20,20-20h7" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="49.5 31.5 58.5 22.5 49.5 13.5 49.5 31.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_rounded_right_down_default = IconArrowHeadedRoundedRightDown;
    }
  });

  // lib/arrow-headed-rounded-right-up.ts
  var arrow_headed_rounded_right_up_exports = {};
  __export(arrow_headed_rounded_right_up_exports, {
    IconArrowHeadedRoundedRightUp: () => IconArrowHeadedRoundedRightUp,
    default: () => arrow_headed_rounded_right_up_default
  });
  var IconArrowHeadedRoundedRightUp, arrow_headed_rounded_right_up_default;
  var init_arrow_headed_rounded_right_up = __esm({
    "lib/arrow-headed-rounded-right-up.ts"() {
      IconArrowHeadedRoundedRightUp = `<svg id="ArrowHeadedRoundedRightUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="49.5 58.5 58.5 49.5 49.5 40.5 49.5 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="31.5 22.5 22.5 13.5 13.5 22.5 31.5 22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="49.5 58.5 58.5 49.5 49.5 40.5 49.5 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,49.5h-7c-11.05,0-20-8.95-20-20v-7" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="31.5 22.5 22.5 13.5 13.5 22.5 31.5 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_rounded_right_up_default = IconArrowHeadedRoundedRightUp;
    }
  });

  // lib/arrow-headed-rouned-left-down.ts
  var arrow_headed_rouned_left_down_exports = {};
  __export(arrow_headed_rouned_left_down_exports, {
    IconArrowHeadedRounedLeftDown: () => IconArrowHeadedRounedLeftDown,
    default: () => arrow_headed_rouned_left_down_default
  });
  var IconArrowHeadedRounedLeftDown, arrow_headed_rouned_left_down_default;
  var init_arrow_headed_rouned_left_down = __esm({
    "lib/arrow-headed-rouned-left-down.ts"() {
      IconArrowHeadedRounedLeftDown = `<svg id="ArrowHeadedRounedLeftDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="22.5 31.5 13.5 22.5 22.5 13.5 22.5 31.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="58.5 49.5 49.5 58.5 40.5 49.5 58.5 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="22.5 31.5 13.5 22.5 22.5 13.5 22.5 31.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,22.5h7c11.05,0,20,8.95,20,20v7" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="58.5 49.5 49.5 58.5 40.5 49.5 58.5 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_rouned_left_down_default = IconArrowHeadedRounedLeftDown;
    }
  });

  // lib/arrow-headed-share.ts
  var arrow_headed_share_exports = {};
  __export(arrow_headed_share_exports, {
    IconArrowHeadedShare: () => IconArrowHeadedShare,
    default: () => arrow_headed_share_default
  });
  var IconArrowHeadedShare, arrow_headed_share_default;
  var init_arrow_headed_share = __esm({
    "lib/arrow-headed-share.ts"() {
      IconArrowHeadedShare = `<svg id="ArrowHeadedShare" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="27 31.5 18 22.5 27 13.5 27 31.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M63,49.5l-1.74,3.47c-1.69,3.39-5.16,5.53-8.94,5.53H19.68c-3.79,0-7.25-2.14-8.94-5.53l-1.74-3.47" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="27 31.5 18 22.5 27 13.5 27 31.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M27,22.5h2.5c11.05,0,20,8.95,20,20v7" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_share_default = IconArrowHeadedShare;
    }
  });

  // lib/arrow-headed-spread-split.ts
  var arrow_headed_spread_split_exports = {};
  __export(arrow_headed_spread_split_exports, {
    IconArrowHeadedSpreadSplit: () => IconArrowHeadedSpreadSplit,
    default: () => arrow_headed_spread_split_default
  });
  var IconArrowHeadedSpreadSplit, arrow_headed_spread_split_default;
  var init_arrow_headed_spread_split = __esm({
    "lib/arrow-headed-spread-split.ts"() {
      IconArrowHeadedSpreadSplit = `<svg id="ArrowHeadedSpreadSplit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="13.5 58.5 26.23 58.5 13.5 45.77 13.5 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45.77 13.5 58.5 26.23 58.5 13.5 45.77 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="13.5 13.5 13.5 26.23 26.23 13.5 13.5 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="27" x2="52.14" y2="19.86" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="19.86" y1="52.14" x2="27" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.77 58.5 58.5 58.5 58.5 45.77" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="26.23 13.5 13.5 13.5 13.5 26.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="27" x2="19.86" y2="19.86" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="51.75" y1="51.75" x2="45" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="13.5 58.5 26.23 58.5 13.5 45.77 13.5 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45.77 13.5 58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="13.5 13.5 13.5 26.23 26.23 13.5 13.5 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_spread_split_default = IconArrowHeadedSpreadSplit;
    }
  });

  // lib/arrow-headed-spread.ts
  var arrow_headed_spread_exports = {};
  __export(arrow_headed_spread_exports, {
    IconArrowHeadedSpread: () => IconArrowHeadedSpread,
    default: () => arrow_headed_spread_default
  });
  var IconArrowHeadedSpread, arrow_headed_spread_default;
  var init_arrow_headed_spread = __esm({
    "lib/arrow-headed-spread.ts"() {
      IconArrowHeadedSpread = `<svg id="ArrowHeadedSpread" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="13.5 58.5 26.23 58.5 13.5 45.77 13.5 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45.77 13.5 58.5 26.23 58.5 13.5 45.77 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="13.5 13.5 13.5 26.23 26.23 13.5 13.5 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="19.86" y1="52.14" x2="52.14" y2="19.86" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.77 58.5 58.5 58.5 58.5 45.77" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="26.23 13.5 13.5 13.5 13.5 26.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="52.14" y1="52.14" x2="19.86" y2="19.86" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="13.5 58.5 26.23 58.5 13.5 45.77 13.5 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45.77 13.5 58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45.77 58.5 58.5 58.5 58.5 45.77 45.77 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="13.5 13.5 13.5 26.23 26.23 13.5 13.5 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_spread_default = IconArrowHeadedSpread;
    }
  });

  // lib/arrow-headed-twoway-diagonal-lr.ts
  var arrow_headed_twoway_diagonal_lr_exports = {};
  __export(arrow_headed_twoway_diagonal_lr_exports, {
    IconArrowHeadedTwowayDiagonalLr: () => IconArrowHeadedTwowayDiagonalLr,
    default: () => arrow_headed_twoway_diagonal_lr_default
  });
  var IconArrowHeadedTwowayDiagonalLr, arrow_headed_twoway_diagonal_lr_default;
  var init_arrow_headed_twoway_diagonal_lr = __esm({
    "lib/arrow-headed-twoway-diagonal-lr.ts"() {
      IconArrowHeadedTwowayDiagonalLr = `<svg id="ArrowHeadedTwowayDiagonalLr" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="28.43 11.75 27.95 27.95 43.86 12.04 28.43 11.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="44.05 44.05 28.14 59.96 43.57 60.25 44.05 44.05" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="60.25" y1="43.57" x2="36.29" y2="19.61" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="28.43 11.75 27.95 27.95 43.86 12.04 28.43 11.75" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="44.05 44.05 28.14 59.96 43.57 60.25 44.05 44.05" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="11.75" y1="28.43" x2="35.71" y2="52.39" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_twoway_diagonal_lr_default = IconArrowHeadedTwowayDiagonalLr;
    }
  });

  // lib/arrow-headed-twoway-diagonal-rl.ts
  var arrow_headed_twoway_diagonal_rl_exports = {};
  __export(arrow_headed_twoway_diagonal_rl_exports, {
    IconArrowHeadedTwowayDiagonalRl: () => IconArrowHeadedTwowayDiagonalRl,
    default: () => arrow_headed_twoway_diagonal_rl_default
  });
  var IconArrowHeadedTwowayDiagonalRl, arrow_headed_twoway_diagonal_rl_default;
  var init_arrow_headed_twoway_diagonal_rl = __esm({
    "lib/arrow-headed-twoway-diagonal-rl.ts"() {
      IconArrowHeadedTwowayDiagonalRl = `<svg id="ArrowHeadedTwowayDiagonalRl" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="11.75 43.57 27.95 44.05 12.04 28.14 11.75 43.57" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="60.25 28.43 44.05 27.95 59.96 43.86 60.25 28.43" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="43.57" y1="11.75" x2="19.61" y2="35.71" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="11.75 43.57 27.95 44.05 12.04 28.14 11.75 43.57" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="60.25 28.43 44.05 27.95 59.96 43.86 60.25 28.43" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="28.43" y1="60.25" x2="52.39" y2="36.29" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_twoway_diagonal_rl_default = IconArrowHeadedTwowayDiagonalRl;
    }
  });

  // lib/arrow-headed-twoway-horizontal.ts
  var arrow_headed_twoway_horizontal_exports = {};
  __export(arrow_headed_twoway_horizontal_exports, {
    IconArrowHeadedTwowayHorizontal: () => IconArrowHeadedTwowayHorizontal,
    default: () => arrow_headed_twoway_horizontal_default
  });
  var IconArrowHeadedTwowayHorizontal, arrow_headed_twoway_horizontal_default;
  var init_arrow_headed_twoway_horizontal = __esm({
    "lib/arrow-headed-twoway-horizontal.ts"() {
      IconArrowHeadedTwowayHorizontal = `<svg id="ArrowHeadedTwowayHorizontal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.5,14.78c-3.23,2.05-9,9.42-9,9.42l11.12,11.8V13.5s-.87.48-2.12,1.28Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="47.38 36 47.38 58.5 58.5 47.8 47.38 36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M22.5,14.78c-3.23,2.05-9,9.42-9,9.42l11.12,11.8V13.5s-.87.48-2.12,1.28Z" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="24.2" x2="24.62" y2="24.2" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="47.38 36 47.38 58.5 58.5 47.8 47.38 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="47.8" x2="47.25" y2="47.8" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_twoway_horizontal_default = IconArrowHeadedTwowayHorizontal;
    }
  });

  // lib/arrow-headed-twoway-vertical.ts
  var arrow_headed_twoway_vertical_exports = {};
  __export(arrow_headed_twoway_vertical_exports, {
    IconArrowHeadedTwowayVertical: () => IconArrowHeadedTwowayVertical,
    default: () => arrow_headed_twoway_vertical_default
  });
  var IconArrowHeadedTwowayVertical, arrow_headed_twoway_vertical_default;
  var init_arrow_headed_twoway_vertical = __esm({
    "lib/arrow-headed-twoway-vertical.ts"() {
      IconArrowHeadedTwowayVertical = `<svg id="ArrowHeadedTwowayVertical" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="24.2 58.5 36 47.38 13.5 47.38 24.2 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="47.8 13.5 36 24.62 58.5 24.62 47.8 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="24.2" y1="13.5" x2="24.2" y2="47.38" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.8" y1="58.5" x2="47.8" y2="24.62" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="24.2 58.5 36 47.38 13.5 47.38 24.2 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="47.8 13.5 36 24.62 58.5 24.62 47.8 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_twoway_vertical_default = IconArrowHeadedTwowayVertical;
    }
  });

  // lib/arrow-headed-up-down-split.ts
  var arrow_headed_up_down_split_exports = {};
  __export(arrow_headed_up_down_split_exports, {
    IconArrowHeadedUpDownSplit: () => IconArrowHeadedUpDownSplit,
    default: () => arrow_headed_up_down_split_default
  });
  var IconArrowHeadedUpDownSplit, arrow_headed_up_down_split_default;
  var init_arrow_headed_up_down_split = __esm({
    "lib/arrow-headed-up-down-split.ts"() {
      IconArrowHeadedUpDownSplit = `<svg id="ArrowHeadedUpDownSplit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="26.88 54.24 36 63.12 44.88 54 26.88 54.24" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="36 9.12 27.12 18.24 45.12 18 36 9.12" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="36" y1="27" x2="36" y2="18.24" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="36" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="26.88 54.24 36 63.12 44.88 54 26.88 54.24" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 9.12 27.12 18.24 45.12 18 36 9.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_up_down_split_default = IconArrowHeadedUpDownSplit;
    }
  });

  // lib/arrow-headed-up-down-stop.ts
  var arrow_headed_up_down_stop_exports = {};
  __export(arrow_headed_up_down_stop_exports, {
    IconArrowHeadedUpDownStop: () => IconArrowHeadedUpDownStop,
    default: () => arrow_headed_up_down_stop_default
  });
  var IconArrowHeadedUpDownStop, arrow_headed_up_down_stop_default;
  var init_arrow_headed_up_down_stop = __esm({
    "lib/arrow-headed-up-down-stop.ts"() {
      IconArrowHeadedUpDownStop = `<svg id="ArrowHeadedUpDownStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="36 63.12 44.88 54 26.88 54.24 36 63.12" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="36 9.12 27.12 18.24 45.12 18 36 9.12" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="36" y1="27" x2="36" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="36" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="36 63.12 44.88 54 26.88 54.24 36 63.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 9.12 27.12 18.24 45.12 18 36 9.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="36" x2="49.5" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_up_down_stop_default = IconArrowHeadedUpDownStop;
    }
  });

  // lib/arrow-headed-up-down.ts
  var arrow_headed_up_down_exports = {};
  __export(arrow_headed_up_down_exports, {
    IconArrowHeadedUpDown: () => IconArrowHeadedUpDown,
    default: () => arrow_headed_up_down_default
  });
  var IconArrowHeadedUpDown, arrow_headed_up_down_default;
  var init_arrow_headed_up_down = __esm({
    "lib/arrow-headed-up-down.ts"() {
      IconArrowHeadedUpDown = `<svg id="ArrowHeadedUpDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="26.88 54.24 36 63.12 44.88 54 26.88 54.24" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polygon points="36 9.12 27.12 18.24 45.12 18 36 9.12" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="36" y1="54.12" x2="36" y2="18.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="26.88 54.24 36 63.12 44.88 54 26.88 54.24" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="36 9.12 27.12 18.24 45.12 18 36 9.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      arrow_headed_up_down_default = IconArrowHeadedUpDown;
    }
  });

  // lib/arrow-headed-up-left.ts
  var arrow_headed_up_left_exports = {};
  __export(arrow_headed_up_left_exports, {
    IconArrowHeadedUpLeft: () => IconArrowHeadedUpLeft,
    default: () => arrow_headed_up_left_default
  });
  var IconArrowHeadedUpLeft, arrow_headed_up_left_default;
  var init_arrow_headed_up_left = __esm({
    "lib/arrow-headed-up-left.ts"() {
      IconArrowHeadedUpLeft = `<svg id="ArrowHeadedUpLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="18 37.09 18 18 37.09 18 18 37.09" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="18 37.09 18 18 37.09 18 18 37.09" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.82" y1="49.82" x2="27.55" y2="27.55" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_up_left_default = IconArrowHeadedUpLeft;
    }
  });

  // lib/arrow-headed-up-right.ts
  var arrow_headed_up_right_exports = {};
  __export(arrow_headed_up_right_exports, {
    IconArrowHeadedUpRight: () => IconArrowHeadedUpRight,
    default: () => arrow_headed_up_right_default
  });
  var IconArrowHeadedUpRight, arrow_headed_up_right_default;
  var init_arrow_headed_up_right = __esm({
    "lib/arrow-headed-up-right.ts"() {
      IconArrowHeadedUpRight = `<svg id="ArrowHeadedUpRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="54 37.09 54 18 34.91 18 54 37.09" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="54 37.09 54 18 34.91 18 54 37.09" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.18" y1="49.82" x2="44.45" y2="27.55" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_up_right_default = IconArrowHeadedUpRight;
    }
  });

  // lib/arrow-headed-up-stop76.ts
  var arrow_headed_up_stop76_exports = {};
  __export(arrow_headed_up_stop76_exports, {
    IconArrowHeadedUpStop76: () => IconArrowHeadedUpStop76,
    default: () => arrow_headed_up_stop76_default
  });
  var IconArrowHeadedUpStop76, arrow_headed_up_stop76_default;
  var init_arrow_headed_up_stop76 = __esm({
    "lib/arrow-headed-up-stop76.ts"() {
      IconArrowHeadedUpStop76 = `<svg id="ArrowHeadedUpStop76" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="36 49.5 49.5 36 36 22.5 36 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="36 49.5 49.5 36 36 22.5 36 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="36" x2="36" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="22.5" x2="58.5" y2="49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_up_stop76_default = IconArrowHeadedUpStop76;
    }
  });

  // lib/arrow-headed-up-stop78.ts
  var arrow_headed_up_stop78_exports = {};
  __export(arrow_headed_up_stop78_exports, {
    IconArrowHeadedUpStop78: () => IconArrowHeadedUpStop78,
    default: () => arrow_headed_up_stop78_default
  });
  var IconArrowHeadedUpStop78, arrow_headed_up_stop78_default;
  var init_arrow_headed_up_stop78 = __esm({
    "lib/arrow-headed-up-stop78.ts"() {
      IconArrowHeadedUpStop78 = `<svg id="ArrowHeadedUpStop78" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="49.5 36 36 22.5 22.5 36 49.5 36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="49.5 36 36 22.5 22.5 36 49.5 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="36" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="13.5" x2="22.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_up_stop78_default = IconArrowHeadedUpStop78;
    }
  });

  // lib/arrow-headed-up.ts
  var arrow_headed_up_exports = {};
  __export(arrow_headed_up_exports, {
    IconArrowHeadedUp: () => IconArrowHeadedUp,
    default: () => arrow_headed_up_default
  });
  var IconArrowHeadedUp, arrow_headed_up_default;
  var init_arrow_headed_up = __esm({
    "lib/arrow-headed-up.ts"() {
      IconArrowHeadedUp = `<svg id="ArrowHeadedUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="49.5 27 36 13.5 22.5 27 49.5 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="49.5 27 36 13.5 22.5 27 49.5 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="36" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_headed_up_default = IconArrowHeadedUp;
    }
  });

  // lib/arrow-headed-upload.ts
  var arrow_headed_upload_exports = {};
  __export(arrow_headed_upload_exports, {
    IconArrowHeadedUpload: () => IconArrowHeadedUpload,
    default: () => arrow_headed_upload_default
  });
  var IconArrowHeadedUpload, arrow_headed_upload_default;
  var init_arrow_headed_upload = __esm({
    "lib/arrow-headed-upload.ts"() {
      IconArrowHeadedUpload = `<svg id="ArrowHeadedUpload" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="49.5 27 36 13.5 22.5 27 49.5 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="49.5" x2="36" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,49.5l-1.74,3.47c-1.69,3.39-5.16,5.53-8.94,5.53H19.68c-3.79,0-7.25-2.14-8.94-5.53l-1.74-3.47" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="49.5 27 36 13.5 22.5 27 49.5 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/></svg>`;
      arrow_headed_upload_default = IconArrowHeadedUpload;
    }
  });

  // lib/arrow-in-center.ts
  var arrow_in_center_exports = {};
  __export(arrow_in_center_exports, {
    IconArrowInCenter: () => IconArrowInCenter,
    default: () => arrow_in_center_default
  });
  var IconArrowInCenter, arrow_in_center_default;
  var init_arrow_in_center = __esm({
    "lib/arrow-in-center.ts"() {
      IconArrowInCenter = `<svg id="ArrowInCenter" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="27 57.73 27 45 14.27 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 14.27 45 27 57.73 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="13.5" x2="45" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="45" x2="13.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="57.73 45 45 45 45 57.73" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="14.27 27 27 27 27 14.27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="13.5" x2="27" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="45" x2="58.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="4.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_in_center_default = IconArrowInCenter;
    }
  });

  // lib/arrow-invert.ts
  var arrow_invert_exports = {};
  __export(arrow_invert_exports, {
    IconArrowInvert: () => IconArrowInvert,
    default: () => arrow_invert_default
  });
  var IconArrowInvert, arrow_invert_default;
  var init_arrow_invert = __esm({
    "lib/arrow-invert.ts"() {
      IconArrowInvert = `<svg id="ArrowInvert" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="58.5" y1="13.5" x2="45" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="45" x2="13.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="13.5" x2="27" y2="27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="45" x2="58.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 57.73 27 45 14.27 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 14.27 45 27 57.73 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="57.73 45 45 45 45 57.73" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="14.27 27 27 27 27 14.27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_invert_default = IconArrowInvert;
    }
  });

  // lib/arrow-left-right-split.ts
  var arrow_left_right_split_exports = {};
  __export(arrow_left_right_split_exports, {
    IconArrowLeftRightSplit: () => IconArrowLeftRightSplit,
    default: () => arrow_left_right_split_default
  });
  var IconArrowLeftRightSplit, arrow_left_right_split_default;
  var init_arrow_left_right_split = __esm({
    "lib/arrow-left-right-split.ts"() {
      IconArrowLeftRightSplit = `<svg id="ArrowLeftRightSplit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="17.88 26.88 9 36 18.12 44.88" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="54.12 45.12 63 36 53.88 27.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="36" x2="63" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="36" x2="27" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_left_right_split_default = IconArrowLeftRightSplit;
    }
  });

  // lib/arrow-left-right-stop.ts
  var arrow_left_right_stop_exports = {};
  __export(arrow_left_right_stop_exports, {
    IconArrowLeftRightStop: () => IconArrowLeftRightStop,
    default: () => arrow_left_right_stop_default
  });
  var IconArrowLeftRightStop, arrow_left_right_stop_default;
  var init_arrow_left_right_stop = __esm({
    "lib/arrow-left-right-stop.ts"() {
      IconArrowLeftRightStop = `<svg id="ArrowLeftRightStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="17.88 26.88 9 36 18.12 44.88" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="54.12 45.12 63 36 53.88 27.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="36" x2="63" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="36" x2="22.5" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_left_right_stop_default = IconArrowLeftRightStop;
    }
  });

  // lib/arrow-left-right.ts
  var arrow_left_right_exports = {};
  __export(arrow_left_right_exports, {
    IconArrowLeftRight: () => IconArrowLeftRight,
    default: () => arrow_left_right_default
  });
  var IconArrowLeftRight, arrow_left_right_default;
  var init_arrow_left_right = __esm({
    "lib/arrow-left-right.ts"() {
      IconArrowLeftRight = `<svg id="ArrowLeftRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="17.88 26.88 9 36 18.12 44.88" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="54.12 45.12 63 36 53.88 27.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="36" x2="63" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_left_right_default = IconArrowLeftRight;
    }
  });

  // lib/arrow-left-stop.ts
  var arrow_left_stop_exports = {};
  __export(arrow_left_stop_exports, {
    IconArrowLeftStop: () => IconArrowLeftStop,
    default: () => arrow_left_stop_default
  });
  var IconArrowLeftStop, arrow_left_stop_default;
  var init_arrow_left_stop = __esm({
    "lib/arrow-left-stop.ts"() {
      IconArrowLeftStop = `<svg id="ArrowLeftStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="58.5" y1="36" x2="22.5" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="22.5" x2="13.5" y2="49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 49.5 22.5 36 36 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_left_stop_default = IconArrowLeftStop;
    }
  });

  // lib/arrow-left.ts
  var arrow_left_exports = {};
  __export(arrow_left_exports, {
    IconArrowLeft: () => IconArrowLeft,
    default: () => arrow_left_default
  });
  var IconArrowLeft, arrow_left_default;
  var init_arrow_left = __esm({
    "lib/arrow-left.ts"() {
      IconArrowLeft = `<svg id="ArrowLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="58.5" y1="36" x2="13.5" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 22.5 13.5 36 27 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_left_default = IconArrowLeft;
    }
  });

  // lib/arrow-out-center.ts
  var arrow_out_center_exports = {};
  __export(arrow_out_center_exports, {
    IconArrowOutCenter: () => IconArrowOutCenter,
    default: () => arrow_out_center_default
  });
  var IconArrowOutCenter, arrow_out_center_default;
  var init_arrow_out_center = __esm({
    "lib/arrow-out-center.ts"() {
      IconArrowOutCenter = `<svg id="ArrowOutCenter" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="27" x2="58.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="58.5" x2="27" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.77 58.5 58.5 58.5 58.5 45.77" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="26.23 13.5 13.5 13.5 13.5 26.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="27" x2="13.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="58.5" x2="45" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="4.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_out_center_default = IconArrowOutCenter;
    }
  });

  // lib/arrow-reload-down-up.ts
  var arrow_reload_down_up_exports = {};
  __export(arrow_reload_down_up_exports, {
    IconArrowReloadDownUp: () => IconArrowReloadDownUp,
    default: () => arrow_reload_down_up_default
  });
  var IconArrowReloadDownUp, arrow_reload_down_up_default;
  var init_arrow_reload_down_up = __esm({
    "lib/arrow-reload-down-up.ts"() {
      IconArrowReloadDownUp = `<svg id="ArrowReloadDownUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M18,58.5v-25c0-11.05,8.95-20,20-20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,13.5v25c0,11.05-8.95,20-20,20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="9 49.5 18 58.5 27 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="63 22.5 54 13.5 45 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_reload_down_up_default = IconArrowReloadDownUp;
    }
  });

  // lib/arrow-reload-left-right.ts
  var arrow_reload_left_right_exports = {};
  __export(arrow_reload_left_right_exports, {
    IconArrowReloadLeftRight: () => IconArrowReloadLeftRight,
    default: () => arrow_reload_left_right_default
  });
  var IconArrowReloadLeftRight, arrow_reload_left_right_default;
  var init_arrow_reload_left_right = __esm({
    "lib/arrow-reload-left-right.ts"() {
      IconArrowReloadLeftRight = `<svg id="ArrowReloadLeftRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M58.5,38c0-11.05-8.95-20-20-20H13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,34c0,11.05,8.95,20,20,20h25" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 63 58.5 54 49.5 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 9 13.5 18 22.5 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_reload_left_right_default = IconArrowReloadLeftRight;
    }
  });

  // lib/arrow-reload-right-left.ts
  var arrow_reload_right_left_exports = {};
  __export(arrow_reload_right_left_exports, {
    IconArrowReloadRightLeft: () => IconArrowReloadRightLeft,
    default: () => arrow_reload_right_left_default
  });
  var IconArrowReloadRightLeft, arrow_reload_right_left_default;
  var init_arrow_reload_right_left = __esm({
    "lib/arrow-reload-right-left.ts"() {
      IconArrowReloadRightLeft = `<svg id="ArrowReloadRightLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M58.5,18h-25c-11.05,0-20,8.95-20,20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,54h25c11.05,0,20-8.95,20-20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 9 58.5 18 49.5 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 63 13.5 54 22.5 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_reload_right_left_default = IconArrowReloadRightLeft;
    }
  });

  // lib/arrow-reload-up-down.ts
  var arrow_reload_up_down_exports = {};
  __export(arrow_reload_up_down_exports, {
    IconArrowReloadUpDown: () => IconArrowReloadUpDown,
    default: () => arrow_reload_up_down_default
  });
  var IconArrowReloadUpDown, arrow_reload_up_down_default;
  var init_arrow_reload_up_down = __esm({
    "lib/arrow-reload-up-down.ts"() {
      IconArrowReloadUpDown = `<svg id="ArrowReloadUpDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54,58.5v-25c0-11.05-8.95-20-20-20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,13.5v25c0,11.05,8.95,20,20,20" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="63 49.5 54 58.5 45 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="9 22.5 18 13.5 27 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_reload_up_down_default = IconArrowReloadUpDown;
    }
  });

  // lib/arrow-return-down.ts
  var arrow_return_down_exports = {};
  __export(arrow_return_down_exports, {
    IconArrowReturnDown: () => IconArrowReturnDown,
    default: () => arrow_return_down_default
  });
  var IconArrowReturnDown, arrow_return_down_default;
  var init_arrow_return_down = __esm({
    "lib/arrow-return-down.ts"() {
      IconArrowReturnDown = `<svg id="ArrowReturnDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M45,45v-18c0-7.46-6.04-13.5-13.5-13.5h0c-7.46,0-13.5,6.04-13.5,13.5v27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 36 45 45 54 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_return_down_default = IconArrowReturnDown;
    }
  });

  // lib/arrow-return-left.ts
  var arrow_return_left_exports = {};
  __export(arrow_return_left_exports, {
    IconArrowReturnLeft: () => IconArrowReturnLeft,
    default: () => arrow_return_left_default
  });
  var IconArrowReturnLeft, arrow_return_left_default;
  var init_arrow_return_left = __esm({
    "lib/arrow-return-left.ts"() {
      IconArrowReturnLeft = `<svg id="ArrowReturnLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M27,45h18c7.46,0,13.5-6.04,13.5-13.5h0c0-7.46-6.04-13.5-13.5-13.5h-27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 36 27 45 36 54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_return_left_default = IconArrowReturnLeft;
    }
  });

  // lib/arrow-return-right.ts
  var arrow_return_right_exports = {};
  __export(arrow_return_right_exports, {
    IconArrowReturnRight: () => IconArrowReturnRight,
    default: () => arrow_return_right_default
  });
  var IconArrowReturnRight, arrow_return_right_default;
  var init_arrow_return_right = __esm({
    "lib/arrow-return-right.ts"() {
      IconArrowReturnRight = `<svg id="ArrowReturnRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M45,27h-18c-7.46,0-13.5,6.04-13.5,13.5h0c0,7.46,6.04,13.5,13.5,13.5h27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 36 45 27 36 18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_return_right_default = IconArrowReturnRight;
    }
  });

  // lib/arrow-return-up.ts
  var arrow_return_up_exports = {};
  __export(arrow_return_up_exports, {
    IconArrowReturnUp: () => IconArrowReturnUp,
    default: () => arrow_return_up_default
  });
  var IconArrowReturnUp, arrow_return_up_default;
  var init_arrow_return_up = __esm({
    "lib/arrow-return-up.ts"() {
      IconArrowReturnUp = `<svg id="ArrowReturnUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M27,27v18c0,7.46,6.04,13.5,13.5,13.5h0c7.46,0,13.5-6.04,13.5-13.5v-27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 36 27 27 18 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_return_up_default = IconArrowReturnUp;
    }
  });

  // lib/arrow-right-stop.ts
  var arrow_right_stop_exports = {};
  __export(arrow_right_stop_exports, {
    IconArrowRightStop: () => IconArrowRightStop,
    default: () => arrow_right_stop_default
  });
  var IconArrowRightStop, arrow_right_stop_default;
  var init_arrow_right_stop = __esm({
    "lib/arrow-right-stop.ts"() {
      IconArrowRightStop = `<svg id="ArrowRightStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="36" x2="49.5" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="49.5" x2="58.5" y2="22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 22.5 49.5 36 36 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_right_stop_default = IconArrowRightStop;
    }
  });

  // lib/arrow-right.ts
  var arrow_right_exports = {};
  __export(arrow_right_exports, {
    IconArrowRight: () => IconArrowRight,
    default: () => arrow_right_default
  });
  var IconArrowRight, arrow_right_default;
  var init_arrow_right = __esm({
    "lib/arrow-right.ts"() {
      IconArrowRight = `<svg id="ArrowRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 49.5 58.5 36 45 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_right_default = IconArrowRight;
    }
  });

  // lib/arrow-roate-bottom-right.ts
  var arrow_roate_bottom_right_exports = {};
  __export(arrow_roate_bottom_right_exports, {
    IconArrowRoateBottomRight: () => IconArrowRoateBottomRight,
    default: () => arrow_roate_bottom_right_default
  });
  var IconArrowRoateBottomRight, arrow_roate_bottom_right_default;
  var init_arrow_roate_bottom_right = __esm({
    "lib/arrow-roate-bottom-right.ts"() {
      IconArrowRoateBottomRight = `<svg id="ArrowRoateBottomRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54,36c0-9.94-8.06-18-18-18s-18,8.06-18,18,8.06,18,18,18h9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 45 45 54 36 63" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_roate_bottom_right_default = IconArrowRoateBottomRight;
    }
  });

  // lib/arrow-rotate-bottom-left.ts
  var arrow_rotate_bottom_left_exports = {};
  __export(arrow_rotate_bottom_left_exports, {
    IconArrowRotateBottomLeft: () => IconArrowRotateBottomLeft,
    default: () => arrow_rotate_bottom_left_default
  });
  var IconArrowRotateBottomLeft, arrow_rotate_bottom_left_default;
  var init_arrow_rotate_bottom_left = __esm({
    "lib/arrow-rotate-bottom-left.ts"() {
      IconArrowRotateBottomLeft = `<svg id="ArrowRotateBottomLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M18,36c0-9.94,8.06-18,18-18s18,8.06,18,18-8.06,18-18,18h-9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 45 27 54 36 63" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_rotate_bottom_left_default = IconArrowRotateBottomLeft;
    }
  });

  // lib/arrow-rotate-top-left.ts
  var arrow_rotate_top_left_exports = {};
  __export(arrow_rotate_top_left_exports, {
    IconArrowRotateTopLeft: () => IconArrowRotateTopLeft,
    default: () => arrow_rotate_top_left_default
  });
  var IconArrowRotateTopLeft, arrow_rotate_top_left_default;
  var init_arrow_rotate_top_left = __esm({
    "lib/arrow-rotate-top-left.ts"() {
      IconArrowRotateTopLeft = `<svg id="ArrowRotateTopLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M18,36c0,9.94,8.06,18,18,18s18-8.06,18-18c0-9.94-8.06-18-18-18h-9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 27 27 18 36 9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_rotate_top_left_default = IconArrowRotateTopLeft;
    }
  });

  // lib/arrow-rotate-top-right.ts
  var arrow_rotate_top_right_exports = {};
  __export(arrow_rotate_top_right_exports, {
    IconArrowRotateTopRight: () => IconArrowRotateTopRight,
    default: () => arrow_rotate_top_right_default
  });
  var IconArrowRotateTopRight, arrow_rotate_top_right_default;
  var init_arrow_rotate_top_right = __esm({
    "lib/arrow-rotate-top-right.ts"() {
      IconArrowRotateTopRight = `<svg id="ArrowRotateTopRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54,36c0,9.94-8.06,18-18,18s-18-8.06-18-18,8.06-18,18-18h9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 27 45 18 36 9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_rotate_top_right_default = IconArrowRotateTopRight;
    }
  });

  // lib/arrow-rounded-left-down.ts
  var arrow_rounded_left_down_exports = {};
  __export(arrow_rounded_left_down_exports, {
    IconArrowRoundedLeftDown: () => IconArrowRoundedLeftDown,
    default: () => arrow_rounded_left_down_default
  });
  var IconArrowRoundedLeftDown, arrow_rounded_left_down_default;
  var init_arrow_rounded_left_down = __esm({
    "lib/arrow-rounded-left-down.ts"() {
      IconArrowRoundedLeftDown = `<svg id="ArrowRoundedLeftDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,22.5h16c11.05,0,20,8.95,20,20v16" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 13.5 13.5 22.5 22.5 31.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 49.5 49.5 58.5 58.5 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_rounded_left_down_default = IconArrowRoundedLeftDown;
    }
  });

  // lib/arrow-rounded-left-up.ts
  var arrow_rounded_left_up_exports = {};
  __export(arrow_rounded_left_up_exports, {
    IconArrowRoundedLeftUp: () => IconArrowRoundedLeftUp,
    default: () => arrow_rounded_left_up_default
  });
  var IconArrowRoundedLeftUp, arrow_rounded_left_up_default;
  var init_arrow_rounded_left_up = __esm({
    "lib/arrow-rounded-left-up.ts"() {
      IconArrowRoundedLeftUp = `<svg id="ArrowRoundedLeftUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,49.5h16c11.05,0,20-8.95,20-20V13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 22.5 49.5 13.5 40.5 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 40.5 13.5 49.5 22.5 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_rounded_left_up_default = IconArrowRoundedLeftUp;
    }
  });

  // lib/arrow-rounded-right-down.ts
  var arrow_rounded_right_down_exports = {};
  __export(arrow_rounded_right_down_exports, {
    IconArrowRoundedRightDown: () => IconArrowRoundedRightDown,
    default: () => arrow_rounded_right_down_default
  });
  var IconArrowRoundedRightDown, arrow_rounded_right_down_default;
  var init_arrow_rounded_right_down = __esm({
    "lib/arrow-rounded-right-down.ts"() {
      IconArrowRoundedRightDown = `<svg id="ArrowRoundedRightDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.5,58.5v-16c0-11.05,8.95-20,20-20h16" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 49.5 22.5 58.5 31.5 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 31.5 58.5 22.5 49.5 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_rounded_right_down_default = IconArrowRoundedRightDown;
    }
  });

  // lib/arrow-rounded-right-up.ts
  var arrow_rounded_right_up_exports = {};
  __export(arrow_rounded_right_up_exports, {
    IconArrowRoundedRightUp: () => IconArrowRoundedRightUp,
    default: () => arrow_rounded_right_up_default
  });
  var IconArrowRoundedRightUp, arrow_rounded_right_up_default;
  var init_arrow_rounded_right_up = __esm({
    "lib/arrow-rounded-right-up.ts"() {
      IconArrowRoundedRightUp = `<svg id="ArrowRoundedRightUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M58.5,49.5h-16c-11.05,0-20-8.95-20-20V13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 58.5 58.5 49.5 49.5 40.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="31.5 22.5 22.5 13.5 13.5 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_rounded_right_up_default = IconArrowRoundedRightUp;
    }
  });

  // lib/arrow-share.ts
  var arrow_share_exports = {};
  __export(arrow_share_exports, {
    IconArrowShare: () => IconArrowShare,
    default: () => arrow_share_default
  });
  var IconArrowShare, arrow_share_default;
  var init_arrow_share = __esm({
    "lib/arrow-share.ts"() {
      IconArrowShare = `<svg id="ArrowShare" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M63,49.5l-1.74,3.47c-1.69,3.39-5.16,5.53-8.94,5.53H19.68c-3.79,0-7.25-2.14-8.94-5.53l-1.74-3.47" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,22.5h11.5c11.05,0,20,8.95,20,20v7" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 13.5 18 22.5 27 31.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_share_default = IconArrowShare;
    }
  });

  // lib/arrow-spread-split.ts
  var arrow_spread_split_exports = {};
  __export(arrow_spread_split_exports, {
    IconArrowSpreadSplit: () => IconArrowSpreadSplit,
    default: () => arrow_spread_split_default
  });
  var IconArrowSpreadSplit, arrow_spread_split_default;
  var init_arrow_spread_split = __esm({
    "lib/arrow-spread-split.ts"() {
      IconArrowSpreadSplit = `<svg id="ArrowSpreadSplit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="45" y1="27" x2="58.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="58.5" x2="27" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="27" x2="13.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="58.5" x2="45" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.77 58.5 58.5 58.5 58.5 45.77" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="26.23 13.5 13.5 13.5 13.5 26.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_spread_split_default = IconArrowSpreadSplit;
    }
  });

  // lib/arrow-spread.ts
  var arrow_spread_exports = {};
  __export(arrow_spread_exports, {
    IconArrowSpread: () => IconArrowSpread,
    default: () => arrow_spread_default
  });
  var IconArrowSpread, arrow_spread_default;
  var init_arrow_spread = __esm({
    "lib/arrow-spread.ts"() {
      IconArrowSpread = `<svg id="ArrowSpread" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="58.5" x2="58.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="58.5" x2="13.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 45.77 13.5 58.5 26.23 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 26.23 58.5 13.5 45.77 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.77 58.5 58.5 58.5 58.5 45.77" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="26.23 13.5 13.5 13.5 13.5 26.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_spread_default = IconArrowSpread;
    }
  });

  // lib/arrow-transfer-bl-tr.ts
  var arrow_transfer_bl_tr_exports = {};
  __export(arrow_transfer_bl_tr_exports, {
    IconArrowTransferBlTr: () => IconArrowTransferBlTr,
    default: () => arrow_transfer_bl_tr_default
  });
  var IconArrowTransferBlTr, arrow_transfer_bl_tr_default;
  var init_arrow_transfer_bl_tr = __esm({
    "lib/arrow-transfer-bl-tr.ts"() {
      IconArrowTransferBlTr = `<svg id="ArrowTransferBlTr" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="26.45 58.27 58.27 26.45 58.27 45.55" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.73 26.45 13.73 45.55 45.55 13.73" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_transfer_bl_tr_default = IconArrowTransferBlTr;
    }
  });

  // lib/arrow-transfer-left-right.ts
  var arrow_transfer_left_right_exports = {};
  __export(arrow_transfer_left_right_exports, {
    IconArrowTransferLeftRight: () => IconArrowTransferLeftRight,
    default: () => arrow_transfer_left_right_default
  });
  var IconArrowTransferLeftRight, arrow_transfer_left_right_default;
  var init_arrow_transfer_left_right = __esm({
    "lib/arrow-transfer-left-right.ts"() {
      IconArrowTransferLeftRight = `<svg id="ArrowTransferLeftRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="13.5 45 58.5 45 45 58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 13.5 13.5 27 58.5 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_transfer_left_right_default = IconArrowTransferLeftRight;
    }
  });

  // lib/arrow-transfer-lt-br.ts
  var arrow_transfer_lt_br_exports = {};
  __export(arrow_transfer_lt_br_exports, {
    IconArrowTransferLtBr: () => IconArrowTransferLtBr,
    default: () => arrow_transfer_lt_br_default
  });
  var IconArrowTransferLtBr, arrow_transfer_lt_br_default;
  var init_arrow_transfer_lt_br = __esm({
    "lib/arrow-transfer-lt-br.ts"() {
      IconArrowTransferLtBr = `<svg id="ArrowTransferLtBr" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="58.27 45.32 26.45 13.5 45.55 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="26.45 58.05 45.55 58.05 13.73 26.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_transfer_lt_br_default = IconArrowTransferLtBr;
    }
  });

  // lib/arrow-transfer-up-down.ts
  var arrow_transfer_up_down_exports = {};
  __export(arrow_transfer_up_down_exports, {
    IconArrowTransferUpDown: () => IconArrowTransferUpDown,
    default: () => arrow_transfer_up_down_default
  });
  var IconArrowTransferUpDown, arrow_transfer_up_down_default;
  var init_arrow_transfer_up_down = __esm({
    "lib/arrow-transfer-up-down.ts"() {
      IconArrowTransferUpDown = `<svg id="ArrowTransferUpDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="45 58.5 45 13.5 58.5 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 45 27 58.5 27 13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_transfer_up_down_default = IconArrowTransferUpDown;
    }
  });

  // lib/arrow-twoway-diagonal-lr.ts
  var arrow_twoway_diagonal_lr_exports = {};
  __export(arrow_twoway_diagonal_lr_exports, {
    IconArrowTwowayDiagonalLr: () => IconArrowTwowayDiagonalLr,
    default: () => arrow_twoway_diagonal_lr_default
  });
  var IconArrowTwowayDiagonalLr, arrow_twoway_diagonal_lr_default;
  var init_arrow_twoway_diagonal_lr = __esm({
    "lib/arrow-twoway-diagonal-lr.ts"() {
      IconArrowTwowayDiagonalLr = `<svg id="ArrowTwowayDiagonalLr" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.73" y1="32.82" x2="42.36" y2="61.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="29.64 61.46 42.36 61.46 42.36 48.73" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.27" y1="39.18" x2="29.64" y2="10.54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="42.36 10.54 29.64 10.54 29.64 23.27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_twoway_diagonal_lr_default = IconArrowTwowayDiagonalLr;
    }
  });

  // lib/arrow-twoway-diagonal-rl.ts
  var arrow_twoway_diagonal_rl_exports = {};
  __export(arrow_twoway_diagonal_rl_exports, {
    IconArrowTwowayDiagonalRl: () => IconArrowTwowayDiagonalRl,
    default: () => arrow_twoway_diagonal_rl_default
  });
  var IconArrowTwowayDiagonalRl, arrow_twoway_diagonal_rl_default;
  var init_arrow_twoway_diagonal_rl = __esm({
    "lib/arrow-twoway-diagonal-rl.ts"() {
      IconArrowTwowayDiagonalRl = `<svg id="ArrowTwowayDiagonalRl" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="39.18" y1="13.73" x2="10.54" y2="42.36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="10.54 29.64 10.54 42.36 23.27 42.36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="32.82" y1="58.27" x2="61.46" y2="29.64" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="61.46 42.36 61.46 29.64 48.73 29.64" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_twoway_diagonal_rl_default = IconArrowTwowayDiagonalRl;
    }
  });

  // lib/arrow-twoway-horizontal.ts
  var arrow_twoway_horizontal_exports = {};
  __export(arrow_twoway_horizontal_exports, {
    IconArrowTwowayHorizontal: () => IconArrowTwowayHorizontal,
    default: () => arrow_twoway_horizontal_default
  });
  var IconArrowTwowayHorizontal, arrow_twoway_horizontal_default;
  var init_arrow_twoway_horizontal = __esm({
    "lib/arrow-twoway-horizontal.ts"() {
      IconArrowTwowayHorizontal = `<svg id="ArrowTwowayHorizontal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="54" y1="22.5" x2="13.5" y2="22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 13.5 13.5 22.5 22.5 31.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="49.5" x2="58.5" y2="49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 58.5 58.5 49.5 49.5 40.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_twoway_horizontal_default = IconArrowTwowayHorizontal;
    }
  });

  // lib/arrow-twoway-vertical.ts
  var arrow_twoway_vertical_exports = {};
  __export(arrow_twoway_vertical_exports, {
    IconArrowTwowayVertical: () => IconArrowTwowayVertical,
    default: () => arrow_twoway_vertical_default
  });
  var IconArrowTwowayVertical, arrow_twoway_vertical_default;
  var init_arrow_twoway_vertical = __esm({
    "lib/arrow-twoway-vertical.ts"() {
      IconArrowTwowayVertical = `<svg id="ArrowTwowayVertical" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="22.5" y1="18" x2="22.5" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 49.5 22.5 58.5 31.5 49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="54" x2="49.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 22.5 49.5 13.5 40.5 22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_twoway_vertical_default = IconArrowTwowayVertical;
    }
  });

  // lib/arrow-up-copy.ts
  var arrow_up_copy_exports = {};
  __export(arrow_up_copy_exports, {
    IconArrowUpCopy: () => IconArrowUpCopy,
    default: () => arrow_up_copy_default
  });
  var IconArrowUpCopy, arrow_up_copy_default;
  var init_arrow_up_copy = __esm({
    "lib/arrow-up-copy.ts"() {
      IconArrowUpCopy = `<svg id="ArrowUpCopy" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="58.5" x2="36" y2="22.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="13.5" x2="22.5" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 36 36 22.5 49.5 36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_up_copy_default = IconArrowUpCopy;
    }
  });

  // lib/arrow-up-down-split.ts
  var arrow_up_down_split_exports = {};
  __export(arrow_up_down_split_exports, {
    IconArrowUpDownSplit: () => IconArrowUpDownSplit,
    default: () => arrow_up_down_split_default
  });
  var IconArrowUpDownSplit, arrow_up_down_split_default;
  var init_arrow_up_down_split = __esm({
    "lib/arrow-up-down-split.ts"() {
      IconArrowUpDownSplit = `<svg id="ArrowUpDownSplit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="26.88 54.24 36 63.12 44.88 54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.12 18 36 9.12 27.12 18.24" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="9.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="63.12" x2="36" y2="45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_up_down_split_default = IconArrowUpDownSplit;
    }
  });

  // lib/arrow-up-down-stop.ts
  var arrow_up_down_stop_exports = {};
  __export(arrow_up_down_stop_exports, {
    IconArrowUpDownStop: () => IconArrowUpDownStop,
    default: () => arrow_up_down_stop_default
  });
  var IconArrowUpDownStop, arrow_up_down_stop_default;
  var init_arrow_up_down_stop = __esm({
    "lib/arrow-up-down-stop.ts"() {
      IconArrowUpDownStop = `<svg id="ArrowUpDownStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="26.88 54.24 36 63.12 44.88 54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.12 18 36 9.12 27.12 18.24" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="9.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="63.12" x2="36" y2="49.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="36" x2="49.5" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_up_down_stop_default = IconArrowUpDownStop;
    }
  });

  // lib/arrow-up-down.ts
  var arrow_up_down_exports = {};
  __export(arrow_up_down_exports, {
    IconArrowUpDown: () => IconArrowUpDown,
    default: () => arrow_up_down_default
  });
  var IconArrowUpDown, arrow_up_down_default;
  var init_arrow_up_down = __esm({
    "lib/arrow-up-down.ts"() {
      IconArrowUpDown = `<svg id="ArrowUpDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="26.88 54.24 36 63.12 44.88 54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.12 18 36 9.12 27.12 18.24" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="63.12" x2="36" y2="9.12" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_up_down_default = IconArrowUpDown;
    }
  });

  // lib/arrow-up-left.ts
  var arrow_up_left_exports = {};
  __export(arrow_up_left_exports, {
    IconArrowUpLeft: () => IconArrowUpLeft,
    default: () => arrow_up_left_default
  });
  var IconArrowUpLeft, arrow_up_left_default;
  var init_arrow_up_left = __esm({
    "lib/arrow-up-left.ts"() {
      IconArrowUpLeft = `<svg id="ArrowUpLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="49.82" y1="49.82" x2="18" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="37.09 18 18 18 18 37.09" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_up_left_default = IconArrowUpLeft;
    }
  });

  // lib/arrow-up-right.ts
  var arrow_up_right_exports = {};
  __export(arrow_up_right_exports, {
    IconArrowUpRight: () => IconArrowUpRight,
    default: () => arrow_up_right_default
  });
  var IconArrowUpRight, arrow_up_right_default;
  var init_arrow_up_right = __esm({
    "lib/arrow-up-right.ts"() {
      IconArrowUpRight = `<svg id="ArrowUpRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="22.18" y1="49.82" x2="54" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="54 37.09 54 18 34.91 18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_up_right_default = IconArrowUpRight;
    }
  });

  // lib/arrow-up.ts
  var arrow_up_exports = {};
  __export(arrow_up_exports, {
    IconArrowUp: () => IconArrowUp,
    default: () => arrow_up_default
  });
  var IconArrowUp, arrow_up_default;
  var init_arrow_up = __esm({
    "lib/arrow-up.ts"() {
      IconArrowUp = `<svg id="ArrowUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="58.5" x2="36" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 27 36 13.5 22.5 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_up_default = IconArrowUp;
    }
  });

  // lib/arrow-upload.ts
  var arrow_upload_exports = {};
  __export(arrow_upload_exports, {
    IconArrowUpload: () => IconArrowUpload,
    default: () => arrow_upload_default
  });
  var IconArrowUpload, arrow_upload_default;
  var init_arrow_upload = __esm({
    "lib/arrow-upload.ts"() {
      IconArrowUpload = `<svg id="ArrowUpload" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="49.5" x2="36" y2="13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,49.5l-1.74,3.47c-1.69,3.39-5.16,5.53-8.94,5.53H19.68c-3.79,0-7.25-2.14-8.94-5.53l-1.74-3.47" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 27 36 13.5 22.5 27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      arrow_upload_default = IconArrowUpload;
    }
  });

  // lib/chevron-connect2.ts
  var chevron_connect2_exports = {};
  __export(chevron_connect2_exports, {
    IconChevronConnect2: () => IconChevronConnect2,
    default: () => chevron_connect2_default
  });
  var IconChevronConnect2, chevron_connect2_default;
  var init_chevron_connect2 = __esm({
    "lib/chevron-connect2.ts"() {
      IconChevronConnect2 = `<svg id="ChevronConnect2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="9.34 13.61 27.23 31.5 45.11 13.61" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="62.66 58.16 45 40.5 27.34 58.16" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_connect2_default = IconChevronConnect2;
    }
  });

  // lib/chevron-connect.ts
  var chevron_connect_exports = {};
  __export(chevron_connect_exports, {
    IconChevronConnect: () => IconChevronConnect,
    default: () => chevron_connect_default
  });
  var IconChevronConnect, chevron_connect_default;
  var init_chevron_connect = __esm({
    "lib/chevron-connect.ts"() {
      IconChevronConnect = `<svg id="ChevronConnect" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="58.27 9.23 40.39 27.11 58.27 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.73 62.55 31.39 44.89 13.73 27.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_connect_default = IconChevronConnect;
    }
  });

  // lib/chevron-disconnect2.ts
  var chevron_disconnect2_exports = {};
  __export(chevron_disconnect2_exports, {
    IconChevronDisconnect2: () => IconChevronDisconnect2,
    default: () => chevron_disconnect2_default
  });
  var IconChevronDisconnect2, chevron_disconnect2_default;
  var init_chevron_disconnect2 = __esm({
    "lib/chevron-disconnect2.ts"() {
      IconChevronDisconnect2 = `<svg id="ChevronDisconnect2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="9.23 40.27 27.11 58.16 45 40.27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="62.55 31.27 44.89 13.61 27.23 31.27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_disconnect2_default = IconChevronDisconnect2;
    }
  });

  // lib/chevron-disconnect.ts
  var chevron_disconnect_exports = {};
  __export(chevron_disconnect_exports, {
    IconChevronDisconnect: () => IconChevronDisconnect,
    default: () => chevron_disconnect_default
  });
  var IconChevronDisconnect, chevron_disconnect_default;
  var init_chevron_disconnect = __esm({
    "lib/chevron-disconnect.ts"() {
      IconChevronDisconnect = `<svg id="ChevronDisconnect" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="31.5 9.23 13.61 27.11 31.5 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 62.55 58.16 44.89 40.5 27.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_disconnect_default = IconChevronDisconnect;
    }
  });

  // lib/chevron-double-down.ts
  var chevron_double_down_exports = {};
  __export(chevron_double_down_exports, {
    IconChevronDoubleDown: () => IconChevronDoubleDown,
    default: () => chevron_double_down_default
  });
  var IconChevronDoubleDown, chevron_double_down_default;
  var init_chevron_double_down = __esm({
    "lib/chevron-double-down.ts"() {
      IconChevronDoubleDown = `<svg id="ChevronDoubleDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="13.95 36.23 36.23 58.5 58.5 36.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="16.67 21.19 36.23 40.74 55.78 21.19" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_double_down_default = IconChevronDoubleDown;
    }
  });

  // lib/chevron-double-left.ts
  var chevron_double_left_exports = {};
  __export(chevron_double_left_exports, {
    IconChevronDoubleLeft: () => IconChevronDoubleLeft,
    default: () => chevron_double_left_default
  });
  var IconChevronDoubleLeft, chevron_double_left_default;
  var init_chevron_double_left = __esm({
    "lib/chevron-double-left.ts"() {
      IconChevronDoubleLeft = `<svg id="ChevronDoubleLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="35.77 13.73 13.5 36 35.77 58.27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="50.83 16.22 31.05 36 50.83 55.78" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_double_left_default = IconChevronDoubleLeft;
    }
  });

  // lib/chevron-double-right.ts
  var chevron_double_right_exports = {};
  __export(chevron_double_right_exports, {
    IconChevronDoubleRight: () => IconChevronDoubleRight,
    default: () => chevron_double_right_default
  });
  var IconChevronDoubleRight, chevron_double_right_default;
  var init_chevron_double_right = __esm({
    "lib/chevron-double-right.ts"() {
      IconChevronDoubleRight = `<svg id="ChevronDoubleRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="36.23 58.5 58.5 36.23 36.23 13.95" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="21.2 55.77 40.75 36.23 21.2 16.68" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_double_right_default = IconChevronDoubleRight;
    }
  });

  // lib/chevron-double-up.ts
  var chevron_double_up_exports = {};
  __export(chevron_double_up_exports, {
    IconChevronDoubleUp: () => IconChevronDoubleUp,
    default: () => chevron_double_up_default
  });
  var IconChevronDoubleUp, chevron_double_up_default;
  var init_chevron_double_up = __esm({
    "lib/chevron-double-up.ts"() {
      IconChevronDoubleUp = `<svg id="ChevronDoubleUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="56.2 51.26 36.23 31.29 16.26 51.26" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 35.77 36.23 13.5 13.95 35.77" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_double_up_default = IconChevronDoubleUp;
    }
  });

  // lib/chevron-down.ts
  var chevron_down_exports = {};
  __export(chevron_down_exports, {
    IconChevronDown: () => IconChevronDown,
    default: () => chevron_down_default
  });
  var IconChevronDown, chevron_down_default;
  var init_chevron_down = __esm({
    "lib/chevron-down.ts"() {
      IconChevronDown = `<svg id="ChevronDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="13.95 27.23 36.23 49.5 58.5 27.23" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_down_default = IconChevronDown;
    }
  });

  // lib/chevron-left.ts
  var chevron_left_exports = {};
  __export(chevron_left_exports, {
    IconChevronLeft: () => IconChevronLeft,
    default: () => chevron_left_default
  });
  var IconChevronLeft, chevron_left_default;
  var init_chevron_left = __esm({
    "lib/chevron-left.ts"() {
      IconChevronLeft = `<svg id="ChevronLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="44.77 13.73 22.5 36 44.77 58.27" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_left_default = IconChevronLeft;
    }
  });

  // lib/chevron-right.ts
  var chevron_right_exports = {};
  __export(chevron_right_exports, {
    IconChevronRight: () => IconChevronRight,
    default: () => chevron_right_default
  });
  var IconChevronRight, chevron_right_default;
  var init_chevron_right = __esm({
    "lib/chevron-right.ts"() {
      IconChevronRight = `<svg id="ChevronRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="27.23 58.5 49.5 36.23 27.23 13.95" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_right_default = IconChevronRight;
    }
  });

  // lib/chevron-up.ts
  var chevron_up_exports = {};
  __export(chevron_up_exports, {
    IconChevronUp: () => IconChevronUp,
    default: () => chevron_up_default
  });
  var IconChevronUp, chevron_up_default;
  var init_chevron_up = __esm({
    "lib/chevron-up.ts"() {
      IconChevronUp = `<svg id="ChevronUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="58.5 45 36.23 22.73 13.95 45" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chevron_up_default = IconChevronUp;
    }
  });

  // lib/icon01.ts
  var icon01_exports = {};
  __export(icon01_exports, {
    IconIcon01: () => IconIcon01,
    default: () => icon01_default
  });
  var IconIcon01, icon01_default;
  var init_icon01 = __esm({
    "lib/icon01.ts"() {
      IconIcon01 = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 595.28 841.89"/>`;
      icon01_default = IconIcon01;
    }
  });

  // lib/bottle.ts
  var bottle_exports = {};
  __export(bottle_exports, {
    IconBottle: () => IconBottle,
    default: () => bottle_default
  });
  var IconBottle, bottle_default;
  var init_bottle = __esm({
    "lib/bottle.ts"() {
      IconBottle = `<svg id="Bottle" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,28.21v-14.71h-9v14.71c-2.69,1.56-4.5,4.46-4.5,7.79v27h18v-27c0-3.33-1.81-6.23-4.5-7.79Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      bottle_default = IconBottle;
    }
  });

  // lib/bottles.ts
  var bottles_exports = {};
  __export(bottles_exports, {
    IconBottles: () => IconBottles,
    default: () => bottles_default
  });
  var IconBottles, bottles_default;
  var init_bottles = __esm({
    "lib/bottles.ts"() {
      IconBottles = `<svg id="Bottles" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M27,28.21v-14.71h-9v14.71c-2.69,1.56-4.5,4.46-4.5,7.79v27h18v-27c0-3.33-1.81-6.23-4.5-7.79Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,28.21v-14.71h-9v14.71c-2.69,1.56-4.5,4.46-4.5,7.79v27h18v-27c0-3.33-1.81-6.23-4.5-7.79Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      bottles_default = IconBottles;
    }
  });

  // lib/bread-slice.ts
  var bread_slice_exports = {};
  __export(bread_slice_exports, {
    IconBreadSlice: () => IconBreadSlice,
    default: () => bread_slice_default
  });
  var IconBreadSlice, bread_slice_default;
  var init_bread_slice = __esm({
    "lib/bread-slice.ts"() {
      IconBreadSlice = `<svg id="BreadSlice" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M58.5,24.75c0-6.21-5.04-11.25-11.25-11.25s-11.25,4.5-11.25,4.5c0,0-5.04-4.5-11.25-4.5s-11.25,5.04-11.25,11.25c0,4.16,2.27,7.79,5.62,9.73v24.02h33.75v-24.02c3.36-1.95,5.62-5.57,5.62-9.73Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,24.75c0-6.21-5.04-11.25-11.25-11.25s-11.25,4.5-11.25,4.5c0,0-5.04-4.5-11.25-4.5s-11.25,5.04-11.25,11.25c0,4.16,2.27,7.79,5.62,9.73v24.02h33.75v-24.02c3.36-1.95,5.62-5.57,5.62-9.73Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      bread_slice_default = IconBreadSlice;
    }
  });

  // lib/coffee-cup.ts
  var coffee_cup_exports = {};
  __export(coffee_cup_exports, {
    IconCoffeeCup: () => IconCoffeeCup,
    default: () => coffee_cup_default
  });
  var IconCoffeeCup, coffee_cup_default;
  var init_coffee_cup = __esm({
    "lib/coffee-cup.ts"() {
      IconCoffeeCup = `<svg id="CoffeeCup" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,36c0,12.43,0,22.5,20.25,22.5s20.25-10.07,20.25-22.5H13.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M13.5,36c0,12.43,0,22.5,20.25,22.5s20.25-10.07,20.25-22.5H13.5Z" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M24.32,12c.31,9,6.96,6,6.96,15" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M35.79,9c.31,9,6.96,6,6.96,15" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M56.25,36h2.25c.79,0,1.55.14,2.25.38,2.62.93,4.5,3.43,4.5,6.37,0,3.73-3.02,6.75-6.75,6.75h-2.25" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      coffee_cup_default = IconCoffeeCup;
    }
  });

  // lib/coffee-machine.ts
  var coffee_machine_exports = {};
  __export(coffee_machine_exports, {
    IconCoffeeMachine: () => IconCoffeeMachine,
    default: () => coffee_machine_default
  });
  var IconCoffeeMachine, coffee_machine_default;
  var init_coffee_machine = __esm({
    "lib/coffee-machine.ts"() {
      IconCoffeeMachine = `<svg id="CoffeeMachine" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M18.19,49.5c-.14,1.17-.05,2.35.36,3.46,1.65,4.5,6.82,5.55,12.95,5.55s11.3-1.04,12.95-5.55c.61-1.67.53-3.51-.03-5.19l-1.61-4.82h-.68c-13.33,0-13.41,6.47-23.94,6.55Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M22.5,13v10c0,2.21,1.79,4,4,4h27.5v36H18h45V13c0-2.21-1.79-4-4-4H26.5c-2.21,0-4,1.79-4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="49.5" y1="18" x2="49.5" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,13v10c0,2.21,1.79,4,4,4h27.5v36H18h45V13c0-2.21-1.79-4-4-4H26.5c-2.21,0-4,1.79-4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M44.42,47.76c.56,1.68.64,3.53.03,5.19-1.65,4.5-6.82,5.55-12.95,5.55s-11.3-1.04-12.95-5.55c-.61-1.67-.53-3.51.03-5.19l3.92-11.76h18l3.92,11.76Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,49.5c10.73,0,10.73-6.56,24.14-6.56" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,36h-9.5c-2.21,0-4,1.79-4,4v10c0,2.21,1.79,4,4,4h5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      coffee_machine_default = IconCoffeeMachine;
    }
  });

  // lib/cognac-glass.ts
  var cognac_glass_exports = {};
  __export(cognac_glass_exports, {
    IconCognacGlass: () => IconCognacGlass,
    default: () => cognac_glass_default
  });
  var IconCognacGlass, cognac_glass_default;
  var init_cognac_glass = __esm({
    "lib/cognac-glass.ts"() {
      IconCognacGlass = `<svg id="CognacGlass" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M16.27,41.25c2.54,6.65,9.58,8.22,17.88,8.22s15.66-1.63,18.05-8.64c.26-.75.44-1.79.55-2.97.2-2.13.13-4.27-.18-6.37l-.38-.02c-19.97,0-20,9.74-35.92,9.78Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M51.56,25.93c1.35,3.79,1.94,7.9,1.56,11.96-.11,1.17-.29,2.21-.55,2.97-2.39,7.01-9.57,8.64-18.05,8.64s-15.66-1.63-18.05-8.64c-.26-.75-.44-1.79-.55-2.97-.38-4.07.21-8.18,1.56-11.96l4.43-12.43h25.2l4.43,12.43Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M16.57,41.28c16,0,16-9.78,36-9.78" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="34.57" y1="58.5" x2="34.44" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="25.57" y1="58.5" x2="43.57" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cognac_glass_default = IconCognacGlass;
    }
  });

  // lib/espress-machine2.ts
  var espress_machine2_exports = {};
  __export(espress_machine2_exports, {
    IconEspressMachine2: () => IconEspressMachine2,
    default: () => espress_machine2_default
  });
  var IconEspressMachine2, espress_machine2_default;
  var init_espress_machine2 = __esm({
    "lib/espress-machine2.ts"() {
      IconEspressMachine2 = `<svg id="EspressMachine2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M45,27l-4.5,9h-9l-4.5-9h-13.5v36h45V27h-13.5ZM42.75,54c0,3.73-3.02,6.75-6.75,6.75s-6.75-3.02-6.75-6.75v-4.5h13.5v4.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="9" width="54" height="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="9" width="54" height="18" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="63" x2="13.5" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="63" x2="58.5" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 27 31.5 36 40.5 36 45 27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M29.25,54v-4.5h13.5v4.5c0,3.73-3.02,6.75-6.75,6.75s-6.75-3.02-6.75-6.75Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="63" x2="63" y2="63" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="40.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="47" x2="36" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="18" x2="45" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="18" x2="54" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      espress_machine2_default = IconEspressMachine2;
    }
  });

  // lib/espresso-machine-e61.ts
  var espresso_machine_e61_exports = {};
  __export(espresso_machine_e61_exports, {
    IconEspressoMachineE61: () => IconEspressoMachineE61,
    default: () => espresso_machine_e61_default
  });
  var IconEspressoMachineE61, espresso_machine_e61_default;
  var init_espresso_machine_e61 = __esm({
    "lib/espresso-machine-e61.ts"() {
      IconEspressoMachineE61 = `<svg id="EspressoMachineE61" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,9v45h45V9H13.5ZM42.75,36.37v5c0,2.21-1.79,4-4,4h-5.5c-2.21,0-4-1.79-4-4v-5h-.75l2.32-9.76c1.3-5.45,9.05-5.45,10.35,0l2.32,9.76h-.75Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="54" width="54" height="9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="54" width="54" height="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="13.5 49.5 13.5 9 58.5 9 58.5 54 13.5 54 13.5 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="18" x2="22.5" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="18" x2="49.5" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="47.25" y1="36.37" x2="24.75" y2="36.37" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M28.5,36.37l2.32-9.76c1.3-5.45,9.05-5.45,10.35,0l2.32,9.76" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M29.25,36.37h13.5v5c0,2.21-1.79,4-4,4h-5.5c-2.21,0-4-1.79-4-4v-5h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="45" y1="40.87" x2="63" y2="40.87" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      espresso_machine_e61_default = IconEspressoMachineE61;
    }
  });

  // lib/espresso-machine.ts
  var espresso_machine_exports = {};
  __export(espresso_machine_exports, {
    IconEspressoMachine: () => IconEspressoMachine,
    default: () => espresso_machine_default
  });
  var IconEspressoMachine, espresso_machine_default;
  var init_espresso_machine = __esm({
    "lib/espresso-machine.ts"() {
      IconEspressoMachine = `<svg id="EspressoMachine" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="47.25 27 47.25 36 42.75 36 42.75 45 29.25 45 29.25 36 24.75 36 24.75 27 13.5 27 18 54 54 54 58.5 27 47.25 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="54" width="54" height="9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17,9h38c4.42,0,8,3.58,8,8v10H9v-10c0-4.42,3.58-8,8-8Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="54" width="54" height="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="18" x2="18" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="18" x2="27" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17,9h38c4.42,0,8,3.58,8,8v10H9v-10c0-4.42,3.58-8,8-8Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="27" x2="18" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="27" x2="54" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="24.75" y="27" width="22.5" height="9" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="29.25" y="36" width="13.5" height="9" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="40.5" x2="60.75" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      espresso_machine_default = IconEspressoMachine;
    }
  });

  // lib/espresso-pistol.ts
  var espresso_pistol_exports = {};
  __export(espresso_pistol_exports, {
    IconEspressoPistol: () => IconEspressoPistol,
    default: () => espresso_pistol_default
  });
  var IconEspressoPistol, espresso_pistol_default;
  var init_espresso_pistol = __esm({
    "lib/espresso-pistol.ts"() {
      IconEspressoPistol = `<svg id="EspressoPistol" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><circle cx="50.25" cy="21.75" r="11.25" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M30.09,32.36l9.55,9.55-19.09,19.09c-2.64,2.64-6.91,2.64-9.55,0h0c-2.64-2.64-2.64-6.91,0-9.55l19.09-19.09Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polyline points="44.14 34.23 38.05 40.31 31.69 33.95 37.77 27.86" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polyline points="43.88 9.03 43.88 9.03 37.52 15.39 37.52 15.39" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polyline points="56.61 34.48 56.61 34.48 62.97 28.12 62.97 28.12" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><circle cx="50.25" cy="21.75" r="11.25" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30.09,32.36l9.55,9.55-19.09,19.09c-2.64,2.64-6.91,2.64-9.55,0h0c-2.64-2.64-2.64-6.91,0-9.55l19.09-19.09Z" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="44.14 34.23 38.05 40.31 31.69 33.95 37.77 27.86" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="43.88 9.03 43.88 9.03 37.52 15.39 37.52 15.39" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="56.61 34.48 56.61 34.48 62.97 28.12 62.97 28.12" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      espresso_pistol_default = IconEspressoPistol;
    }
  });

  // lib/hamburger.ts
  var hamburger_exports = {};
  __export(hamburger_exports, {
    IconHamburger: () => IconHamburger,
    default: () => hamburger_default
  });
  var IconHamburger, hamburger_default;
  var init_hamburger = __esm({
    "lib/hamburger.ts"() {
      IconHamburger = `<svg id="Hamburger" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M9,29.25h54s0-18-27-18S9,29.25,9,29.25Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M9,51.75q0,9,27,9t27-9H9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M9,28.5h54s0-18-27-18S9,28.5,9,28.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,51q0,9,27,9t27-9H9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,42c-6.75,0-6.75-3.38-13.5-3.38-6.75,0-6.75,3.38-13.5,3.38s-6.75-3.38-13.5-3.38c-6.75,0-6.75,3.38-13.5,3.38" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      hamburger_default = IconHamburger;
    }
  });

  // lib/perculator.ts
  var perculator_exports = {};
  __export(perculator_exports, {
    IconPerculator: () => IconPerculator,
    default: () => perculator_default
  });
  var IconPerculator, perculator_default;
  var init_perculator = __esm({
    "lib/perculator.ts"() {
      IconPerculator = `<svg id="Perculator" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="49.5 40.5 63 18 54 18 54 9 22.5 9 22.5 18 27 40.5 27 49.5 22.5 63 27 63 49.5 63 54 63 49.5 49.5 49.5 40.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="13.5 36 13.5 18 22.5 18" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="18" x2="36" y2="40.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="49.5" x2="45" y2="63" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="63" x2="36" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="40.5" x2="45" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="54 18 54 9 22.5 9 22.5 18 27 40.5 27 49.5 22.5 63 27 63 49.5 63 54 63 49.5 49.5 49.5 40.5 54 18" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 18 54 18 63 18 49.5 40.5 27 40.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="49.5" x2="49.5" y2="49.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      perculator_default = IconPerculator;
    }
  });

  // lib/wine-glass.ts
  var wine_glass_exports = {};
  __export(wine_glass_exports, {
    IconWineGlass: () => IconWineGlass,
    default: () => wine_glass_default
  });
  var IconWineGlass, wine_glass_default;
  var init_wine_glass = __esm({
    "lib/wine-glass.ts"() {
      IconWineGlass = `<svg id="WineGlass" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M21.85,32.79c1.76,4.62,6.65,5.71,12.42,5.71s10.87-1.13,12.53-6c.18-.52.3-1.25.38-2.06.14-1.48.09-2.98-.13-4.44h-.26c-13.87,0-13.89,6.77-24.95,6.79Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M46.35,22.13c.94,2.63,1.35,5.48,1.09,8.31-.08.81-.2,1.54-.38,2.06-1.66,4.87-6.65,6-12.53,6s-10.87-1.13-12.53-6c-.18-.52-.3-1.25-.38-2.06-.26-2.82.15-5.68,1.09-8.31l3.08-8.63h17.5l3.08,8.63Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.05,32.79c11.11,0,11.11-6.79,25-6.79" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="34.57" y1="58.5" x2="34.43" y2="38.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="24.57" y1="58.5" x2="44.57" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      wine_glass_default = IconWineGlass;
    }
  });

  // lib/alarm-bell2.ts
  var alarm_bell2_exports = {};
  __export(alarm_bell2_exports, {
    IconAlarmBell2: () => IconAlarmBell2,
    default: () => alarm_bell2_default
  });
  var IconAlarmBell2, alarm_bell2_default;
  var init_alarm_bell2 = __esm({
    "lib/alarm-bell2.ts"() {
      IconAlarmBell2 = `<svg id="AlarmBell2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M46.34,21.16c-6.33-6.33-14.44-4.89-24.18,1.27l-13.48,8.53c-1.08.69-1.25,2.2-.34,3.1l12.55,12.55,12.55,12.55c.91.91,2.42.74,3.1-.34l8.53-13.48c6.17-9.75,7.6-17.86,1.27-24.18h0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M27.25,52.98c-3.51,3.51-9.21,3.51-12.73,0s-3.51-9.21,0-12.73" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M46.34,21.16c-6.33-6.33-14.44-4.89-24.18,1.27l-13.48,8.53c-1.08.69-1.25,2.2-.34,3.1l12.55,12.55,12.55,12.55c.91.91,2.42.74,3.1-.34l8.53-13.48c6.17-9.75,7.6-17.86,1.27-24.18h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M15.05,15.33c4.98-8.2,14.71-12.71,21.74-10.08" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M52.17,52.45c8.2-4.98,12.71-14.71,10.08-21.74" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      alarm_bell2_default = IconAlarmBell2;
    }
  });

  // lib/alarm-bell3.ts
  var alarm_bell3_exports = {};
  __export(alarm_bell3_exports, {
    IconAlarmBell3: () => IconAlarmBell3,
    default: () => alarm_bell3_default
  });
  var IconAlarmBell3, alarm_bell3_default;
  var init_alarm_bell3 = __esm({
    "lib/alarm-bell3.ts"() {
      IconAlarmBell3 = `<svg id="AlarmBell3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,13.5c-8.95,0-13.67,6.75-16.2,18l-3.5,15.56c-.28,1.25.67,2.44,1.95,2.44h17.75s17.75,0,17.75,0c1.28,0,2.23-1.19,1.95-2.44l-3.5-15.56c-2.53-11.25-7.25-18-16.2-18h0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M45,49.5c0,4.97-4.03,9-9,9s-9-4.03-9-9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,13.5c-8.95,0-13.67,6.75-16.2,18l-3.5,15.56c-.28,1.25.67,2.44,1.95,2.44h17.75s17.75,0,17.75,0c1.28,0,2.23-1.19,1.95-2.44l-3.5-15.56c-2.53-11.25-7.25-18-16.2-18h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9.75,31.5c-2.28-9.32,1.41-19.39,8.25-22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M62.25,31.5c2.28-9.32-1.41-19.39-8.25-22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      alarm_bell3_default = IconAlarmBell3;
    }
  });

  // lib/alarm-bell.ts
  var alarm_bell_exports = {};
  __export(alarm_bell_exports, {
    IconAlarmBell: () => IconAlarmBell,
    default: () => alarm_bell_default
  });
  var IconAlarmBell, alarm_bell_default;
  var init_alarm_bell = __esm({
    "lib/alarm-bell.ts"() {
      IconAlarmBell = `<svg id="AlarmBell" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,13.5c-8.95,0-13.67,6.75-16.2,18l-3.5,15.56c-.28,1.25.67,2.44,1.95,2.44h17.75s17.75,0,17.75,0c1.28,0,2.23-1.19,1.95-2.44l-3.5-15.56c-2.53-11.25-7.25-18-16.2-18h0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M45,49.5c0,4.97-4.03,9-9,9s-9-4.03-9-9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,13.5c-8.95,0-13.67,6.75-16.2,18l-3.5,15.56c-.28,1.25.67,2.44,1.95,2.44h17.75s17.75,0,17.75,0c1.28,0,2.23-1.19,1.95-2.44l-3.5-15.56c-2.53-11.25-7.25-18-16.2-18h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      alarm_bell_default = IconAlarmBell;
    }
  });

  // lib/art-supplies.ts
  var art_supplies_exports = {};
  __export(art_supplies_exports, {
    IconArtSupplies: () => IconArtSupplies,
    default: () => art_supplies_default
  });
  var IconArtSupplies, art_supplies_default;
  var init_art_supplies = __esm({
    "lib/art-supplies.ts"() {
      IconArtSupplies = `<svg id="ArtSupplies" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M46.06,37.08l15.87,15.87c.78.78.78,2.05,0,2.83l-9.79,9.79c-.78.78-2.05.78-2.83,0l-16.77-16.77" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M24.88,41.14L7.59,23.85c-.78-.78-.78-2.05,0-2.83l9.79-9.79c.78-.78,2.05-.78,2.83,0l16.39,16.39" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M46.06,37.08l15.87,15.87c.78.78.78,2.05,0,2.83l-9.79,9.79c-.78.78-2.05.78-2.83,0l-16.77-16.77" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M24.88,41.14L7.59,23.85c-.78-.78-.78-2.05,0-2.83l9.79-9.79c.78-.78,2.05-.78,2.83,0l16.39,16.39" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="53.8" y1="44.82" x2="47.44" y2="51.18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="28.35" y1="19.36" x2="21.98" y2="25.73" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><g><path d="M31.47,49.62c14.81-11.11,30.33-27.26,25.1-32.5-5.24-5.24-21.39,10.29-32.5,25.1,0,0-1.85,1.85,1.85,5.55,3.7,3.7,5.55,1.85,5.55,1.85Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M27.77,57.02c-5.55,5.55-9.26-1.85-14.81,3.7-1.85-5.55-1.22-9.89,1.85-12.96,3.07-3.07,8.04-3.07,11.11,0,3.07,3.07,3.7,7.4,1.85,9.26Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      art_supplies_default = IconArtSupplies;
    }
  });

  // lib/audio-waves.ts
  var audio_waves_exports = {};
  __export(audio_waves_exports, {
    IconAudioWaves: () => IconAudioWaves,
    default: () => audio_waves_default
  });
  var IconAudioWaves, audio_waves_default;
  var init_audio_waves = __esm({
    "lib/audio-waves.ts"() {
      IconAudioWaves = `<svg id="AudioWaves" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="9" y1="27" x2="9" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="22.5" x2="18" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="18" x2="27" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="31.5" x2="45" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="27" x2="54" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="31.5" x2="63" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      audio_waves_default = IconAudioWaves;
    }
  });

  // lib/camera.ts
  var camera_exports = {};
  __export(camera_exports, {
    IconCamera: () => IconCamera,
    default: () => camera_default
  });
  var IconCamera, camera_default;
  var init_camera = __esm({
    "lib/camera.ts"() {
      IconCamera = `<svg id="Camera" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M57,18H15c-3.31,0-6,2.69-6,6v24c0,3.31,2.69,6,6,6h42c3.31,0,6-2.69,6-6v-24c0-3.31-2.69-6-6-6ZM36,45c-4.97,0-9-4.03-9-9s4.03-9,9-9,9,4.03,9,9-4.03,9-9,9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="36" r="9" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M31,9h10c2.21,0,4,1.79,4,4v5h-18v-5c0-2.21,1.79-4,4-4Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="9" y="18" width="54" height="36" rx="6" ry="6" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      camera_default = IconCamera;
    }
  });

  // lib/clipboard.ts
  var clipboard_exports = {};
  __export(clipboard_exports, {
    IconClipboard: () => IconClipboard,
    default: () => clipboard_default
  });
  var IconClipboard, clipboard_default;
  var init_clipboard = __esm({
    "lib/clipboard.ts"() {
      IconClipboard = `<svg id="Clipboard" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M50,13.5h-9.5v4.5h-9v-4.5h-9.5c-2.21,0-4,1.79-4,4v41.5c0,2.21,1.79,4,4,4h28c2.21,0,4-1.79,4-4V17.5c0-2.21-1.79-4-4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,13.5h9.5c2.21,0,4,1.79,4,4v41.5c0,2.21-1.79,4-4,4h-28c-2.21,0-4-1.79-4-4V17.5c0-2.21,1.79-4,4-4h9.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="31.5" y="9" width="9" height="9" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      clipboard_default = IconClipboard;
    }
  });

  // lib/color-pallette.ts
  var color_pallette_exports = {};
  __export(color_pallette_exports, {
    IconColorPallette: () => IconColorPallette,
    default: () => color_pallette_default
  });
  var IconColorPallette, color_pallette_default;
  var init_color_pallette = __esm({
    "lib/color-pallette.ts"() {
      IconColorPallette = `<svg id="ColorPallette" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M63,36c0,9.97-14.18,4.84-22.5,9-9,4.5,9,18-4.5,18-14.91,0-27-12.09-27-27s12.09-27,27-27,27,12.09,27,27Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M63,36c0,9.97-14.18,4.84-22.5,9-9,4.5,9,18-4.5,18-14.91,0-27-12.09-27-27s12.09-27,27-27,27,12.09,27,27Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="18" x2="36" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="22.5" y1="22.5" x2="22.5" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="18" y1="36" x2="18" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="22.5" y1="49.5" x2="22.5" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="49.5" y1="22.5" x2="49.5" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/></svg>`;
      color_pallette_default = IconColorPallette;
    }
  });

  // lib/color-rgb.ts
  var color_rgb_exports = {};
  __export(color_rgb_exports, {
    IconColorRgb: () => IconColorRgb,
    default: () => color_rgb_default
  });
  var IconColorRgb, color_rgb_default;
  var init_color_rgb = __esm({
    "lib/color-rgb.ts"() {
      IconColorRgb = `<svg id="ColorRgb" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><circle cx="26.37" cy="44.44" r="15.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="45.86" cy="44.44" r="15.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36.12" cy="27.56" r="15.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/></g><g><circle cx="35.88" cy="27.56" r="15.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="35.88" cy="27.56" r="15.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="26.14" cy="44.44" r="15.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="26.14" cy="44.44" r="15.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="45.63" cy="44.44" r="15.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="45.63" cy="44.44" r="15.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      color_rgb_default = IconColorRgb;
    }
  });

  // lib/color-swatches.ts
  var color_swatches_exports = {};
  __export(color_swatches_exports, {
    IconColorSwatches: () => IconColorSwatches,
    default: () => color_swatches_default
  });
  var IconColorSwatches, color_swatches_default;
  var init_color_swatches = __esm({
    "lib/color-swatches.ts"() {
      IconColorSwatches = `<svg id="ColorSwatches" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="27.94" y1="19.43" x2="43.53" y2="28.43" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="23.82" y1="33.21" x2="36.53" y2="40.55" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="23.82" y1="48.22" x2="30.03" y2="51.81" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.39" y1="29.63" x2="56.39" y2="45.21" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="37.03" y1="39.68" x2="44.27" y2="52.21" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.52" y1="52.68" x2="33.01" y2="58.71" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M46.57,15.17l-8.66-5c-1.91-1.1-4.36-.45-5.46,1.46l-8.63,14.94v30.93c0,2.21-1.79,4-4,4,1.91,1.1,4.36.45,5.46-1.46l22.75-39.4c1.1-1.91.45-4.36-1.46-5.46Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M65.65,35.25l-5-8.66c-1.1-1.91-3.55-2.57-5.46-1.46l-14.62,8.44-15.28,26.47c-1.1,1.91-3.55,2.57-5.46,1.46h-.79l.29.5c1.1,1.91,3.55,2.57,5.46,1.46l39.4-22.75c1.91-1.1,2.57-3.55,1.46-5.46Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="5.82" y="8" width="18" height="53.5" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="5.82" y="8" width="18" height="53.5" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="5.82" y1="21" x2="23.82" y2="21" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="5.82" y1="35" x2="23.82" y2="35" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="5.82" y1="48" x2="23.82" y2="48" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      color_swatches_default = IconColorSwatches;
    }
  });

  // lib/desktop.ts
  var desktop_exports = {};
  __export(desktop_exports, {
    IconDesktop: () => IconDesktop,
    default: () => desktop_default
  });
  var IconDesktop, desktop_default;
  var init_desktop = __esm({
    "lib/desktop.ts"() {
      IconDesktop = `<svg id="Desktop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M63,45V13c0-2.21-1.79-4-4-4H13c-2.21,0-4,1.79-4,4v32h54Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="9" y1="45" x2="63" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="9" y="9" width="54" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="63" x2="45" y2="63" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="36" y2="63" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      desktop_default = IconDesktop;
    }
  });

  // lib/filmroll.ts
  var filmroll_exports = {};
  __export(filmroll_exports, {
    IconFilmroll: () => IconFilmroll,
    default: () => filmroll_default
  });
  var IconFilmroll, filmroll_default;
  var init_filmroll = __esm({
    "lib/filmroll.ts"() {
      IconFilmroll = `<svg id="Filmroll" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="9" width="36" height="54" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="18" y1="9" x2="18" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="9" x2="54" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="18" x2="18" y2="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="27" x2="18" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="36" x2="18" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="45" x2="18" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="54" x2="18" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="54" x2="63" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="45" x2="63" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="36" x2="63" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="27" x2="63" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="18" x2="63" y2="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="36" x2="54" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      filmroll_default = IconFilmroll;
    }
  });

  // lib/gamepad-classic.ts
  var gamepad_classic_exports = {};
  __export(gamepad_classic_exports, {
    IconGamepadClassic: () => IconGamepadClassic,
    default: () => gamepad_classic_default
  });
  var IconGamepadClassic, gamepad_classic_default;
  var init_gamepad_classic = __esm({
    "lib/gamepad-classic.ts"() {
      IconGamepadClassic = `<svg id="GamepadClassic" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M47.25,20.25h-22.5c-8.7,0-15.75,7.05-15.75,15.75s7.05,15.75,15.75,15.75h22.5c8.7,0,15.75-7.05,15.75-15.75s-7.05-15.75-15.75-15.75Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M47.25,20.25h-22.5c-8.7,0-15.75,7.05-15.75,15.75s7.05,15.75,15.75,15.75h22.5c8.7,0,15.75-7.05,15.75-15.75s-7.05-15.75-15.75-15.75Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="24.75" y1="29.25" x2="24.75" y2="42.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="36" x2="31.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="31.5" x2="45" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="49.5" y1="40.5" x2="49.5" y2="40.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/></svg>`;
      gamepad_classic_default = IconGamepadClassic;
    }
  });

  // lib/gamepad.ts
  var gamepad_exports = {};
  __export(gamepad_exports, {
    IconGamepad: () => IconGamepad,
    default: () => gamepad_default
  });
  var IconGamepad, gamepad_default;
  var init_gamepad = __esm({
    "lib/gamepad.ts"() {
      IconGamepad = `<svg id="Gamepad" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M21.01,18h29.97c1.83,0,3.48,1.09,4.2,2.77l9.47,22.09c2.26,5.27-1.61,11.14-7.34,11.14h0c-2.12,0-4.15-.84-5.65-2.34l-7.95-7.95h-15.43l-7.95,7.95c-1.5,1.5-3.53,2.34-5.65,2.34h0c-5.74,0-9.6-5.87-7.34-11.14l9.47-22.09c.72-1.68,2.37-2.77,4.2-2.77Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="45" y1="27" x2="45" y2="27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="31.5" x2="40.5" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="31.5" x2="49.5" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="36" x2="45" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M21.01,18h29.97c1.83,0,3.48,1.09,4.2,2.77l9.47,22.09c2.26,5.27-1.61,11.14-7.34,11.14h0c-2.12,0-4.15-.84-5.65-2.34l-7.95-7.95h-15.43l-7.95,7.95c-1.5,1.5-3.53,2.34-5.65,2.34h0c-5.74,0-9.6-5.87-7.34-11.14l9.47-22.09c.72-1.68,2.37-2.77,4.2-2.77Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="27" y1="26" x2="27" y2="35" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="30.5" x2="31.5" y2="30.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      gamepad_default = IconGamepad;
    }
  });

  // lib/highlight.ts
  var highlight_exports = {};
  __export(highlight_exports, {
    IconHighlight: () => IconHighlight,
    default: () => highlight_default
  });
  var IconHighlight, highlight_default;
  var init_highlight = __esm({
    "lib/highlight.ts"() {
      IconHighlight = `<svg id="Highlight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.95,37.77l-12.5,12.5c-1.93,1.93-1.42,5.22,1.04,6.41,5.06,2.45,13.97,4.04,24.19-6.17" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M22.95,37.77l-12.5,12.5c-1.93,1.93-1.42,5.22,1.04,6.41,5.06,2.45,13.97,4.04,24.19-6.17" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="27.34" y="25.86" width="13.5" height="27" transform="translate(-17.85 35.63) rotate(-45)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M67.5,31.41l-13.08,13.08c-1.56,1.56-4.09,1.56-5.66,0l-19.8-19.8c-1.56-1.56-1.56-4.09,0-5.66l13.08-13.08" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      highlight_default = IconHighlight;
    }
  });

  // lib/image.ts
  var image_exports = {};
  __export(image_exports, {
    IconImage: () => IconImage,
    default: () => image_default
  });
  var IconImage, image_default;
  var init_image = __esm({
    "lib/image.ts"() {
      IconImage = `<svg id="Image" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="47.25" cy="24.75" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M9,49.5v11.5c0,1.1.9,2,2,2h50c1.1,0,2-.9,2-2v-16h-22.5l-13.5-18-18,22.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="9 49.5 27 27 54 63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="45" x2="63" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="47.25" cy="24.75" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="9" y="9" width="54" height="54" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      image_default = IconImage;
    }
  });

  // lib/laptop.ts
  var laptop_exports = {};
  __export(laptop_exports, {
    IconLaptop: () => IconLaptop,
    default: () => laptop_default
  });
  var IconLaptop, laptop_default;
  var init_laptop = __esm({
    "lib/laptop.ts"() {
      IconLaptop = `<svg id="Laptop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M17.5,16h37c2.21,0,4,1.79,4,4v27H13.5v-27c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M9,47h54v3c0,3.31-2.69,6-6,6H15c-3.31,0-6-2.69-6-6v-3Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M17.5,16h37c2.21,0,4,1.79,4,4v27H13.5v-27c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,47h54v3c0,3.31-2.69,6-6,6H15c-3.31,0-6-2.69-6-6v-3Z" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      laptop_default = IconLaptop;
    }
  });

  // lib/mail-open.ts
  var mail_open_exports = {};
  __export(mail_open_exports, {
    IconMailOpen: () => IconMailOpen,
    default: () => mail_open_default
  });
  var IconMailOpen, mail_open_default;
  var init_mail_open = __esm({
    "lib/mail-open.ts"() {
      IconMailOpen = `<svg id="MailOpen" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M9,31.5l27,22.5,27-22.5v27.5c0,2.21-1.79,4-4,4H13c-2.21,0-4-1.79-4-4v-27.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="18 39 18 18 54 18 54 39" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,31.5l27,22.5,27-22.5v27.5c0,2.21-1.79,4-4,4H13c-2.21,0-4-1.79-4-4v-27.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="46.8 18 36 9 25.2 18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="18 24 9 31.5 36 54 63 31.5 54 24" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      mail_open_default = IconMailOpen;
    }
  });

  // lib/mail.ts
  var mail_exports = {};
  __export(mail_exports, {
    IconMail: () => IconMail,
    default: () => mail_default
  });
  var IconMail, mail_default;
  var init_mail = __esm({
    "lib/mail.ts"() {
      IconMail = `<svg id="Mail" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="9" width="36" height="54" rx="4" ry="4" transform="translate(0 72) rotate(-90)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="18" y="9" width="36" height="54" rx="4" ry="4" transform="translate(0 72) rotate(-90)" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="10.17 19.17 36 40.5 61.69 19.31" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      mail_default = IconMail;
    }
  });

  // lib/media.ts
  var media_exports = {};
  __export(media_exports, {
    IconMedia: () => IconMedia,
    default: () => media_default
  });
  var IconMedia, media_default;
  var init_media = __esm({
    "lib/media.ts"() {
      IconMedia = `<svg id="Media" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="54" cy="18" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,45l-20.96-25.16c-.8-.96-2.27-.96-3.07,0l-5.96,7.16" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M21.94,40.12v9.76c0,.8.89,1.28,1.55.83l7.32-4.88c.59-.4.59-1.27,0-1.66l-7.32-4.88c-.66-.44-1.55.03-1.55.83Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="54" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M21.94,40.12v9.76c0,.8.89,1.28,1.55.83l7.32-4.88c.59-.4.59-1.27,0-1.66l-7.32-4.88c-.66-.44-1.55.03-1.55.83Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="27" width="36" height="36" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M61,45h-16v-16c0-1.1-.9-2-2-2h-16V11c0-1.1.9-2,2-2h32c1.1,0,2,.9,2,2v32c0,1.1-.9,2-2,2Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      media_default = IconMedia;
    }
  });

  // lib/microphone.ts
  var microphone_exports = {};
  __export(microphone_exports, {
    IconMicrophone: () => IconMicrophone,
    default: () => microphone_default
  });
  var IconMicrophone, microphone_default;
  var init_microphone = __esm({
    "lib/microphone.ts"() {
      IconMicrophone = `<svg id="Microphone" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 72 72"><defs><clipPath id="clippath"><rect x="27" y="9" width="18" height="31.5" style="fill: none; stroke-width: 0px;"/></clipPath></defs><g style="clip-path: url(#clippath);"><path d="M36,9c-4.97,0-9,4.03-9,9v13.5c0,4.97,4.03,9,9,9s9-4.03,9-9v-13.5c0-4.97-4.03-9-9-9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/></g><line x1="22.5" y1="63" x2="49.5" y2="63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="49.5" x2="36" y2="63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,9c-4.97,0-9,4.03-9,9v13.5c0,4.97,4.03,9,9,9s9-4.03,9-9v-13.5c0-4.97-4.03-9-9-9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,31.5c0,9.94-8.06,18-18,18s-18-8.06-18-18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      microphone_default = IconMicrophone;
    }
  });

  // lib/music-note-single.ts
  var music_note_single_exports = {};
  __export(music_note_single_exports, {
    IconMusicNoteSingle: () => IconMusicNoteSingle,
    default: () => music_note_single_default
  });
  var IconMusicNoteSingle, music_note_single_default;
  var init_music_note_single = __esm({
    "lib/music-note-single.ts"() {
      IconMusicNoteSingle = `<svg id="MusicNoteSingle" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><ellipse cx="27" cy="52.4" rx="9" ry="6.1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M46.54,24.04c-10.54-3.51-10.54-10.54-10.54-10.54v14.05s14.05,3.51,14.05,14.05c7.03-7.03,3.94-15.08-3.51-17.57Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><ellipse cx="27" cy="52.4" rx="9" ry="6.1" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="52.4" x2="36" y2="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,13.5s0,7.03,10.54,10.54c7.45,2.48,10.54,10.54,3.51,17.57,0-10.54-14.05-14.05-14.05-14.05" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      music_note_single_default = IconMusicNoteSingle;
    }
  });

  // lib/music-note.ts
  var music_note_exports = {};
  __export(music_note_exports, {
    IconMusicNote: () => IconMusicNote,
    default: () => music_note_default
  });
  var IconMusicNote, music_note_default;
  var init_music_note = __esm({
    "lib/music-note.ts"() {
      IconMusicNote = `<svg id="MusicNote" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><ellipse cx="18" cy="56.9" rx="9" ry="6.1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><ellipse cx="49.5" cy="52.4" rx="9" ry="6.1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="58.5 22.5 27 27 27 18 58.5 13.5 58.5 22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="58.5 52.4 58.5 13.5 27 18 27 56.9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><ellipse cx="18" cy="56.9" rx="9" ry="6.1" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="57.81" y1="22.5" x2="27" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><ellipse cx="49.5" cy="52.4" rx="9" ry="6.1" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      music_note_default = IconMusicNote;
    }
  });

  // lib/pacman.ts
  var pacman_exports = {};
  __export(pacman_exports, {
    IconPacman: () => IconPacman,
    default: () => pacman_default
  });
  var IconPacman, pacman_default;
  var init_pacman = __esm({
    "lib/pacman.ts"() {
      IconPacman = `<svg id="Pacman" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,36l20.12-10.06c-3.69-7.37-11.32-12.44-20.12-12.44-12.43,0-22.5,10.07-22.5,22.5s10.07,22.5,22.5,22.5c8.81,0,16.43-5.06,20.12-12.44l-20.12-10.06Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,36l20.12-10.06c-3.69-7.37-11.32-12.44-20.12-12.44-12.43,0-22.5,10.07-22.5,22.5s10.07,22.5,22.5,22.5c8.81,0,16.43-5.06,20.12-12.44l-20.12-10.06Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="25" x2="36" y2="25" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/></svg>`;
      pacman_default = IconPacman;
    }
  });

  // lib/paperplane.ts
  var paperplane_exports = {};
  __export(paperplane_exports, {
    IconPaperplane: () => IconPaperplane,
    default: () => paperplane_default
  });
  var IconPaperplane, paperplane_default;
  var init_paperplane = __esm({
    "lib/paperplane.ts"() {
      IconPaperplane = `<svg id="Paperplane" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="9.45 30.73 54 18 41.27 62.55 28.54 43.46 9.45 30.73" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="54" y1="18" x2="28.54" y2="43.46" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="9.45 30.73 54 18 41.27 62.55 28.54 43.46 9.45 30.73" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      paperplane_default = IconPaperplane;
    }
  });

  // lib/playback-backward.ts
  var playback_backward_exports = {};
  __export(playback_backward_exports, {
    IconPlaybackBackward: () => IconPlaybackBackward,
    default: () => playback_backward_default
  });
  var IconPlaybackBackward, playback_backward_default;
  var init_playback_backward = __esm({
    "lib/playback-backward.ts"() {
      IconPlaybackBackward = `<svg id="PlaybackBackward" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><g style="opacity: .5;"></g><path d="M53.73,55.99V16.8c0-.95-1.2-1.37-1.79-.62l-15.3,19.59c-.28.36-.28.87,0,1.23l15.3,19.59c.59.75,1.79.34,1.79-.62Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M35.45,55.17V16.01c0-.95-1.21-1.37-1.79-.61l-15.17,19.58c-.28.36-.28.86,0,1.23l15.17,19.58c.58.75,1.79.34,1.79-.61Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g></g><g><path d="M53.73,55.99V16.8c0-.95-1.2-1.37-1.79-.62l-15.3,19.59c-.28.36-.28.87,0,1.23l15.3,19.59c.59.75,1.79.34,1.79-.62Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M35.45,55.17V16.01c0-.95-1.21-1.37-1.79-.61l-15.17,19.58c-.28.36-.28.86,0,1.23l15.17,19.58c.58.75,1.79.34,1.79-.61Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      playback_backward_default = IconPlaybackBackward;
    }
  });

  // lib/playback-end.ts
  var playback_end_exports = {};
  __export(playback_end_exports, {
    IconPlaybackEnd: () => IconPlaybackEnd,
    default: () => playback_end_default
  });
  var IconPlaybackEnd, playback_end_default;
  var init_playback_end = __esm({
    "lib/playback-end.ts"() {
      IconPlaybackEnd = `<svg id="PlaybackEnd" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><g style="opacity: .5;"></g><path d="M18.28,16.84v37.51c0,1.02,1.36,1.39,1.87.5l10.79-18.76c.18-.31.18-.69,0-1l-10.79-18.76c-.51-.89-1.87-.53-1.87.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M31.93,17.65v37.51c0,1.02,1.36,1.39,1.87.5l10.79-18.76c.18-.31.18-.69,0-1l-10.79-18.76c-.51-.89-1.87-.53-1.87.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="44.72" y="18" width="9" height="36" rx="1" ry="1" style="fill: red; stroke-width: 0px;"/></g><g><g><path d="M18.28,16.84v37.51c0,1.02,1.36,1.39,1.87.5l10.79-18.76c.18-.31.18-.69,0-1l-10.79-18.76c-.51-.89-1.87-.53-1.87.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M31.93,17.65v37.51c0,1.02,1.36,1.39,1.87.5l10.79-18.76c.18-.31.18-.69,0-1l-10.79-18.76c-.51-.89-1.87-.53-1.87.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><rect x="44.72" y="18" width="9" height="36" rx="1" ry="1" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      playback_end_default = IconPlaybackEnd;
    }
  });

  // lib/playback-forward.ts
  var playback_forward_exports = {};
  __export(playback_forward_exports, {
    IconPlaybackForward: () => IconPlaybackForward,
    default: () => playback_forward_default
  });
  var IconPlaybackForward, playback_forward_default;
  var init_playback_forward = __esm({
    "lib/playback-forward.ts"() {
      IconPlaybackForward = `<svg id="PlaybackForward" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><g style="opacity: .5;"></g><path d="M18.27,16.01v39.19c0,.95,1.2,1.37,1.79.62l15.3-19.59c.28-.36.28-.87,0-1.23l-15.3-19.59c-.59-.75-1.79-.34-1.79.62Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M36.55,16.83v39.15c0,.95,1.21,1.37,1.79.61l15.17-19.58c.28-.36.28-.86,0-1.23l-15.17-19.58c-.58-.75-1.79-.34-1.79.61Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g></g><g><path d="M18.27,16.01v39.19c0,.95,1.2,1.37,1.79.62l15.3-19.59c.28-.36.28-.87,0-1.23l-15.3-19.59c-.59-.75-1.79-.34-1.79.62Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36.55,16.83v39.15c0,.95,1.21,1.37,1.79.61l15.17-19.58c.28-.36.28-.86,0-1.23l-15.17-19.58c-.58-.75-1.79-.34-1.79.61Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      playback_forward_default = IconPlaybackForward;
    }
  });

  // lib/playback-next.ts
  var playback_next_exports = {};
  __export(playback_next_exports, {
    IconPlaybackNext: () => IconPlaybackNext,
    default: () => playback_next_default
  });
  var IconPlaybackNext, playback_next_default;
  var init_playback_next = __esm({
    "lib/playback-next.ts"() {
      IconPlaybackNext = `<svg id="PlaybackNext" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M22.5,16.33v40.15c0,.89,1.08,1.34,1.71.71l19.96-20.08c.39-.39.39-1.02,0-1.41L24.21,15.62c-.63-.63-1.71-.19-1.71.71Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><rect x="44.72" y="18" width="9" height="36" rx="1" ry="1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M22.5,16.33v40.15c0,.89,1.08,1.34,1.71.71l19.96-20.08c.39-.39.39-1.02,0-1.41L24.21,15.62c-.63-.63-1.71-.19-1.71.71Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="44.72" y="18" width="9" height="36" rx="1" ry="1" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      playback_next_default = IconPlaybackNext;
    }
  });

  // lib/playback-pause.ts
  var playback_pause_exports = {};
  __export(playback_pause_exports, {
    IconPlaybackPause: () => IconPlaybackPause,
    default: () => playback_pause_default
  });
  var IconPlaybackPause, playback_pause_default;
  var init_playback_pause = __esm({
    "lib/playback-pause.ts"() {
      IconPlaybackPause = `<svg id="PlaybackPause" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="13.5" height="45" rx="1" ry="1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><rect x="45" y="13.5" width="13.5" height="45" rx="1" ry="1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><rect x="13.5" y="13.5" width="13.5" height="45" rx="1" ry="1" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="45" y="13.5" width="13.5" height="45" rx="1" ry="1" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      playback_pause_default = IconPlaybackPause;
    }
  });

  // lib/playback-play.ts
  var playback_play_exports = {};
  __export(playback_play_exports, {
    IconPlaybackPlay: () => IconPlaybackPlay,
    default: () => playback_play_default
  });
  var IconPlaybackPlay, playback_play_default;
  var init_playback_play = __esm({
    "lib/playback-play.ts"() {
      IconPlaybackPlay = `<svg id="PlaybackPlay" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.5,15.3v41.39c0,.79.86,1.26,1.53.85l33.11-20.7c.63-.39.63-1.3,0-1.7L24.03,14.46c-.67-.42-1.53.06-1.53.85Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M22.5,15.3v41.39c0,.79.86,1.26,1.53.85l33.11-20.7c.63-.39.63-1.3,0-1.7L24.03,14.46c-.67-.42-1.53.06-1.53.85Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      playback_play_default = IconPlaybackPlay;
    }
  });

  // lib/playback-previous.ts
  var playback_previous_exports = {};
  __export(playback_previous_exports, {
    IconPlaybackPrevious: () => IconPlaybackPrevious,
    default: () => playback_previous_default
  });
  var IconPlaybackPrevious, playback_previous_default;
  var init_playback_previous = __esm({
    "lib/playback-previous.ts"() {
      IconPlaybackPrevious = `<svg id="PlaybackPrevious" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M49.5,55.67V15.52c0-.89-1.08-1.34-1.71-.71l-19.96,20.08c-.39.39-.39,1.02,0,1.41l19.96,20.08c.63.63,1.71.19,1.71-.71Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><rect x="18.28" y="18" width="9" height="36" rx="1" ry="1" transform="translate(45.56 72) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M49.5,55.67V15.52c0-.89-1.08-1.34-1.71-.71l-19.96,20.08c-.39.39-.39,1.02,0,1.41l19.96,20.08c.63.63,1.71.19,1.71-.71Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18.28" y="18" width="9" height="36" rx="1" ry="1" transform="translate(45.56 72) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      playback_previous_default = IconPlaybackPrevious;
    }
  });

  // lib/playback-start.ts
  var playback_start_exports = {};
  __export(playback_start_exports, {
    IconPlaybackStart: () => IconPlaybackStart,
    default: () => playback_start_default
  });
  var IconPlaybackStart, playback_start_default;
  var init_playback_start = __esm({
    "lib/playback-start.ts"() {
      IconPlaybackStart = `<svg id="PlaybackStart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><g style="opacity: .5;"></g><path d="M53.72,55.16V17.65c0-1.02-1.36-1.39-1.87-.5l-10.79,18.76c-.18.31-.18.69,0,1l10.79,18.76c.51.89,1.87.53,1.87-.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M40.07,54.35V16.84c0-1.02-1.36-1.39-1.87-.5l-10.79,18.76c-.18.31-.18.69,0,1l10.79,18.76c.51.89,1.87.53,1.87-.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="18.28" y="18" width="9" height="36" rx="1" ry="1" transform="translate(45.56 72) rotate(180)" style="fill: red; stroke-width: 0px;"/></g><g><g><path d="M53.72,55.16V17.65c0-1.02-1.36-1.39-1.87-.5l-10.79,18.76c-.18.31-.18.69,0,1l10.79,18.76c.51.89,1.87.53,1.87-.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.07,54.35V16.84c0-1.02-1.36-1.39-1.87-.5l-10.79,18.76c-.18.31-.18.69,0,1l10.79,18.76c.51.89,1.87.53,1.87-.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><rect x="18.28" y="18" width="9" height="36" rx="1" ry="1" transform="translate(45.56 72) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      playback_start_default = IconPlaybackStart;
    }
  });

  // lib/playback-stop.ts
  var playback_stop_exports = {};
  __export(playback_stop_exports, {
    IconPlaybackStop: () => IconPlaybackStop,
    default: () => playback_stop_default
  });
  var IconPlaybackStop, playback_stop_default;
  var init_playback_stop = __esm({
    "lib/playback-stop.ts"() {
      IconPlaybackStop = `<svg id="PlaybackStop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="1" ry="1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="1" ry="1" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      playback_stop_default = IconPlaybackStop;
    }
  });

  // lib/printer.ts
  var printer_exports = {};
  __export(printer_exports, {
    IconPrinter: () => IconPrinter,
    default: () => printer_default
  });
  var IconPrinter, printer_default;
  var init_printer = __esm({
    "lib/printer.ts"() {
      IconPrinter = `<svg id="Printer" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="9" width="36" height="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="18" y="45" width="36" height="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="18" y="9" width="36" height="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="45" width="36" height="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="36" x2="54" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="54" x2="45" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="9 27 9 54 18 54 18 45 54 45 54 54 63 54 63 27 9 27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      printer_default = IconPrinter;
    }
  });

  // lib/record.ts
  var record_exports = {};
  __export(record_exports, {
    IconRecord: () => IconRecord,
    default: () => record_default
  });
  var IconRecord, record_default;
  var init_record = __esm({
    "lib/record.ts"() {
      IconRecord = `<svg id="Record" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/></svg>`;
      record_default = IconRecord;
    }
  });

  // lib/reels.ts
  var reels_exports = {};
  __export(reels_exports, {
    IconReels: () => IconReels,
    default: () => reels_default
  });
  var IconReels, reels_default;
  var init_reels = __esm({
    "lib/reels.ts"() {
      IconReels = `<svg id="Reels" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M9,22.5v36.5c0,2.21,1.79,4,4,4h46c2.21,0,4-1.79,4-4V22.5H9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M31.5,34.68v16.13c0,.4.45.64.78.42l12.1-8.07c.3-.2.3-.63,0-.83l-12.1-8.07c-.33-.22-.78.02-.78.42Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="22.5" x2="63" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="9" x2="31.5" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="45" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      reels_default = IconReels;
    }
  });

  // lib/tablet-landscape.ts
  var tablet_landscape_exports = {};
  __export(tablet_landscape_exports, {
    IconTabletLandscape: () => IconTabletLandscape,
    default: () => tablet_landscape_default
  });
  var IconTabletLandscape, tablet_landscape_default;
  var init_tablet_landscape = __esm({
    "lib/tablet-landscape.ts"() {
      IconTabletLandscape = `<svg id="TabletLandscape" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="9" width="36" height="54" rx="4" ry="4" transform="translate(0 72) rotate(-90)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="18" y1="36" x2="18" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="9" width="36" height="54" rx="4" ry="4" transform="translate(0 72) rotate(-90)" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      tablet_landscape_default = IconTabletLandscape;
    }
  });

  // lib/tablet.ts
  var tablet_exports = {};
  __export(tablet_exports, {
    IconTablet: () => IconTablet,
    default: () => tablet_default
  });
  var IconTablet, tablet_default;
  var init_tablet = __esm({
    "lib/tablet.ts"() {
      IconTablet = `<svg id="Tablet" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="13.5" width="36" height="54" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="18" y="13.5" width="36" height="54" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="36" y2="58.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      tablet_default = IconTablet;
    }
  });

  // lib/television.ts
  var television_exports = {};
  __export(television_exports, {
    IconTelevision: () => IconTelevision,
    default: () => television_default
  });
  var IconTelevision, television_default;
  var init_television = __esm({
    "lib/television.ts"() {
      IconTelevision = `<svg id="Television" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M59,18H13c-2.21,0-4,1.79-4,4v32.5c0,2.21,1.79,4,4,4h46c2.21,0,4-1.79,4-4V22c0-2.21-1.79-4-4-4ZM45,49.5h-27v-22.5h27v22.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="18" width="54" height="40.5" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="27" width="27" height="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="9" x2="31.5" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="9" x2="40.5" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="31.5" x2="54" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="40.5" x2="54" y2="40.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      television_default = IconTelevision;
    }
  });

  // lib/terminal.ts
  var terminal_exports = {};
  __export(terminal_exports, {
    IconTerminal: () => IconTerminal,
    default: () => terminal_default
  });
  var IconTerminal, terminal_default;
  var init_terminal = __esm({
    "lib/terminal.ts"() {
      IconTerminal = `<svg id="Terminal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="18 18 24.75 24.75 18 31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="31.5" x2="40.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      terminal_default = IconTerminal;
    }
  });

  // lib/video-camera.ts
  var video_camera_exports = {};
  __export(video_camera_exports, {
    IconVideoCamera: () => IconVideoCamera,
    default: () => video_camera_default
  });
  var IconVideoCamera, video_camera_default;
  var init_video_camera = __esm({
    "lib/video-camera.ts"() {
      IconVideoCamera = `<svg id="VideoCamera" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="27" width="40.5" height="28.5" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="27" width="40.5" height="28.5" rx="6" ry="6" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="49.5 37.5 63 28.5 63 55.5 49.5 46.5 49.5 37.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="22.5" cy="20.25" r="6.75" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="20.25" r="6.75" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      video_camera_default = IconVideoCamera;
    }
  });

  // lib/videos.ts
  var videos_exports = {};
  __export(videos_exports, {
    IconVideos: () => IconVideos,
    default: () => videos_default
  });
  var IconVideos, videos_default;
  var init_videos = __esm({
    "lib/videos.ts"() {
      IconVideos = `<svg id="Videos" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M50,27H13c-2.21,0-4,1.79-4,4v23.5c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4v-23.5c0-2.21-1.79-4-4-4ZM26.44,49.5v-13.5l10.12,6.75-10.12,6.75Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="27" width="45" height="31.5" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,49.5h5c2.21,0,4-1.79,4-4v-23.5c0-2.21-1.79-4-4-4H22c-2.21,0-4,1.79-4,4v5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="26.44 36 26.44 49.5 36.56 42.75 26.44 36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      videos_default = IconVideos;
    }
  });

  // lib/volume-i.ts
  var volume_i_exports = {};
  __export(volume_i_exports, {
    IconVolumeI: () => IconVolumeI,
    default: () => volume_i_default
  });
  var IconVolumeI, volume_i_default;
  var init_volume_i = __esm({
    "lib/volume-i.ts"() {
      IconVolumeI = `<svg id="VolumeI" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="9 26.96 9 44.96 18 44.96 31.5 53.96 31.5 17.96 18 26.96 9 26.96" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="9 26.96 9 44.96 18 44.96 31.5 53.96 31.5 17.96 18 26.96 9 26.96" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M39.73,23.27c3.26,3.26,5.27,7.76,5.27,12.73s-2.01,9.47-5.27,12.73" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45.31,16.16c5.08,4.69,8.37,11.31,8.66,18.76s-2.45,14.32-7.14,19.39" style="fill: none; stroke: var(--icon-stroke-invisible, transparent); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M51.42,9.55c6.77,6.25,11.16,15.08,11.55,25.01s-3.27,19.09-9.52,25.86" style="fill: none; stroke: var(--icon-stroke-invisible, transparent); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      volume_i_default = IconVolumeI;
    }
  });

  // lib/volume-ii.ts
  var volume_ii_exports = {};
  __export(volume_ii_exports, {
    IconVolumeIi: () => IconVolumeIi,
    default: () => volume_ii_default
  });
  var IconVolumeIi, volume_ii_default;
  var init_volume_ii = __esm({
    "lib/volume-ii.ts"() {
      IconVolumeIi = `<svg id="VolumeIi" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="9 27 9 45 18 45 31.5 54 31.5 18 18 27 9 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="9 27 9 45 18 45 31.5 54 31.5 18 18 27 9 27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M39.73,23.32c3.26,3.26,5.27,7.76,5.27,12.73s-2.01,9.47-5.27,12.73" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45.31,16.2c5.08,4.69,8.37,11.31,8.66,18.76s-2.45,14.32-7.14,19.39" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M51.42,9.59c6.77,6.25,11.16,15.08,11.55,25.01s-3.27,19.09-9.52,25.86" style="fill: none; stroke: var(--icon-stroke-invisible, transparent); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      volume_ii_default = IconVolumeIi;
    }
  });

  // lib/volume-iii.ts
  var volume_iii_exports = {};
  __export(volume_iii_exports, {
    IconVolumeIii: () => IconVolumeIii,
    default: () => volume_iii_default
  });
  var IconVolumeIii, volume_iii_default;
  var init_volume_iii = __esm({
    "lib/volume-iii.ts"() {
      IconVolumeIii = `<svg id="VolumeIii" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="9 27 9 45 18 45 31.5 54 31.5 18 18 27 9 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="9 27 9 45 18 45 31.5 54 31.5 18 18 27 9 27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M39.73,23.32c3.26,3.26,5.27,7.76,5.27,12.73s-2.01,9.47-5.27,12.73" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45.31,16.2c5.08,4.69,8.37,11.31,8.66,18.76s-2.45,14.32-7.14,19.39" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M51.42,9.59c6.77,6.25,11.16,15.08,11.55,25.01s-3.27,19.09-9.52,25.86" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      volume_iii_default = IconVolumeIii;
    }
  });

  // lib/volume-mute.ts
  var volume_mute_exports = {};
  __export(volume_mute_exports, {
    IconVolumeMute: () => IconVolumeMute,
    default: () => volume_mute_default
  });
  var IconVolumeMute, volume_mute_default;
  var init_volume_mute = __esm({
    "lib/volume-mute.ts"() {
      IconVolumeMute = `<svg id="VolumeMute" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="22.5 27 22.5 45 31.5 45 45 54 45 18 31.5 27 22.5 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="22.5 27 22.5 45 31.5 45 45 54 45 18 31.5 27 22.5 27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="13.5" x2="13.5" y2="63" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      volume_mute_default = IconVolumeMute;
    }
  });

  // lib/volume-off.ts
  var volume_off_exports = {};
  __export(volume_off_exports, {
    IconVolumeOff: () => IconVolumeOff,
    default: () => volume_off_default
  });
  var IconVolumeOff, volume_off_default;
  var init_volume_off = __esm({
    "lib/volume-off.ts"() {
      IconVolumeOff = `<svg id="VolumeOff" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="9 27 9 45 18 45 31.5 54 31.5 18 18 27 9 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="9 27 9 45 18 45 31.5 54 31.5 18 18 27 9 27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M39.73,23.32c3.26,3.26,5.27,7.76,5.27,12.73s-2.01,9.47-5.27,12.73" style="fill: none; stroke: var(--icon-stroke-invisible, transparent); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45.31,16.2c5.08,4.69,8.37,11.31,8.66,18.76s-2.45,14.32-7.14,19.39" style="fill: none; stroke: var(--icon-stroke-invisible, transparent); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M51.42,9.59c6.77,6.25,11.16,15.08,11.55,25.01s-3.27,19.09-9.52,25.86" style="fill: none; stroke: var(--icon-stroke-invisible, transparent); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      volume_off_default = IconVolumeOff;
    }
  });

  // lib/website.ts
  var website_exports = {};
  __export(website_exports, {
    IconWebsite: () => IconWebsite,
    default: () => website_default
  });
  var IconWebsite, website_default;
  var init_website = __esm({
    "lib/website.ts"() {
      IconWebsite = `<svg id="Website" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="7.39" y="9" width="54" height="54" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="7.39" y1="27" x2="61.39" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="16.39" y1="18" x2="16.39" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="25.39" y1="18" x2="25.39" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="34.39" y1="18" x2="34.39" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M34.39,36l13.5,4.5-3.25,2.25,6.75,6.75-3.5,3.5-6.75-6.75-2.25,3.25-4.5-13.5M34.39,32c-1.04,0-2.07.41-2.83,1.17-1.07,1.07-1.45,2.66-.97,4.09l4.5,13.5c.48,1.44,1.73,2.48,3.23,2.69.19.03.38.04.57.04,1.02,0,2.01-.39,2.75-1.09l3.42,3.42c.78.78,1.8,1.17,2.83,1.17s2.05-.39,2.83-1.17l3.5-3.5c1.56-1.56,1.56-4.09,0-5.66l-3.42-3.42c.83-.88,1.23-2.09,1.05-3.31-.21-1.5-1.26-2.75-2.69-3.23l-13.5-4.5c-.41-.14-.84-.21-1.26-.21h0Z" style="fill: red; stroke-width: 0px;"/><rect x="7.39" y="9" width="54" height="54" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      website_default = IconWebsite;
    }
  });

  // lib/icon43.ts
  var icon43_exports = {};
  __export(icon43_exports, {
    IconIcon43: () => IconIcon43,
    default: () => icon43_default
  });
  var IconIcon43, icon43_default;
  var init_icon43 = __esm({
    "lib/icon43.ts"() {
      IconIcon43 = `<svg id="Icon43" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="27" style="fill: none;  stroke-linejoin: bevel; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="36" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/><line x1="22.5" y1="36" x2="22.5" y2="36" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/><line x1="49.5" y1="36" x2="49.5" y2="36" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/></svg>`;
      icon43_default = IconIcon43;
    }
  });

  // lib/baht-symbol.ts
  var baht_symbol_exports = {};
  __export(baht_symbol_exports, {
    IconBahtSymbol: () => IconBahtSymbol,
    default: () => baht_symbol_default
  });
  var IconBahtSymbol, baht_symbol_default;
  var init_baht_symbol = __esm({
    "lib/baht-symbol.ts"() {
      IconBahtSymbol = `<svg id="BahtSymbol" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M37.57,36c4.97,0,9,4.03,9,9s-4.03,9-9,9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M23.18,36h12.82c4.97,0,9-4.03,9-9s-4.03-9-9-9h-12.82v36h14.4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="9" x2="31.5" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="54" x2="31.5" y2="63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="37.57" y1="36" x2="25.54" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      baht_symbol_default = IconBahtSymbol;
    }
  });

  // lib/dice1.ts
  var dice1_exports = {};
  __export(dice1_exports, {
    IconDice1: () => IconDice1,
    default: () => dice1_default
  });
  var IconDice1, dice1_default;
  var init_dice1 = __esm({
    "lib/dice1.ts"() {
      IconDice1 = `<svg id="Dice1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      dice1_default = IconDice1;
    }
  });

  // lib/dice2.ts
  var dice2_exports = {};
  __export(dice2_exports, {
    IconDice2: () => IconDice2,
    default: () => dice2_default
  });
  var IconDice2, dice2_default;
  var init_dice2 = __esm({
    "lib/dice2.ts"() {
      IconDice2 = `<svg id="Dice2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="51.75" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="20.25" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      dice2_default = IconDice2;
    }
  });

  // lib/dice3.ts
  var dice3_exports = {};
  __export(dice3_exports, {
    IconDice3: () => IconDice3,
    default: () => dice3_default
  });
  var IconDice3, dice3_default;
  var init_dice3 = __esm({
    "lib/dice3.ts"() {
      IconDice3 = `<svg id="Dice3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><circle cx="51.75" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="20.25" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><circle cx="36" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      dice3_default = IconDice3;
    }
  });

  // lib/dice4.ts
  var dice4_exports = {};
  __export(dice4_exports, {
    IconDice4: () => IconDice4,
    default: () => dice4_default
  });
  var IconDice4, dice4_default;
  var init_dice4 = __esm({
    "lib/dice4.ts"() {
      IconDice4 = `<svg id="Dice4" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="20.25" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="20.25" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      dice4_default = IconDice4;
    }
  });

  // lib/dice5.ts
  var dice5_exports = {};
  __export(dice5_exports, {
    IconDice5: () => IconDice5,
    default: () => dice5_default
  });
  var IconDice5, dice5_default;
  var init_dice5 = __esm({
    "lib/dice5.ts"() {
      IconDice5 = `<svg id="Dice5" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><circle cx="20.25" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="20.25" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><circle cx="36" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      dice5_default = IconDice5;
    }
  });

  // lib/dice6.ts
  var dice6_exports = {};
  __export(dice6_exports, {
    IconDice6: () => IconDice6,
    default: () => dice6_default
  });
  var IconDice6, dice6_default;
  var init_dice6 = __esm({
    "lib/dice6.ts"() {
      IconDice6 = `<svg id="Dice6" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><circle cx="20.25" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="20.25" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><circle cx="20.25" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      dice6_default = IconDice6;
    }
  });

  // lib/dice7.ts
  var dice7_exports = {};
  __export(dice7_exports, {
    IconDice7: () => IconDice7,
    default: () => dice7_default
  });
  var IconDice7, dice7_default;
  var init_dice7 = __esm({
    "lib/dice7.ts"() {
      IconDice7 = `<svg id="Dice7" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="20.25" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="36" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="20.25" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="20.25" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      dice7_default = IconDice7;
    }
  });

  // lib/dice8.ts
  var dice8_exports = {};
  __export(dice8_exports, {
    IconDice8: () => IconDice8,
    default: () => dice8_default
  });
  var IconDice8, dice8_default;
  var init_dice8 = __esm({
    "lib/dice8.ts"() {
      IconDice8 = `<svg id="Dice8" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><circle cx="20.25" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="20.25" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><circle cx="20.25" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><g><circle cx="36" cy="28.12" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="36" cy="43.88" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><circle cx="51.75" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      dice8_default = IconDice8;
    }
  });

  // lib/dice9.ts
  var dice9_exports = {};
  __export(dice9_exports, {
    IconDice9: () => IconDice9,
    default: () => dice9_default
  });
  var IconDice9, dice9_default;
  var init_dice9 = __esm({
    "lib/dice9.ts"() {
      IconDice9 = `<svg id="Dice9" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><circle cx="20.25" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="20.25" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><circle cx="20.25" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="51.75" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><g><circle cx="36" cy="20.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="36" cy="51.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="36" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g></svg>`;
      dice9_default = IconDice9;
    }
  });

  // lib/digit-digital1.ts
  var digit_digital1_exports = {};
  __export(digit_digital1_exports, {
    IconDigitDigital1: () => IconDigitDigital1,
    default: () => digit_digital1_default
  });
  var IconDigitDigital1, digit_digital1_default;
  var init_digit_digital1 = __esm({
    "lib/digit-digital1.ts"() {
      IconDigitDigital1 = `<svg id="DigitDigital1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="51.5 31.67 48.65 34.67 45.81 31.67 45.81 16.67 48.65 13.67 51.5 16.67 51.5 31.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 55.67 48.65 58.67 45.81 55.67 45.81 40.67 48.65 37.67 51.5 40.67 51.5 55.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      digit_digital1_default = IconDigitDigital1;
    }
  });

  // lib/digit-digital2.ts
  var digit_digital2_exports = {};
  __export(digit_digital2_exports, {
    IconDigitDigital2: () => IconDigitDigital2,
    default: () => digit_digital2_default
  });
  var IconDigitDigital2, digit_digital2_default;
  var init_digit_digital2 = __esm({
    "lib/digit-digital2.ts"() {
      IconDigitDigital2 = `<svg id="DigitDigital2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="28.72 39 25.88 36 28.72 33 42.96 33 45.81 36 42.96 39 28.72 39" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 15 25.88 12 28.72 9 42.96 9 45.81 12 42.96 15 28.72 15" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 31.67 48.65 34.67 45.81 31.67 45.81 16.67 48.65 13.67 51.5 16.67 51.5 31.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="26.19 55.5 23.35 58.5 20.5 55.5 20.5 40.5 23.35 37.5 26.19 40.5 26.19 55.5" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 63 25.88 60 28.72 57 42.96 57 45.81 60 42.96 63 28.72 63" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      digit_digital2_default = IconDigitDigital2;
    }
  });

  // lib/digit-digital3.ts
  var digit_digital3_exports = {};
  __export(digit_digital3_exports, {
    IconDigitDigital3: () => IconDigitDigital3,
    default: () => digit_digital3_default
  });
  var IconDigitDigital3, digit_digital3_default;
  var init_digit_digital3 = __esm({
    "lib/digit-digital3.ts"() {
      IconDigitDigital3 = `<svg id="DigitDigital3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="28.72 39 25.88 36 28.72 33 42.96 33 45.81 36 42.96 39 28.72 39" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 15 25.88 12 28.72 9 42.96 9 45.81 12 42.96 15 28.72 15" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 31.67 48.65 34.67 45.81 31.67 45.81 16.67 48.65 13.67 51.5 16.67 51.5 31.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 55.67 48.65 58.67 45.81 55.67 45.81 40.67 48.65 37.67 51.5 40.67 51.5 55.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 63 25.88 60 28.72 57 42.96 57 45.81 60 42.96 63 28.72 63" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      digit_digital3_default = IconDigitDigital3;
    }
  });

  // lib/digit-digital4.ts
  var digit_digital4_exports = {};
  __export(digit_digital4_exports, {
    IconDigitDigital4: () => IconDigitDigital4,
    default: () => digit_digital4_default
  });
  var IconDigitDigital4, digit_digital4_default;
  var init_digit_digital4 = __esm({
    "lib/digit-digital4.ts"() {
      IconDigitDigital4 = `<svg id="DigitDigital4" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="28.72 39 25.88 36 28.72 33 42.96 33 45.81 36 42.96 39 28.72 39" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 31.67 48.65 34.67 45.81 31.67 45.81 16.67 48.65 13.67 51.5 16.67 51.5 31.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 55.67 48.65 58.67 45.81 55.67 45.81 40.67 48.65 37.67 51.5 40.67 51.5 55.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="26.19 31.5 23.35 34.5 20.5 31.5 20.5 16.5 23.35 13.5 26.19 16.5 26.19 31.5" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      digit_digital4_default = IconDigitDigital4;
    }
  });

  // lib/digit-digital5.ts
  var digit_digital5_exports = {};
  __export(digit_digital5_exports, {
    IconDigitDigital5: () => IconDigitDigital5,
    default: () => digit_digital5_default
  });
  var IconDigitDigital5, digit_digital5_default;
  var init_digit_digital5 = __esm({
    "lib/digit-digital5.ts"() {
      IconDigitDigital5 = `<svg id="DigitDigital5" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="28.72 39 25.88 36 28.72 33 42.96 33 45.81 36 42.96 39 28.72 39" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 15 25.88 12 28.72 9 42.96 9 45.81 12 42.96 15 28.72 15" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 55.67 48.65 58.67 45.81 55.67 45.81 40.67 48.65 37.67 51.5 40.67 51.5 55.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="26.19 31.5 23.35 34.5 20.5 31.5 20.5 16.5 23.35 13.5 26.19 16.5 26.19 31.5" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 63 25.88 60 28.72 57 42.96 57 45.81 60 42.96 63 28.72 63" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      digit_digital5_default = IconDigitDigital5;
    }
  });

  // lib/digit-digital6.ts
  var digit_digital6_exports = {};
  __export(digit_digital6_exports, {
    IconDigitDigital6: () => IconDigitDigital6,
    default: () => digit_digital6_default
  });
  var IconDigitDigital6, digit_digital6_default;
  var init_digit_digital6 = __esm({
    "lib/digit-digital6.ts"() {
      IconDigitDigital6 = `<svg id="DigitDigital6" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="28.72 39 25.88 36 28.72 33 42.96 33 45.81 36 42.96 39 28.72 39" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 15 25.88 12 28.72 9 42.96 9 45.81 12 42.96 15 28.72 15" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 55.67 48.65 58.67 45.81 55.67 45.81 40.67 48.65 37.67 51.5 40.67 51.5 55.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="26.19 31.5 23.35 34.5 20.5 31.5 20.5 16.5 23.35 13.5 26.19 16.5 26.19 31.5" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="26.19 55.5 23.35 58.5 20.5 55.5 20.5 40.5 23.35 37.5 26.19 40.5 26.19 55.5" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 63 25.88 60 28.72 57 42.96 57 45.81 60 42.96 63 28.72 63" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      digit_digital6_default = IconDigitDigital6;
    }
  });

  // lib/digit-digital7.ts
  var digit_digital7_exports = {};
  __export(digit_digital7_exports, {
    IconDigitDigital7: () => IconDigitDigital7,
    default: () => digit_digital7_default
  });
  var IconDigitDigital7, digit_digital7_default;
  var init_digit_digital7 = __esm({
    "lib/digit-digital7.ts"() {
      IconDigitDigital7 = `<svg id="DigitDigital7" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="28.72 15 25.88 12 28.72 9 42.96 9 45.81 12 42.96 15 28.72 15" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 31.67 48.65 34.67 45.81 31.67 45.81 16.67 48.65 13.67 51.5 16.67 51.5 31.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 55.67 48.65 58.67 45.81 55.67 45.81 40.67 48.65 37.67 51.5 40.67 51.5 55.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      digit_digital7_default = IconDigitDigital7;
    }
  });

  // lib/digit-digital8.ts
  var digit_digital8_exports = {};
  __export(digit_digital8_exports, {
    IconDigitDigital8: () => IconDigitDigital8,
    default: () => digit_digital8_default
  });
  var IconDigitDigital8, digit_digital8_default;
  var init_digit_digital8 = __esm({
    "lib/digit-digital8.ts"() {
      IconDigitDigital8 = `<svg id="DigitDigital8" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="28.72 39 25.88 36 28.72 33 42.96 33 45.81 36 42.96 39 28.72 39" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 15 25.88 12 28.72 9 42.96 9 45.81 12 42.96 15 28.72 15" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 31.67 48.65 34.67 45.81 31.67 45.81 16.67 48.65 13.67 51.5 16.67 51.5 31.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 55.67 48.65 58.67 45.81 55.67 45.81 40.67 48.65 37.67 51.5 40.67 51.5 55.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="26.19 31.5 23.35 34.5 20.5 31.5 20.5 16.5 23.35 13.5 26.19 16.5 26.19 31.5" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="26.19 55.5 23.35 58.5 20.5 55.5 20.5 40.5 23.35 37.5 26.19 40.5 26.19 55.5" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 63 25.88 60 28.72 57 42.96 57 45.81 60 42.96 63 28.72 63" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      digit_digital8_default = IconDigitDigital8;
    }
  });

  // lib/digit-digital9.ts
  var digit_digital9_exports = {};
  __export(digit_digital9_exports, {
    IconDigitDigital9: () => IconDigitDigital9,
    default: () => digit_digital9_default
  });
  var IconDigitDigital9, digit_digital9_default;
  var init_digit_digital9 = __esm({
    "lib/digit-digital9.ts"() {
      IconDigitDigital9 = `<svg id="DigitDigital9" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="28.72 39 25.88 36 28.72 33 42.96 33 45.81 36 42.96 39 28.72 39" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 15 25.88 12 28.72 9 42.96 9 45.81 12 42.96 15 28.72 15" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 31.67 48.65 34.67 45.81 31.67 45.81 16.67 48.65 13.67 51.5 16.67 51.5 31.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 55.67 48.65 58.67 45.81 55.67 45.81 40.67 48.65 37.67 51.5 40.67 51.5 55.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="26.19 31.5 23.35 34.5 20.5 31.5 20.5 16.5 23.35 13.5 26.19 16.5 26.19 31.5" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 63 25.88 60 28.72 57 42.96 57 45.81 60 42.96 63 28.72 63" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      digit_digital9_default = IconDigitDigital9;
    }
  });

  // lib/digit-digtal0.ts
  var digit_digtal0_exports = {};
  __export(digit_digtal0_exports, {
    IconDigitDigtal0: () => IconDigitDigtal0,
    default: () => digit_digtal0_default
  });
  var IconDigitDigtal0, digit_digtal0_default;
  var init_digit_digtal0 = __esm({
    "lib/digit-digtal0.ts"() {
      IconDigitDigtal0 = `<svg id="DigitDigtal0" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="28.72 15 25.88 12 28.72 9 42.96 9 45.81 12 42.96 15 28.72 15" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 31.67 48.65 34.67 45.81 31.67 45.81 16.67 48.65 13.67 51.5 16.67 51.5 31.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="51.5 55.67 48.65 58.67 45.81 55.67 45.81 40.67 48.65 37.67 51.5 40.67 51.5 55.67" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="26.19 31.5 23.35 34.5 20.5 31.5 20.5 16.5 23.35 13.5 26.19 16.5 26.19 31.5" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="26.19 55.5 23.35 58.5 20.5 55.5 20.5 40.5 23.35 37.5 26.19 40.5 26.19 55.5" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><polygon points="28.72 63 25.88 60 28.72 57 42.96 57 45.81 60 42.96 63 28.72 63" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      digit_digtal0_default = IconDigitDigtal0;
    }
  });

  // lib/dollar.ts
  var dollar_exports = {};
  __export(dollar_exports, {
    IconDollar: () => IconDollar,
    default: () => dollar_default
  });
  var IconDollar, dollar_default;
  var init_dollar = __esm({
    "lib/dollar.ts"() {
      IconDollar = `<svg id="Dollar" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M44.44,17.89s-25.65-8.55-25.65,8.55,29.92,4.27,29.92,21.38-25.65,8.55-25.65,8.55" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="15.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="36" y2="63" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      dollar_default = IconDollar;
    }
  });

  // lib/euro.ts
  var euro_exports = {};
  __export(euro_exports, {
    IconEuro: () => IconEuro,
    default: () => euro_default
  });
  var IconEuro, euro_default;
  var init_euro = __esm({
    "lib/euro.ts"() {
      IconEuro = `<svg id="Euro" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M50.77,21.23c-3.25-4.67-8.65-7.73-14.77-7.73-9.94,0-18,8.06-18,18v9c0,9.94,8.06,18,18,18,5.96,0,11.22-2.91,14.5-7.37" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="31.5" x2="36" y2="31.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="40.5" x2="36" y2="40.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      euro_default = IconEuro;
    }
  });

  // lib/percentage.ts
  var percentage_exports = {};
  __export(percentage_exports, {
    IconPercentage: () => IconPercentage,
    default: () => percentage_default
  });
  var IconPercentage, percentage_default;
  var init_percentage = __esm({
    "lib/percentage.ts"() {
      IconPercentage = `<svg id="Percentage" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="58.5" x2="58.5" y2="13.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="20.25" cy="20.25" r="6.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="51.75" cy="51.75" r="6.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      percentage_default = IconPercentage;
    }
  });

  // lib/pound-symbol.ts
  var pound_symbol_exports = {};
  __export(pound_symbol_exports, {
    IconPoundSymbol: () => IconPoundSymbol,
    default: () => pound_symbol_default
  });
  var IconPoundSymbol, pound_symbol_default;
  var init_pound_symbol = __esm({
    "lib/pound-symbol.ts"() {
      IconPoundSymbol = `<svg id="PoundSymbol" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M23.85,30.15c0,8.1,2.25,12.15,2.25,16.2s-2.25,12.15-2.25,12.15h24.3" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M23.85,30.15c0-6.71,5.44-12.15,12.15-12.15s12.15,5.44,12.15,12.15" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="45" x2="36" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      pound_symbol_default = IconPoundSymbol;
    }
  });

  // lib/promille.ts
  var promille_exports = {};
  __export(promille_exports, {
    IconPromille: () => IconPromille,
    default: () => promille_default
  });
  var IconPromille, promille_default;
  var init_promille = __esm({
    "lib/promille.ts"() {
      IconPromille = `<svg id="Promille" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="58.5" x2="58.5" y2="13.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="20.25" cy="20.25" r="6.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="51.75" cy="51.75" r="6.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="38.25" cy="51.75" r="6.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      promille_default = IconPromille;
    }
  });

  // lib/rubles-symbol.ts
  var rubles_symbol_exports = {};
  __export(rubles_symbol_exports, {
    IconRublesSymbol: () => IconRublesSymbol,
    default: () => rubles_symbol_default
  });
  var IconRublesSymbol, rubles_symbol_default;
  var init_rubles_symbol = __esm({
    "lib/rubles-symbol.ts"() {
      IconRublesSymbol = `<svg id="RublesSymbol" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.5,58.5V18h15c6.21,0,11.25,5.04,11.25,11.25s-5.04,11.25-11.25,11.25H13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="49.5" x2="31.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      rubles_symbol_default = IconRublesSymbol;
    }
  });

  // lib/rupee-symbol-copy.ts
  var rupee_symbol_copy_exports = {};
  __export(rupee_symbol_copy_exports, {
    IconRupeeSymbolCopy: () => IconRupeeSymbolCopy,
    default: () => rupee_symbol_copy_default
  });
  var IconRupeeSymbolCopy, rupee_symbol_copy_default;
  var init_rupee_symbol_copy = __esm({
    "lib/rupee-symbol-copy.ts"() {
      IconRupeeSymbolCopy = `<svg id="RupeeSymbolCopy" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="18 18 27 54 36 18 45 54 54 18" style="fill: none;  stroke-linejoin: bevel; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="31.5" x2="21.35" y2="31.5" style="fill: none;  stroke-linejoin: bevel; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="40.5" x2="23.68" y2="40.5" style="fill: none;  stroke-linejoin: bevel; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="50.65" y1="31.5" x2="58.5" y2="31.5" style="fill: none;  stroke-linejoin: bevel; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="48.25" y1="40.5" x2="58.5" y2="40.5" style="fill: none;  stroke-linejoin: bevel; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      rupee_symbol_copy_default = IconRupeeSymbolCopy;
    }
  });

  // lib/rupee-symbol.ts
  var rupee_symbol_exports = {};
  __export(rupee_symbol_exports, {
    IconRupeeSymbol: () => IconRupeeSymbol,
    default: () => rupee_symbol_default
  });
  var IconRupeeSymbol, rupee_symbol_default;
  var init_rupee_symbol = __esm({
    "lib/rupee-symbol.ts"() {
      IconRupeeSymbol = `<svg id="RupeeSymbol" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="22.5" y1="18" x2="49.5" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="27" x2="49.5" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45,54l-22.5-18h13.5c4.97,0,9-4.03,9-9s-4.03-9-9-9h-13.5" style="fill: none;  stroke-linejoin: bevel; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      rupee_symbol_default = IconRupeeSymbol;
    }
  });

  // lib/symbol-female.ts
  var symbol_female_exports = {};
  __export(symbol_female_exports, {
    IconSymbolFemale: () => IconSymbolFemale,
    default: () => symbol_female_default
  });
  var IconSymbolFemale, symbol_female_default;
  var init_symbol_female = __esm({
    "lib/symbol-female.ts"() {
      IconSymbolFemale = `<svg id="SymbolFemale" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="27" r="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="36" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="49.5" x2="45" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="49.5" x2="45" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      symbol_female_default = IconSymbolFemale;
    }
  });

  // lib/symbol-male.ts
  var symbol_male_exports = {};
  __export(symbol_male_exports, {
    IconSymbolMale: () => IconSymbolMale,
    default: () => symbol_male_default
  });
  var IconSymbolMale, symbol_male_default;
  var init_symbol_male = __esm({
    "lib/symbol-male.ts"() {
      IconSymbolMale = `<svg id="SymbolMale" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="45" r="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45.55" y1="35.45" x2="58.5" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 22.5 58.5 22.5 58.5 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      symbol_male_default = IconSymbolMale;
    }
  });

  // lib/symbol-unisex.ts
  var symbol_unisex_exports = {};
  __export(symbol_unisex_exports, {
    IconSymbolUnisex: () => IconSymbolUnisex,
    default: () => symbol_unisex_default
  });
  var IconSymbolUnisex, symbol_unisex_default;
  var init_symbol_unisex = __esm({
    "lib/symbol-unisex.ts"() {
      IconSymbolUnisex = `<svg id="SymbolUnisex" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="67.5" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="58.5" x2="45" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="58.5" x2="45" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45.55" y1="26.45" x2="58.5" y2="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 13.5 58.5 13.5 58.5 27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      symbol_unisex_default = IconSymbolUnisex;
    }
  });

  // lib/three-dots-diagonal-major.ts
  var three_dots_diagonal_major_exports = {};
  __export(three_dots_diagonal_major_exports, {
    IconThreeDotsDiagonalMajor: () => IconThreeDotsDiagonalMajor,
    default: () => three_dots_diagonal_major_default
  });
  var IconThreeDotsDiagonalMajor, three_dots_diagonal_major_default;
  var init_three_dots_diagonal_major = __esm({
    "lib/three-dots-diagonal-major.ts"() {
      IconThreeDotsDiagonalMajor = `<svg id="ThreeDotsDiagonalMajor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="21.68" cy="21.68" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="50.32" cy="50.32" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      three_dots_diagonal_major_default = IconThreeDotsDiagonalMajor;
    }
  });

  // lib/three-dots-diagonal-minor.ts
  var three_dots_diagonal_minor_exports = {};
  __export(three_dots_diagonal_minor_exports, {
    IconThreeDotsDiagonalMinor: () => IconThreeDotsDiagonalMinor,
    default: () => three_dots_diagonal_minor_default
  });
  var IconThreeDotsDiagonalMinor, three_dots_diagonal_minor_default;
  var init_three_dots_diagonal_minor = __esm({
    "lib/three-dots-diagonal-minor.ts"() {
      IconThreeDotsDiagonalMinor = `<svg id="ThreeDotsDiagonalMinor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="21.68" cy="50.32" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="50.32" cy="21.68" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      three_dots_diagonal_minor_default = IconThreeDotsDiagonalMinor;
    }
  });

  // lib/three-dots-horizontal.ts
  var three_dots_horizontal_exports = {};
  __export(three_dots_horizontal_exports, {
    IconThreeDotsHorizontal: () => IconThreeDotsHorizontal,
    default: () => three_dots_horizontal_default
  });
  var IconThreeDotsHorizontal, three_dots_horizontal_default;
  var init_three_dots_horizontal = __esm({
    "lib/three-dots-horizontal.ts"() {
      IconThreeDotsHorizontal = `<svg id="ThreeDotsHorizontal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="15.75" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="56.25" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      three_dots_horizontal_default = IconThreeDotsHorizontal;
    }
  });

  // lib/three-dots-lines.ts
  var three_dots_lines_exports = {};
  __export(three_dots_lines_exports, {
    IconThreeDotsLines: () => IconThreeDotsLines,
    default: () => three_dots_lines_default
  });
  var IconThreeDotsLines, three_dots_lines_default;
  var init_three_dots_lines = __esm({
    "lib/three-dots-lines.ts"() {
      IconThreeDotsLines = `<svg id="ThreeDotsLines" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="6.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="15.75" cy="36" r="6.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="56.25" cy="36" r="6.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      three_dots_lines_default = IconThreeDotsLines;
    }
  });

  // lib/three-dots-vertical.ts
  var three_dots_vertical_exports = {};
  __export(three_dots_vertical_exports, {
    IconThreeDotsVertical: () => IconThreeDotsVertical,
    default: () => three_dots_vertical_default
  });
  var IconThreeDotsVertical, three_dots_vertical_default;
  var init_three_dots_vertical = __esm({
    "lib/three-dots-vertical.ts"() {
      IconThreeDotsVertical = `<svg id="ThreeDotsVertical" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="36" cy="56.25" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="36" cy="15.75" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      three_dots_vertical_default = IconThreeDotsVertical;
    }
  });

  // lib/two-dots-diagonal-major.ts
  var two_dots_diagonal_major_exports = {};
  __export(two_dots_diagonal_major_exports, {
    IconTwoDotsDiagonalMajor: () => IconTwoDotsDiagonalMajor,
    default: () => two_dots_diagonal_major_default
  });
  var IconTwoDotsDiagonalMajor, two_dots_diagonal_major_default;
  var init_two_dots_diagonal_major = __esm({
    "lib/two-dots-diagonal-major.ts"() {
      IconTwoDotsDiagonalMajor = `<svg id="TwoDotsDiagonalMajor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="28.84" cy="43.16" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="43.16" cy="28.84" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      two_dots_diagonal_major_default = IconTwoDotsDiagonalMajor;
    }
  });

  // lib/two-dots-diagonal-minor.ts
  var two_dots_diagonal_minor_exports = {};
  __export(two_dots_diagonal_minor_exports, {
    IconTwoDotsDiagonalMinor: () => IconTwoDotsDiagonalMinor,
    default: () => two_dots_diagonal_minor_default
  });
  var IconTwoDotsDiagonalMinor, two_dots_diagonal_minor_default;
  var init_two_dots_diagonal_minor = __esm({
    "lib/two-dots-diagonal-minor.ts"() {
      IconTwoDotsDiagonalMinor = `<svg id="TwoDotsDiagonalMinor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="28.84" cy="28.84" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="43.16" cy="43.16" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      two_dots_diagonal_minor_default = IconTwoDotsDiagonalMinor;
    }
  });

  // lib/two-dots-horizontal.ts
  var two_dots_horizontal_exports = {};
  __export(two_dots_horizontal_exports, {
    IconTwoDotsHorizontal: () => IconTwoDotsHorizontal,
    default: () => two_dots_horizontal_default
  });
  var IconTwoDotsHorizontal, two_dots_horizontal_default;
  var init_two_dots_horizontal = __esm({
    "lib/two-dots-horizontal.ts"() {
      IconTwoDotsHorizontal = `<svg id="TwoDotsHorizontal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="25.88" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="46.12" cy="36" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      two_dots_horizontal_default = IconTwoDotsHorizontal;
    }
  });

  // lib/two-dots-lines.ts
  var two_dots_lines_exports = {};
  __export(two_dots_lines_exports, {
    IconTwoDotsLines: () => IconTwoDotsLines,
    default: () => two_dots_lines_default
  });
  var IconTwoDotsLines, two_dots_lines_default;
  var init_two_dots_lines = __esm({
    "lib/two-dots-lines.ts"() {
      IconTwoDotsLines = `<svg id="TwoDotsLines" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="46.12" cy="36" r="6.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="25.88" cy="36" r="6.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      two_dots_lines_default = IconTwoDotsLines;
    }
  });

  // lib/two-dots-vertical.ts
  var two_dots_vertical_exports = {};
  __export(two_dots_vertical_exports, {
    IconTwoDotsVertical: () => IconTwoDotsVertical,
    default: () => two_dots_vertical_default
  });
  var IconTwoDotsVertical, two_dots_vertical_default;
  var init_two_dots_vertical = __esm({
    "lib/two-dots-vertical.ts"() {
      IconTwoDotsVertical = `<svg id="TwoDotsVertical" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="46.12" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="36" cy="25.88" r="6.75" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      two_dots_vertical_default = IconTwoDotsVertical;
    }
  });

  // lib/yen.ts
  var yen_exports = {};
  __export(yen_exports, {
    IconYen: () => IconYen,
    default: () => yen_default
  });
  var IconYen, yen_default;
  var init_yen = __esm({
    "lib/yen.ts"() {
      IconYen = `<svg id="Yen" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="22.5" y1="36" x2="49.5" y2="36" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="45" x2="49.5" y2="45" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="18 13.5 36 36 54 13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="36" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      yen_default = IconYen;
    }
  });

  // lib/ai-face.ts
  var ai_face_exports = {};
  __export(ai_face_exports, {
    IconAiFace: () => IconAiFace,
    default: () => ai_face_default
  });
  var IconAiFace, ai_face_default;
  var init_ai_face = __esm({
    "lib/ai-face.ts"() {
      IconAiFace = `<svg id="AiFace" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="9" x2="36" y2="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="27" x2="63" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="36" x2="63" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="36" x2="18" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="27" x2="18" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="18" width="36" height="36" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="18" y="18" width="36" height="36" rx="4" ry="4" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="31.5" x2="27" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width: 8px;"/><line x1="45" y1="31.5" x2="45" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width: 8px;"/><path d="M45,40.5c-4.5,4.5-13.5,4.5-18,0" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      ai_face_default = IconAiFace;
    }
  });

  // lib/ai-letters-blocked.ts
  var ai_letters_blocked_exports = {};
  __export(ai_letters_blocked_exports, {
    IconAiLettersBlocked: () => IconAiLettersBlocked,
    default: () => ai_letters_blocked_default
  });
  var IconAiLettersBlocked, ai_letters_blocked_default;
  var init_ai_letters_blocked = __esm({
    "lib/ai-letters-blocked.ts"() {
      IconAiLettersBlocked = `<svg id="AiLettersBlocked" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="9" width="54" height="54" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="9" width="54" height="54" rx="2" ry="2" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M20.25,47.25v-18.5c0-2.21,1.79-4,4-4h5.5c2.21,0,4,1.79,4,4v18.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="20.25" y1="38.25" x2="33.75" y2="38.25" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="24.75" x2="51.75" y2="24.75" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="47.25" x2="51.75" y2="47.25" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.25" y1="24.75" x2="47.25" y2="47.25" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      ai_letters_blocked_default = IconAiLettersBlocked;
    }
  });

  // lib/ai-letters-circled.ts
  var ai_letters_circled_exports = {};
  __export(ai_letters_circled_exports, {
    IconAiLettersCircled: () => IconAiLettersCircled,
    default: () => ai_letters_circled_default
  });
  var IconAiLettersCircled, ai_letters_circled_default;
  var init_ai_letters_circled = __esm({
    "lib/ai-letters-circled.ts"() {
      IconAiLettersCircled = `<svg id="AiLettersCircled" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="36" r="27" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M20.25,47.25v-18.5c0-2.21,1.79-4,4-4h5.5c2.21,0,4,1.79,4,4v18.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="20.25" y1="38.25" x2="33.75" y2="38.25" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="24.75" x2="51.75" y2="24.75" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="47.25" x2="51.75" y2="47.25" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.25" y1="24.75" x2="47.25" y2="47.25" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      ai_letters_circled_default = IconAiLettersCircled;
    }
  });

  // lib/ai-letters.ts
  var ai_letters_exports = {};
  __export(ai_letters_exports, {
    IconAiLetters: () => IconAiLetters,
    default: () => ai_letters_default
  });
  var IconAiLetters, ai_letters_default;
  var init_ai_letters = __esm({
    "lib/ai-letters.ts"() {
      IconAiLetters = `<svg id="AiLetters" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M20.25,47.25v-18.5c0-2.21,1.79-4,4-4h5.5c2.21,0,4,1.79,4,4v18.5" style="fill: white;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="20.25" y1="38.25" x2="33.75" y2="38.25" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="24.75" x2="51.75" y2="24.75" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="47.25" x2="51.75" y2="47.25" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.25" y1="24.75" x2="47.25" y2="47.25" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      ai_letters_default = IconAiLetters;
    }
  });

  // lib/animal-step.ts
  var animal_step_exports = {};
  __export(animal_step_exports, {
    IconAnimalStep: () => IconAnimalStep,
    default: () => animal_step_default
  });
  var IconAnimalStep, animal_step_default;
  var init_animal_step = __esm({
    "lib/animal-step.ts"() {
      IconAnimalStep = `<svg id="AnimalStep" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><ellipse cx="45.25" cy="22.76" rx="6.75" ry="8.44" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><ellipse cx="57.6" cy="35.82" rx="6.19" ry="4.95" transform="translate(-8.46 51.22) rotate(-45)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M36,56.19c-9.94,0-18,5.44-18-4.5,0-9.94,8.06-18,18-18,9.94,0,18,8.06,18,18s-8.06,4.5-18,4.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><ellipse cx="26.75" cy="22.76" rx="6.75" ry="8.44" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><ellipse cx="14.4" cy="35.82" rx="4.95" ry="6.19" transform="translate(-21.11 20.67) rotate(-45)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><ellipse cx="45.25" cy="22.76" rx="6.75" ry="8.44" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><ellipse cx="57.6" cy="35.82" rx="6.19" ry="4.95" transform="translate(-8.46 51.22) rotate(-45)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,56.19c-9.94,0-18,5.44-18-4.5,0-9.94,8.06-18,18-18,9.94,0,18,8.06,18,18s-8.06,4.5-18,4.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><ellipse cx="26.75" cy="22.76" rx="6.75" ry="8.44" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><ellipse cx="14.4" cy="35.82" rx="4.95" ry="6.19" transform="translate(-21.11 20.67) rotate(-45)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      animal_step_default = IconAnimalStep;
    }
  });

  // lib/artwork-frame.ts
  var artwork_frame_exports = {};
  __export(artwork_frame_exports, {
    IconArtworkFrame: () => IconArtworkFrame,
    default: () => artwork_frame_default
  });
  var IconArtworkFrame, artwork_frame_default;
  var init_artwork_frame = __esm({
    "lib/artwork-frame.ts"() {
      IconArtworkFrame = `<svg id="ArtworkFrame" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="18" width="36" height="36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M18,9s2.01,2.5,4.5,2.5,4.5-2.5,4.5-2.5c0,0,2.01,2.5,4.5,2.5s4.5-2.5,4.5-2.5c0,0,2.01,2.5,4.5,2.5s4.5-2.5,4.5-2.5c0,0,2.01,2.5,4.5,2.5s4.5-2.5,4.5-2.5h9v9s-2.5,2.01-2.5,4.5,2.5,4.5,2.5,4.5c0,0-2.5,2.01-2.5,4.5s2.5,4.5,2.5,4.5c0,0-2.5,2.01-2.5,4.5s2.5,4.5,2.5,4.5c0,0-2.5,2.01-2.5,4.5s2.5,4.5,2.5,4.5v9h-9s-2.01-2.5-4.5-2.5-4.5,2.5-4.5,2.5c0,0-2.01-2.5-4.5-2.5s-4.5,2.5-4.5,2.5c0,0-2.01-2.5-4.5-2.5s-4.5,2.5-4.5,2.5c0,0-2.01-2.5-4.5-2.5s-4.5,2.5-4.5,2.5h-9v-9s2.5-2.01,2.5-4.5-2.5-4.5-2.5-4.5c0,0,2.5-2.01,2.5-4.5s-2.5-4.5-2.5-4.5c0,0,2.5-2.01,2.5-4.5s-2.5-4.5-2.5-4.5c0,0,2.5-2.01,2.5-4.5s-2.5-4.5-2.5-4.5v-9h9Z" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="18" width="36" height="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      artwork_frame_default = IconArtworkFrame;
    }
  });

  // lib/barbecue.ts
  var barbecue_exports = {};
  __export(barbecue_exports, {
    IconBarbecue: () => IconBarbecue,
    default: () => barbecue_default
  });
  var IconBarbecue, barbecue_default;
  var init_barbecue = __esm({
    "lib/barbecue.ts"() {
      IconBarbecue = `<svg id="Barbecue" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M57.99,22.5c.28,0,.51.23.51.51-.27,12.19-10.24,21.99-22.49,21.99s-22.22-9.8-22.49-21.99c0-.28.23-.51.51-.51h43.97Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M57.99,22.5c.28,0,.51.23.51.51-.27,12.19-10.24,21.99-22.49,21.99s-22.22-9.8-22.49-21.99c0-.28.23-.51.51-.51h43.97Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="31.5" x2="15.87" y2="31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="56.57" y1="31.5" x2="63.43" y2="31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,45c-.67,0-1.34-.04-2-.09v17.59c0,.28.22.5.5.5h3c.28,0,.5-.22.5-.5v-17.59c-.66.06-1.33.09-2,.09Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><g><path d="M24.45,41.81l-6.84,20.53c-.11.32.13.66.47.66h3.16c.22,0,.41-.14.47-.34l6.36-19.09c-1.27-.48-2.48-1.06-3.63-1.75Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M47.55,41.81c-1.15.69-2.36,1.28-3.63,1.75l6.36,19.09c.07.2.26.34.47.34h3.16c.34,0,.58-.33.47-.66l-6.84-20.53Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><path d="M31.5,29.25c0-10-9-10-9-22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,29.25c0-10-9-10-9-22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,29.25c0-10-9-10-9-22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      barbecue_default = IconBarbecue;
    }
  });

  // lib/bathroom-essentials.ts
  var bathroom_essentials_exports = {};
  __export(bathroom_essentials_exports, {
    IconBathroomEssentials: () => IconBathroomEssentials,
    default: () => bathroom_essentials_default
  });
  var IconBathroomEssentials, bathroom_essentials_default;
  var init_bathroom_essentials = __esm({
    "lib/bathroom-essentials.ts"() {
      IconBathroomEssentials = `<svg id="BathroomEssentials" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M22.51,18.1s0-.07-.01-.1v-8.5c0-.28-.22-.5-.5-.5h-8c-.28,0-.5.22-.5.5v8.5s0,.07-.01.1l-2.77,11.06c-1.14,4.54-1.7,9.21-1.68,13.89l.05,10.38c-.04.3.19.57.5.57h16.85c.3,0,.54-.27.5-.57l.05-10.38c.02-4.68-.54-9.35-1.68-13.89l-2.77-11.06Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M40.5,9h-8.5c-.28,0-.5.22-.5.5v12.5c0,.28.22.5.5.5h8.41c.05-.87.09-1.74.09-2.62v-10.88Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M14,9h8c.28,0,.5.22.5.5v8.6s2.79,11.06,2.79,11.06c1.14,4.54,1.7,9.21,1.68,13.89l-.05,10.38c.04.3-.19.57-.49.57H9.58c-.3,0-.54-.27-.49-.57l-.05-10.38c-.02-4.68.54-9.35,1.68-13.89l2.77-11.06v-.1s.01-8.5.01-8.5c0-.28.22-.5.5-.5Z" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,54v-6.38c0-4.71.76-9.39,2.25-13.87h0c1.49-4.47,2.25-9.15,2.25-13.87v-10.88s-8.5,0-8.5,0c-.28,0-.5.22-.5.5v12.5c0,.28.22.5.5.5h7.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,9h11.5c1.1,0,2,.9,2,2v41c0,1.1-.9,2-2,2h-11.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="18.61" x2="63" y2="18.61" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="27" x2="63" y2="27" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="36" x2="63" y2="36" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="45" x2="63" y2="45" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.49" y1="18.07" x2="22.51" y2="18.07" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      bathroom_essentials_default = IconBathroomEssentials;
    }
  });

  // lib/binoculars.ts
  var binoculars_exports = {};
  __export(binoculars_exports, {
    IconBinoculars: () => IconBinoculars,
    default: () => binoculars_default
  });
  var IconBinoculars, binoculars_default;
  var init_binoculars = __esm({
    "lib/binoculars.ts"() {
      IconBinoculars = `<svg id="Binoculars" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="38.17" y="15.64" width="18.18" height="18.18" transform="translate(31.33 -26.18) rotate(45)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="27.14" y="28.5" width="14.55" height="18.18" transform="translate(36.66 -13.32) rotate(45)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="16.1" y="41.36" width="10.91" height="18.18" transform="translate(41.98 -.46) rotate(45)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="44.69" y1="9.31" x2="62.69" y2="27.31" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="8.69" y1="50.45" x2="21.55" y2="63.31" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      binoculars_default = IconBinoculars;
    }
  });

  // lib/blender.ts
  var blender_exports = {};
  __export(blender_exports, {
    IconBlender: () => IconBlender,
    default: () => blender_default
  });
  var IconBlender, blender_default;
  var init_blender = __esm({
    "lib/blender.ts"() {
      IconBlender = `<svg id="Blender" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M47.99,27.5c-13.4,0-13.4,6.25-24.12,6.25l-.05.19c.67,4.76,1.68,10.16,3.22,15.56h18c2.29-8.03,3.42-16.06,3.97-22h-1.03Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M23.82,33.75c10.72,0,10.72-6.25,24.12-6.25" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="56" x2="36" y2="56" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M23,9c-.28,0-.5.22-.5.5v8.5s0,15.75,4.5,31.5h18c4.5-15.75,4.5-31.5,4.5-31.5v-8.5c0-.28-.22-.5-.5-.5h-26Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45,49.5c3.85,3.85,4.41,11,4.49,12.98.01.28-.21.52-.5.52h-25.97c-.29,0-.51-.24-.5-.52.08-1.98.64-9.13,4.49-12.98h18Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,36v-14c0-2.21,1.79-4,4-4h32" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      blender_default = IconBlender;
    }
  });

  // lib/bookcase.ts
  var bookcase_exports = {};
  __export(bookcase_exports, {
    IconBookcase: () => IconBookcase,
    default: () => bookcase_default
  });
  var IconBookcase, bookcase_default;
  var init_bookcase = __esm({
    "lib/bookcase.ts"() {
      IconBookcase = `<svg id="Bookcase" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="13.5 63 13.5 13.5 58.5 13.5 58.5 63" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="58.5" x2="58.5" y2="58.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="20.5" x2="22.5" y2="29.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="28.5" y1="20.5" x2="28.5" y2="29.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="34.5" y1="20.5" x2="34.5" y2="29.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49" y1="29" x2="40" y2="29" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="39.5" y1="43" x2="39.5" y2="52" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45.5" y1="43" x2="45.5" y2="52" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="51.5" y1="43" x2="51.5" y2="52" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      bookcase_default = IconBookcase;
    }
  });

  // lib/bulb.ts
  var bulb_exports = {};
  __export(bulb_exports, {
    IconBulb: () => IconBulb,
    default: () => bulb_default
  });
  var IconBulb, bulb_default;
  var init_bulb = __esm({
    "lib/bulb.ts"() {
      IconBulb = `<svg id="Bulb" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54,27c0-9.94-8.06-18-18-18s-18,8.06-18,18c0,13.5,10.8,18,10.8,27v5c0,2.21,1.79,4,4,4h6.4c2.21,0,4-1.79,4-4v-5c0-9,10.8-13.5,10.8-27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,31.5c0,2.49-2.01,4.5-4.5,4.5s-4.5-2.01-4.5-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,27c0-9.94-8.06-18-18-18s-18,8.06-18,18c0,13.5,10.8,18,10.8,27v5c0,2.21,1.79,4,4,4h6.4c2.21,0,4-1.79,4-4v-5c0-9,10.8-13.5,10.8-27" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="54" x2="45" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      bulb_default = IconBulb;
    }
  });

  // lib/chip.ts
  var chip_exports = {};
  __export(chip_exports, {
    IconChip: () => IconChip,
    default: () => chip_default
  });
  var IconChip, chip_default;
  var init_chip = __esm({
    "lib/chip.ts"() {
      IconChip = `<svg id="Chip" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="27" y1="9" x2="27" y2="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="9" x2="45" y2="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="54" x2="27" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="36" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="54" x2="45" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="45" x2="18" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="36" x2="18" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="27" x2="18" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="45" x2="63" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="36" x2="63" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="27" x2="63" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="18" width="36" height="36" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="18" y="18" width="36" height="36" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chip_default = IconChip;
    }
  });

  // lib/cleaning-bucket.ts
  var cleaning_bucket_exports = {};
  __export(cleaning_bucket_exports, {
    IconCleaningBucket: () => IconCleaningBucket,
    default: () => cleaning_bucket_default
  });
  var IconCleaningBucket, cleaning_bucket_default;
  var init_cleaning_bucket = __esm({
    "lib/cleaning-bucket.ts"() {
      IconCleaningBucket = `<svg id="CleaningBucket" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.5,22.5c0-7.46,6.04-13.5,13.5-13.5s13.5,6.04,13.5,13.5v4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,47.5v-17c0-4.42,3.58-8,8-8h12.5c1.1,0,2,.9,2,2v23c0,1.1-.9,2-2,2H15.5c-1.1,0-2-.9-2-2Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,27h15.69c1.22,0,2.15,1.08,1.98,2.28l-3.93,27.5c-.14.99-.98,1.72-1.98,1.72h-23.53c-1,0-1.84-.73-1.98-1.72l-1.04-7.28" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,47.5v-17c0-4.42,3.58-8,8-8h12.5c1.1,0,2,.9,2,2v23c0,1.1-.9,2-2,2H15.5c-1.1,0-2-.9-2-2Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="40.5" x2="36" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cleaning_bucket_default = IconCleaningBucket;
    }
  });

  // lib/cleaning-spray.ts
  var cleaning_spray_exports = {};
  __export(cleaning_spray_exports, {
    IconCleaningSpray: () => IconCleaningSpray,
    default: () => cleaning_spray_default
  });
  var IconCleaningSpray, cleaning_spray_default;
  var init_cleaning_spray = __esm({
    "lib/cleaning-spray.ts"() {
      IconCleaningSpray = `<svg id="CleaningSpray" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M38.32,65.28v-18c-15,0-15,9-27,9v9h27Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M11.32,56.28c12,0,12-9,27-9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M11.32,65.28h27v-19.19c0-2.12-.84-4.16-2.34-5.66l-4.31-4.31c-1.5-1.5-2.34-3.54-2.34-5.66v-5.69h-9v5.69c0,2.12-.84,4.16-2.34,5.66l-4.31,4.31c-1.5,1.5-2.34,3.54-2.34,5.66v19.19Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M14.5,12.59h0c-1.76,1.76-1.76,4.61,0,6.36l5.82,5.82h9l4.5-4.5h9v-9h-25.14c-1.19,0-2.34.47-3.18,1.32Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="33.82 11.28 33.82 20.28 38.32 29.28" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="60.82" y1="20.28" x2="60.82" y2="20.28" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="60.82" y1="11.28" x2="60.82" y2="11.28" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="51.82" y1="15.78" x2="51.82" y2="15.78" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cleaning_spray_default = IconCleaningSpray;
    }
  });

  // lib/closet.ts
  var closet_exports = {};
  __export(closet_exports, {
    IconCloset: () => IconCloset,
    default: () => closet_default
  });
  var IconCloset, closet_default;
  var init_closet = __esm({
    "lib/closet.ts"() {
      IconCloset = `<svg id="Closet" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="9" width="45" height="49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="29" y1="27" x2="29" y2="27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="51.22" x2="36" y2="51.22" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="43" y1="27" x2="43" y2="27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="9" width="45" height="49.5" rx="2" ry="2" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="63" x2="22.5" y2="58.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="63" x2="49.5" y2="58.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="45" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="45" x2="58.5" y2="45" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      closet_default = IconCloset;
    }
  });

  // lib/coffee-beans.ts
  var coffee_beans_exports = {};
  __export(coffee_beans_exports, {
    IconCoffeeBeans: () => IconCoffeeBeans,
    default: () => coffee_beans_default
  });
  var IconCoffeeBeans, coffee_beans_default;
  var init_coffee_beans = __esm({
    "lib/coffee-beans.ts"() {
      IconCoffeeBeans = `<svg id="CoffeeBeans" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M36,27.24c0,10.41-5.04,13.46-11.25,13.46s-11.25-3.05-11.25-13.46,5.04-13.95,11.25-13.95,11.25,3.54,11.25,13.95Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M23.74,40.7c4.91-13.43-1.95-10.14,4.19-26.92" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M58.5,45.44c0,10.25-5.04,13.26-11.25,13.26s-11.25-3.01-11.25-13.26,5.04-13.74,11.25-13.74,11.25,3.49,11.25,13.74Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M46.24,58.7c4.91-13.23-1.95-9.99,4.19-26.52" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M36,27.24c0,10.41-5.04,13.46-11.25,13.46s-11.25-3.05-11.25-13.46,5.04-13.95,11.25-13.95,11.25,3.54,11.25,13.95Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M23.74,40.7c4.91-13.43-1.95-10.14,4.19-26.92" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,45.44c0,10.25-5.04,13.26-11.25,13.26s-11.25-3.01-11.25-13.26,5.04-13.74,11.25-13.74,11.25,3.49,11.25,13.74Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M46.24,58.7c4.91-13.23-1.95-9.99,4.19-26.52" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      coffee_beans_default = IconCoffeeBeans;
    }
  });

  // lib/coins.ts
  var coins_exports = {};
  __export(coins_exports, {
    IconCoins: () => IconCoins,
    default: () => coins_default
  });
  var IconCoins, coins_default;
  var init_coins = __esm({
    "lib/coins.ts"() {
      IconCoins = `<svg id="Coins" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M49.5,13.5c-13.5,0-13.5,4.5-13.5,4.5v36s0,4.5,13.5,4.5,13.5-4.5,13.5-4.5V18s0-4.5-13.5-4.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M9,31.5s0,4.5,13.5,4.5,13.5-4.5,13.5-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,22.5s0,4.5,13.5,4.5,13.5-4.5,13.5-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,40.5s0,4.5,13.5,4.5,13.5-4.5,13.5-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="9 22.5 9 31.5 9 40.5 9 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,18c-13.5,0-13.5,4.5-13.5,4.5v27s0,4.5,13.5,4.5,13.5-4.5,13.5-4.5v-27s0-4.5-13.5-4.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,27s0,4.5,13.5,4.5,13.5-4.5,13.5-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,18s0,4.5,13.5,4.5,13.5-4.5,13.5-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,45s0,4.5,13.5,4.5,13.5-4.5,13.5-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,36s0,4.5,13.5,4.5,13.5-4.5,13.5-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 22.5 36 31.5 36 40.5 36 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,13.5c-13.5,0-13.5,4.5-13.5,4.5v36s0,4.5,13.5,4.5,13.5-4.5,13.5-4.5V18s0-4.5-13.5-4.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      coins_default = IconCoins;
    }
  });

  // lib/compass2.ts
  var compass2_exports = {};
  __export(compass2_exports, {
    IconCompass2: () => IconCompass2,
    default: () => compass2_default
  });
  var IconCompass2, compass2_default;
  var init_compass2 = __esm({
    "lib/compass2.ts"() {
      IconCompass2 = `<svg id="Compass2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="13.5" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,18c-12.43,0-22.5,10.07-22.5,22.5s10.07,22.5,22.5,22.5,22.5-10.07,22.5-22.5-10.07-22.5-22.5-22.5ZM38.65,43.15l-10.61,5.3,5.3-10.61,10.61-5.3-5.3,10.61Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="40.5" r="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="43.95 32.55 33.35 37.85 28.05 48.45 38.65 43.15 43.95 32.55" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      compass2_default = IconCompass2;
    }
  });

  // lib/compass.ts
  var compass_exports = {};
  __export(compass_exports, {
    IconCompass: () => IconCompass,
    default: () => compass_default
  });
  var IconCompass, compass_default;
  var init_compass = __esm({
    "lib/compass.ts"() {
      IconCompass = `<svg id="Compass" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,9c-14.91,0-27,12.09-27,27s12.09,27,27,27,27-12.09,27-27-12.09-27-27-27ZM39.18,39.18l-12.73,6.36,6.36-12.73,12.73-6.36-6.36,12.73Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="36" r="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45.55 26.45 32.82 32.82 26.45 45.55 39.18 39.18 45.55 26.45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      compass_default = IconCompass;
    }
  });

  // lib/cube3d.ts
  var cube3d_exports = {};
  __export(cube3d_exports, {
    IconCube3d: () => IconCube3d,
    default: () => cube3d_default
  });
  var IconCube3d, cube3d_default;
  var init_cube3d = __esm({
    "lib/cube3d.ts"() {
      IconCube3d = `<svg id="Cube3d" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="13.5 23.62 36 11.25 58.5 23.62 58.5 48.38 36 60.75 13.5 48.38 13.5 23.62" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><polyline points="13.5 23.62 36 36 58.5 23.62" style="fill: red; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; opacity: .5;" /></g><g><polyline points="13.5 23.62 36 36 58.5 23.62" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="60.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="13.5 23.62 36 11.25 58.5 23.62 58.5 48.38 36 60.75 13.5 48.38 13.5 23.62" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      cube3d_default = IconCube3d;
    }
  });

  // lib/education.ts
  var education_exports = {};
  __export(education_exports, {
    IconEducation: () => IconEducation,
    default: () => education_default
  });
  var IconEducation, education_default;
  var init_education = __esm({
    "lib/education.ts"() {
      IconEducation = `<svg id="Education" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M58.5,31.5l-22.5-13.5-22.5,13.5,7.5,4.5h-.75v13.5s7.05,4.5,15.75,4.5,15.75-4.5,15.75-4.5v-13.5h-.75l7.5-4.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="31.5" x2="13.5" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="13.5 31.5 36 18 58.5 31.5 36 45 13.5 31.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M51.75,36v13.5s-7.05,4.5-15.75,4.5-15.75-4.5-15.75-4.5v-13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      education_default = IconEducation;
    }
  });

  // lib/factory-arm.ts
  var factory_arm_exports = {};
  __export(factory_arm_exports, {
    IconFactoryArm: () => IconFactoryArm,
    default: () => factory_arm_default
  });
  var IconFactoryArm, factory_arm_default;
  var init_factory_arm = __esm({
    "lib/factory-arm.ts"() {
      IconFactoryArm = `<svg id="FactoryArm" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M15.75,63c0-7.46,6.04-13.5,13.5-13.5s13.5,6.04,13.5,13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="22.5" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="49.75" cy="13.5" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="20.25 54 19 27 27 27 38.25 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M15.75,63c0-7.46,6.04-13.5,13.5-13.5s13.5,6.04,13.5,13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="63" x2="49.5" y2="63" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="22.5" cy="22.5" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="27 18 27 25 43 15 43 12 27 18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="47.25 36 42.75 31.5 47.25 27 51.75 27 56.25 31.5 51.75 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.75" cy="13.5" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.75" y1="18.5" x2="49.75" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      factory_arm_default = IconFactoryArm;
    }
  });

  // lib/factory-belt.ts
  var factory_belt_exports = {};
  __export(factory_belt_exports, {
    IconFactoryBelt: () => IconFactoryBelt,
    default: () => factory_belt_default
  });
  var IconFactoryBelt, factory_belt_default;
  var init_factory_belt = __esm({
    "lib/factory-belt.ts"() {
      IconFactoryBelt = `<svg id="FactoryBelt" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54,45H18c-4.97,0-9,4.03-9,9s4.03,9,9,9h36c4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M54,45H18c-4.97,0-9,4.03-9,9s4.03,9,9,9h36c4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="54" x2="18" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="54" x2="27" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="36" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="54" x2="45" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="54" x2="54" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="31.5" width="13.5" height="13.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="20.25" y1="31.5" x2="20.25" y2="37.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 27 13.5 22.5 18 18 18 18 22.5 22.5 22.5 27" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="9" x2="18" y2="18" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="31.5 27 31.5 22.5 36 18 36 18 40.5 22.5 40.5 27" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="18" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 27 49.5 22.5 54 18 54 18 58.5 22.5 58.5 27" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="9" x2="54" y2="18" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="9" x2="63" y2="9" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      factory_belt_default = IconFactoryBelt;
    }
  });

  // lib/factory.ts
  var factory_exports = {};
  __export(factory_exports, {
    IconFactory: () => IconFactory,
    default: () => factory_default
  });
  var IconFactory, factory_default;
  var init_factory = __esm({
    "lib/factory.ts"() {
      IconFactory = `<svg id="Factory" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="9 58.5 9 45 9 31.5 27 40.5 27 31.5 45 40.5 45 40.5 45 31.5 63 40.5 63 58.5 9 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="9 58.5 9 45 9 31.5 27 40.5 27 31.5 45 40.5 45 40.5 45 31.5 63 40.5 63 58.5 9 58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="9 49.5 9 13.5 18 13.5 18 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      factory_default = IconFactory;
    }
  });

  // lib/fingerprint.ts
  var fingerprint_exports = {};
  __export(fingerprint_exports, {
    IconFingerprint: () => IconFingerprint,
    default: () => fingerprint_default
  });
  var IconFingerprint, fingerprint_default;
  var init_fingerprint = __esm({
    "lib/fingerprint.ts"() {
      IconFingerprint = `<svg id="Fingerprint" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M43.5,19.06c-.81-.34-1.66-.61-2.53-.79s-1.79-.27-2.72-.27-1.84.07-2.72.21-1.73.35-2.53.63-1.57.63-2.29,1.05-1.39.91-2,1.48-1.16,1.2-1.65,1.9-.9,1.48-1.24,2.32-.61,1.76-.79,2.74-.27,2.04-.27,3.16c0,1.69-.21,3.3-.58,4.84s-.9,3-1.53,4.37-1.37,2.65-2.16,3.84c-.79,1.19-1.63,2.28-2.48,3.26s-1.69,1.86-2.48,2.63c-.79.76-1.53,1.42-2.16,1.94s-1.16.93-1.53,1.2-.58.41-.58.41" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M47.25,58.5s.07-.21.19-.61.3-.98.51-1.71.46-1.63.72-2.66c.26-1.03.54-2.19.83-3.45s.56-2.64.83-4.09c.26-1.45.51-2.98.72-4.56s.39-3.22.51-4.88.19-3.35.19-5.04c0-.93-.09-1.84-.27-2.72s-.45-1.73-.79-2.53" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30.9,45.98c-.53,1.45-1.09,2.82-1.65,4.09-.56,1.27-1.12,2.43-1.65,3.45s-1.02,1.92-1.44,2.66-.77,1.32-1.02,1.71-.39.61-.39.61" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M38.25,58.5s.07-.21.19-.61.3-.98.51-1.71.46-1.63.72-2.66c.26-1.03.54-2.19.83-3.45s.56-2.64.83-4.09c.26-1.45.51-2.98.72-4.56s.39-3.22.51-4.88.19-3.35.19-5.04c0-.31-.03-.61-.09-.91s-.15-.58-.26-.84-.25-.52-.41-.76-.35-.46-.55-.67-.43-.39-.67-.55-.5-.3-.76-.41-.55-.2-.84-.26-.6-.09-.91-.09-.61.03-.91.09-.58.15-.84.26-.52.25-.76.41-.46.35-.67.55-.39.43-.55.67-.3.5-.41.76-.2.55-.26.84-.09.6-.09.91c0,1.69-.14,3.38-.39,5.04" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M57.67,53.52c-.26,1.03-.51,1.92-.72,2.66s-.39,1.32-.51,1.71-.19.61-.19.61" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M19.59,18.92c.81-1.2,1.73-2.31,2.75-3.33s2.13-1.94,3.33-2.75,2.48-1.51,3.82-2.07c1.35-.57,2.76-1.01,4.22-1.31,1.46-.3,2.98-.46,4.53-.46s3.07.16,4.53.46c1.46.3,2.88.74,4.22,1.31,1.35.57,2.62,1.27,3.82,2.07s2.31,1.73,3.33,2.75c1.02,1.02,1.94,2.13,2.75,3.33s1.51,2.48,2.07,3.82c.57,1.35,1.01,2.76,1.31,4.22.3,1.46.46,2.98.46,4.53,0,1.69-.07,3.38-.19,5.04s-.3,3.3-.51,4.88" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M15.98,34.99c-.05-.38-.09-.75-.12-1.09s-.05-.67-.07-.96-.03-.54-.03-.76,0-.38-.01-.5,0-.18,0-.18c0-1.55.16-3.07.46-4.53" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      fingerprint_default = IconFingerprint;
    }
  });

  // lib/fridge.ts
  var fridge_exports = {};
  __export(fridge_exports, {
    IconFridge: () => IconFridge,
    default: () => fridge_default
  });
  var IconFridge, fridge_default;
  var init_fridge = __esm({
    "lib/fridge.ts"() {
      IconFridge = `<svg id="Fridge" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="9" width="36" height="54" rx="4" ry="4" transform="translate(72 72) rotate(-180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="31.5" y1="18" x2="27" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="40.5" x2="27" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="9" width="36" height="54" rx="4" ry="4" transform="translate(72 72) rotate(-180)" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="27" x2="18" y2="27" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      fridge_default = IconFridge;
    }
  });

  // lib/furniture-bed.ts
  var furniture_bed_exports = {};
  __export(furniture_bed_exports, {
    IconFurnitureBed: () => IconFurnitureBed,
    default: () => furniture_bed_default
  });
  var IconFurnitureBed, furniture_bed_default;
  var init_furniture_bed = __esm({
    "lib/furniture-bed.ts"() {
      IconFurnitureBed = `<svg id="FurnitureBed" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="36" width="45" height="13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="18" y="18" width="36" height="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="18" y1="58.5" x2="18" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="58.5" x2="54" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="36" width="45" height="13.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="18 36 18 18 54 18 54 36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 36 45 27 27 27 27 36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      furniture_bed_default = IconFurnitureBed;
    }
  });

  // lib/furniture-bedside-table.ts
  var furniture_bedside_table_exports = {};
  __export(furniture_bedside_table_exports, {
    IconFurnitureBedsideTable: () => IconFurnitureBedsideTable,
    default: () => furniture_bedside_table_default
  });
  var IconFurnitureBedsideTable, furniture_bedside_table_default;
  var init_furniture_bedside_table = __esm({
    "lib/furniture-bedside-table.ts"() {
      IconFurnitureBedsideTable = `<svg id="FurnitureBedsideTable" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="36" width="36" height="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="27 27 31.5 13.5 40.5 13.5 45 27 27 27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="22.5" y1="63" x2="22.5" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="63" x2="49.5" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="36" width="36" height="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="27 27 31.5 13.5 40.5 13.5 45 27 27 27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="45" x2="54" y2="45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      furniture_bedside_table_default = IconFurnitureBedsideTable;
    }
  });

  // lib/furniture-chair.ts
  var furniture_chair_exports = {};
  __export(furniture_chair_exports, {
    IconFurnitureChair: () => IconFurnitureChair,
    default: () => furniture_chair_default
  });
  var IconFurnitureChair, furniture_chair_default;
  var init_furniture_chair = __esm({
    "lib/furniture-chair.ts"() {
      IconFurnitureChair = `<svg id="FurnitureChair" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="54 31.5 54 13.5 18 13.5 18 31.5 13.5 31.5 13.5 49.5 58.5 49.5 58.5 31.5 54 31.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="13.5 49.5 58.5 49.5 58.5 31.5 49.5 31.5 49.5 40.5 22.5 40.5 22.5 31.5 13.5 31.5 13.5 49.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="58.5" x2="22.5" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="58.5" x2="49.5" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="54 31.5 54 13.5 18 13.5 18 31.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      furniture_chair_default = IconFurnitureChair;
    }
  });

  // lib/furniture-couch.ts
  var furniture_couch_exports = {};
  __export(furniture_couch_exports, {
    IconFurnitureCouch: () => IconFurnitureCouch,
    default: () => furniture_couch_default
  });
  var IconFurnitureCouch, furniture_couch_default;
  var init_furniture_couch = __esm({
    "lib/furniture-couch.ts"() {
      IconFurnitureCouch = `<svg id="FurnitureCouch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="63 49.5 9 49.5 9 31.5 13.5 31.5 13.5 22.5 58.5 22.5 58.5 31.5 63 31.5 63 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="9 49.5 63 49.5 63 31.5 54 31.5 54 40.5 18 40.5 18 31.5 9 31.5 9 49.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="58.5" x2="18" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="58.5" x2="54" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 31.5 58.5 22.5 13.5 22.5 13.5 31.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="40.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      furniture_couch_default = IconFurnitureCouch;
    }
  });

  // lib/furniture-desk.ts
  var furniture_desk_exports = {};
  __export(furniture_desk_exports, {
    IconFurnitureDesk: () => IconFurnitureDesk,
    default: () => furniture_desk_default
  });
  var IconFurnitureDesk, furniture_desk_default;
  var init_furniture_desk = __esm({
    "lib/furniture-desk.ts"() {
      IconFurnitureDesk = `<svg id="FurnitureDesk" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="18" width="45" height="9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="36" y="27" width="22.5" height="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="13.5 54 13.5 18 58.5 18 58.5 54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="27" x2="58.5" y2="27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 27 36 45 58.5 45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.25" y1="36" x2="47.25" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      furniture_desk_default = IconFurnitureDesk;
    }
  });

  // lib/furniture-dressoir.ts
  var furniture_dressoir_exports = {};
  __export(furniture_dressoir_exports, {
    IconFurnitureDressoir: () => IconFurnitureDressoir,
    default: () => furniture_dressoir_default
  });
  var IconFurnitureDressoir, furniture_dressoir_default;
  var init_furniture_dressoir = __esm({
    "lib/furniture-dressoir.ts"() {
      IconFurnitureDressoir = `<svg id="FurnitureDressoir" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="36" width="45" height="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="18" y1="63" x2="18" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="63" x2="54" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="36" width="45" height="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,36v-13.5c0-7.46,6.04-13.5,13.5-13.5s13.5,6.04,13.5,13.5v13.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      furniture_dressoir_default = IconFurnitureDressoir;
    }
  });

  // lib/graph-up-round.ts
  var graph_up_round_exports = {};
  __export(graph_up_round_exports, {
    IconGraphUpRound: () => IconGraphUpRound,
    default: () => graph_up_round_default
  });
  var IconGraphUpRound, graph_up_round_default;
  var init_graph_up_round = __esm({
    "lib/graph-up-round.ts"() {
      IconGraphUpRound = `<svg id="GraphUpRound" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="18" y1="63" x2="18" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="63" x2="27" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="63" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="63" x2="45" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="63" x2="54" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="46.51 17.78 58.5 13.5 62.78 25.49" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,45s31.5,0,45-31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      graph_up_round_default = IconGraphUpRound;
    }
  });

  // lib/graph-up.ts
  var graph_up_exports = {};
  __export(graph_up_exports, {
    IconGraphUp: () => IconGraphUp,
    default: () => graph_up_default
  });
  var IconGraphUp, graph_up_default;
  var init_graph_up = __esm({
    "lib/graph-up.ts"() {
      IconGraphUp = `<svg id="GraphUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="13.5 49.5 31.5 31.5 45 36 58.5 18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="63" x2="18" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="63" x2="27" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="63" x2="36" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="63" x2="45" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="63" x2="54" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45.83 19.25 58.5 18 59.75 30.67" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      graph_up_default = IconGraphUp;
    }
  });

  // lib/hairdryer.ts
  var hairdryer_exports = {};
  __export(hairdryer_exports, {
    IconHairdryer: () => IconHairdryer,
    default: () => hairdryer_default
  });
  var IconHairdryer, hairdryer_default;
  var init_hairdryer = __esm({
    "lib/hairdryer.ts"() {
      IconHairdryer = `<svg id="Hairdryer" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.5,63h10.46c3.46,0,5.72-3.65,4.17-6.74l-1.13-2.26" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5s-22.5,9-31.5,9c-7.46,0-13.5-6.04-13.5-13.5s6.04-13.5,13.5-13.5c9,0,31.5,9,31.5,9v9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5s-22.5,9-31.5,9c-7.46,0-13.5-6.04-13.5-13.5s6.04-13.5,13.5-13.5c9,0,31.5,9,31.5,9v9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,39.02l4.5,14.98h-9s-14.07-11.72-17.23-22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="27" cy="27" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      hairdryer_default = IconHairdryer;
    }
  });

  // lib/idea-factory.ts
  var idea_factory_exports = {};
  __export(idea_factory_exports, {
    IconIdeaFactory: () => IconIdeaFactory,
    default: () => idea_factory_default
  });
  var IconIdeaFactory, idea_factory_default;
  var init_idea_factory = __esm({
    "lib/idea-factory.ts"() {
      IconIdeaFactory = `<svg id="IdeaFactory" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M33,39c0-6.63-5.37-12-12-12s-12,5.37-12,12c0,9,7.2,12,7.2,18v3.33c0,1.47,1.19,2.67,2.67,2.67h4.27c1.47,0,2.67-1.19,2.67-2.67v-3.33c0-6,7.2-9,7.2-18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="41.14 43.31 38.28 48.28 40.64 51.53 38.28 54.78 41.14 59.75 45.14 59.33 46.78 63 52.51 63 54.15 59.33 58.14 59.75 61.01 54.78 58.65 51.53 61.01 48.28 58.14 43.31 54.15 43.73 52.51 40.06 46.78 40.06 45.14 43.73 41.14 43.31" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="15" y1="57" x2="27" y2="57" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M24,42c0,1.66-1.34,3-3,3s-3-1.34-3-3" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="21" y1="45" x2="21" y2="57" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M33,39c0-6.63-5.37-12-12-12s-12,5.37-12,12c0,9,7.2,12,7.2,18v3.33c0,1.47,1.19,2.67,2.67,2.67h4.27c1.47,0,2.67-1.19,2.67-2.67v-3.33c0-6,7.2-9,7.2-18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,31.5V13c0-2.21-1.79-4-4-4h-19c-2.21,0-4,1.79-4,4v5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 22.5 49.5 31.5 58.5 22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="41.14 43.31 38.28 48.28 40.64 51.53 38.28 54.78 41.14 59.75 45.14 59.33 46.78 63 52.51 63 54.15 59.33 58.14 59.75 61.01 54.78 58.65 51.53 61.01 48.28 58.14 43.31 54.15 43.73 52.51 40.06 46.78 40.06 45.14 43.73 41.14 43.31" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="51.53" r="1.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      idea_factory_default = IconIdeaFactory;
    }
  });

  // lib/industry3.ts
  var industry3_exports = {};
  __export(industry3_exports, {
    IconIndustry3: () => IconIndustry3,
    default: () => industry3_default
  });
  var IconIndustry3, industry3_default;
  var init_industry3 = __esm({
    "lib/industry3.ts"() {
      IconIndustry3 = `<svg id="Industry3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="9 58.5 9 49.5 9 36 27 45 27 36 45 45 45 45 45 36 63 45 63 58.5 9 58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="9 58.5 9 49.5 9 36 27 45 27 36 45 45 45 45 45 36 63 45 63 58.5 9 58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,20.64c8.79-8.79,23.03-8.79,31.82,0" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M24.36,27c5.27-5.27,13.82-5.27,19.09,0" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      industry3_default = IconIndustry3;
    }
  });

  // lib/iron.ts
  var iron_exports = {};
  __export(iron_exports, {
    IconIron: () => IconIron,
    default: () => iron_default
  });
  var IconIron, iron_default;
  var init_iron = __esm({
    "lib/iron.ts"() {
      IconIron = `<svg id="Iron" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M20.39,36c-4.33,4.33-8.22,10.01-11.13,17.49-.13.33.12.69.47.69h44.27l3.66-7.31c.56-1.11.84-2.34.84-3.58v-7.29H20.39Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.05,22.63c-4.15-.37-35.99-2.07-48.79,30.86-.13.33.12.69.47.69h44.27s3.66-7.31,3.66-7.31c.56-1.11.84-2.34.84-3.58v-20.16c0-.26-.19-.47-.45-.5Z" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="36.18" x2="58.5" y2="36.18" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="54.18" x2="58.5" y2="54.18" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="31.68" x2="49.5" y2="31.68" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="45.41" x2="45" y2="45.41" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="63" x2="27" y2="63" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="63" x2="36" y2="63" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="63" x2="45" y2="63" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      iron_default = IconIron;
    }
  });

  // lib/kitchen-cutlery.ts
  var kitchen_cutlery_exports = {};
  __export(kitchen_cutlery_exports, {
    IconKitchenCutlery: () => IconKitchenCutlery,
    default: () => kitchen_cutlery_default
  });
  var IconKitchenCutlery, kitchen_cutlery_default;
  var init_kitchen_cutlery = __esm({
    "lib/kitchen-cutlery.ts"() {
      IconKitchenCutlery = `<svg id="KitchenCutlery" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,58.5V13.5s13.5,0,9,31.5h-9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><ellipse cx="36" cy="49.5" rx="6.75" ry="9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M13.5,58.5V13.5s13.5,0,9,31.5h-9" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><ellipse cx="36" cy="49.5" rx="6.75" ry="9" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M64.12,22.5c0,7.46-4.53,18-10.12,18s-10.12-10.54-10.12-18,4.53-9,10.12-9,10.12,1.54,10.12,9Z" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="13.5" x2="36" y2="40.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="58.5" x2="54" y2="15" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      kitchen_cutlery_default = IconKitchenCutlery;
    }
  });

  // lib/kitchen-utensils.ts
  var kitchen_utensils_exports = {};
  __export(kitchen_utensils_exports, {
    IconKitchenUtensils: () => IconKitchenUtensils,
    default: () => kitchen_utensils_default
  });
  var IconKitchenUtensils, kitchen_utensils_default;
  var init_kitchen_utensils = __esm({
    "lib/kitchen-utensils.ts"() {
      IconKitchenUtensils = `<svg id="KitchenUtensils" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M6.75,25.5c0,4.97,4.03,9,9,9s9-4.03,9-9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><ellipse cx="56.25" cy="22.5" rx="6.75" ry="9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,58.5V13.5h0-2.25c-3.73,0-6.75,10.54-6.75,18s3.02,9,6.75,9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><ellipse cx="56.25" cy="22.5" rx="6.75" ry="9" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M24.62,13.5v12c0,4.97-3.97,9-8.87,9s-8.87-4.03-8.87-9v-12" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="56.25" y1="58.5" x2="56.25" y2="31.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="15.75" y1="34.5" x2="15.75" y2="58.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="15.75" y1="13.5" x2="15.75" y2="23.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,58.5V13.5h0-2.25c-3.73,0-6.75,10.54-6.75,18s3.02,9,6.75,9" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="6.88" y1="25.5" x2="24.62" y2="25.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      kitchen_utensils_default = IconKitchenUtensils;
    }
  });

  // lib/leaf2.ts
  var leaf2_exports = {};
  __export(leaf2_exports, {
    IconLeaf2: () => IconLeaf2,
    default: () => leaf2_default
  });
  var IconLeaf2, leaf2_default;
  var init_leaf2 = __esm({
    "lib/leaf2.ts"() {
      IconLeaf2 = `<svg id="Leaf2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M50.85,46.74c-9.67,9.67-29.17,5.83-29.17,5.83,0,0-3.83-19.5,5.83-29.17,9.67-9.67,29.17-5.83,29.17-5.83,0,0,3.83,19.5-5.83,29.17Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M50.85,46.74c-9.67,9.67-29.17,5.83-29.17,5.83,0,0-3.83-19.5,5.83-29.17,9.67-9.67,29.17-5.83,29.17-5.83,0,0,3.83,19.5-5.83,29.17Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="43.95" y1="30.3" x2="15.32" y2="58.93" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      leaf2_default = IconLeaf2;
    }
  });

  // lib/leaf3.ts
  var leaf3_exports = {};
  __export(leaf3_exports, {
    IconLeaf3: () => IconLeaf3,
    default: () => leaf3_default
  });
  var IconLeaf3, leaf3_default;
  var init_leaf3 = __esm({
    "lib/leaf3.ts"() {
      IconLeaf3 = `<svg id="Leaf3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M50.85,47.92c-9.73,9.6-29.17,5.83-29.17,5.83,0,0-7.78-25.38,9.82-31.25,13.5-4.5,22.5-13.5,22.5-13.5,0,0,13.5,22.5-3.15,38.92Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M50.85,47.92c-9.73,9.6-29.17,5.83-29.17,5.83,0,0-7.78-25.38,9.82-31.25,13.5-4.5,22.5-13.5,22.5-13.5,0,0,13.5,22.5-3.15,38.92Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,63S45,40.5,54,9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      leaf3_default = IconLeaf3;
    }
  });

  // lib/leaf.ts
  var leaf_exports = {};
  __export(leaf_exports, {
    IconLeaf: () => IconLeaf,
    default: () => leaf_default
  });
  var IconLeaf, leaf_default;
  var init_leaf = __esm({
    "lib/leaf.ts"() {
      IconLeaf = `<svg id="Leaf" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M52.5,33.75c0,13.67-16.5,24.75-16.5,24.75,0,0-16.5-11.08-16.5-24.75s16.5-24.75,16.5-24.75c0,0,16.5,11.08,16.5,24.75Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M52.5,33.75c0,13.67-16.5,24.75-16.5,24.75,0,0-16.5-11.08-16.5-24.75s16.5-24.75,16.5-24.75c0,0,16.5,11.08,16.5,24.75Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="67.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      leaf_default = IconLeaf;
    }
  });

  // lib/leafs.ts
  var leafs_exports = {};
  __export(leafs_exports, {
    IconLeafs: () => IconLeafs,
    default: () => leafs_default
  });
  var IconLeafs, leafs_default;
  var init_leafs = __esm({
    "lib/leafs.ts"() {
      IconLeafs = `<svg id="Leafs" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M57.47,42.45c-7.9,7.9-23.84,4.77-23.84,4.77,0,0-3.13-15.94,4.77-23.84s23.84-4.77,23.84-4.77c0,0,3.13,15.94-4.77,23.84Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M25.58,33.07c6.69,3.36,8.06,14.15,8.06,14.15,0,0-9.48,5.35-16.16,1.99-6.69-3.36-8.06-14.15-8.06-14.15,0,0,9.48-5.35,16.16-1.99Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M57.47,42.45c-7.9,7.9-23.84,4.77-23.84,4.77,0,0-3.13-15.94,4.77-23.84s23.84-4.77,23.84-4.77c0,0,3.13,15.94-4.77,23.84Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="62.24" y1="18.61" x2="33.63" y2="47.22" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M25.58,33.07c6.69,3.36,8.06,14.15,8.06,14.15,0,0-9.48,5.35-16.16,1.99-6.69-3.36-8.06-14.15-8.06-14.15,0,0,9.48-5.35,16.16-1.99Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9.41" y1="35.06" x2="33.63" y2="47.22" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="33.63" y2="47.22" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      leafs_default = IconLeafs;
    }
  });

  // lib/liquid-soap2.ts
  var liquid_soap2_exports = {};
  __export(liquid_soap2_exports, {
    IconLiquidSoap2: () => IconLiquidSoap2,
    default: () => liquid_soap2_default
  });
  var IconLiquidSoap2, liquid_soap2_default;
  var init_liquid_soap2 = __esm({
    "lib/liquid-soap2.ts"() {
      IconLiquidSoap2 = `<svg id="LiquidSoap2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="22.5" y="31.5" width="27" height="31.5" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M27,31.5c0-4.97,4.03-9,9-9s9,4.03,9,9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="13.5" x2="36" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="13.5" x2="22.5" y2="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="49.5" x2="49.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="40.5" x2="49.5" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="22.5" y="31.5" width="27" height="31.5" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M27,31.5c0-4.97,4.03-9,9-9s9,4.03,9,9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      liquid_soap2_default = IconLiquidSoap2;
    }
  });

  // lib/liquid-soap.ts
  var liquid_soap_exports = {};
  __export(liquid_soap_exports, {
    IconLiquidSoap: () => IconLiquidSoap,
    default: () => liquid_soap_default
  });
  var IconLiquidSoap, liquid_soap_default;
  var init_liquid_soap = __esm({
    "lib/liquid-soap.ts"() {
      IconLiquidSoap = `<svg id="LiquidSoap" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M15.5,63h27.5c1.1,0,2-.9,2-2v-20.5c-17.5,0-17.5,9-31.5,9v11.5c0,1.1.9,2,2,2Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="56.25" cy="20.25" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="58.5" cy="40.5" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,27.58v-2.83c0-3.73-3.02-6.75-6.75-6.75s-6.75,3.02-6.75,6.75v2.83" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.25" y1="9" x2="29.25" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="20.25" y1="9" x2="45" y2="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M21.5,27.58h15.5c4.42,0,8,3.58,8,8v26c0,1.1-.9,2-2,2H15.5c-1.1,0-2-.9-2-2v-26c0-4.42,3.58-8,8-8Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,50.08c14,0,14-9,31.5-9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="56.25" cy="20.25" r="6.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="58.5" cy="40.5" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      liquid_soap_default = IconLiquidSoap;
    }
  });

  // lib/microwave.ts
  var microwave_exports = {};
  __export(microwave_exports, {
    IconMicrowave: () => IconMicrowave,
    default: () => microwave_default
  });
  var IconMicrowave, microwave_default;
  var init_microwave = __esm({
    "lib/microwave.ts"() {
      IconMicrowave = `<svg id="Microwave" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M59,13.5H13c-2.21,0-4,1.79-4,4v32.5c0,2.21,1.79,4,4,4h46c2.21,0,4-1.79,4-4V17.5c0-2.21-1.79-4-4-4ZM45,45h-27v-22.5h27v22.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="54" y1="31.5" x2="54" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="22.5" x2="54" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="9" y="13.5" width="54" height="40.5" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="22.5" width="27" height="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M24.12,36h14.76c.74,0,1.23.78.89,1.45l-1.76,3.53c-1.23,2.47-3.75,4.02-6.51,4.02h0c-2.76,0-5.28-1.56-6.51-4.02l-1.76-3.53c-.33-.66.15-1.45.89-1.45Z" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      microwave_default = IconMicrowave;
    }
  });

  // lib/money.ts
  var money_exports = {};
  __export(money_exports, {
    IconMoney: () => IconMoney,
    default: () => money_default
  });
  var IconMoney, money_default;
  var init_money = __esm({
    "lib/money.ts"() {
      IconMoney = `<svg id="Money" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="9" y="23.47" width="54" height="31.5" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M9,33.43c4.97,0,9-4.03,9-9,0-.33-.02-.65-.05-.97" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M53.03,23.47c0,4.97,4.03,9,9,9,.33,0,.65-.02.97-.05" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M63,45c-4.97,0-9,4.03-9,9,0,.33.02.65.05.97" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M18.97,54.97c0-4.97-4.03-9-9-9-.33,0-.65.02-.97.05" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M9,33.43c4.97,0,9-4.03,9-9,0-.33-.02-.65-.05-.97" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M53.03,23.47c0,4.97,4.03,9,9,9,.33,0,.65-.02.97-.05" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,45c-4.97,0-9,4.03-9,9,0,.33.02.65.05.97" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18.97,54.97c0-4.97-4.03-9-9-9-.33,0-.65.02-.97.05" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="9" y="23.47" width="54" height="31.5" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><circle cx="36" cy="39.22" r="9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      money_default = IconMoney;
    }
  });

  // lib/moneybag.ts
  var moneybag_exports = {};
  __export(moneybag_exports, {
    IconMoneybag: () => IconMoneybag,
    default: () => moneybag_default
  });
  var IconMoneybag, moneybag_default;
  var init_moneybag = __esm({
    "lib/moneybag.ts"() {
      IconMoneybag = `<svg id="Moneybag" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M34.83,31.72h2.34c.68,0,1.33.31,1.76.84l9.09,7.25c5.04,4.02,8.1,10.07,8.23,16.52,0,.09,0,.16,0,.23h0c0,3.68-2.98,6.66-6.66,6.66h-27.17c-3.68,0-6.66-2.98-6.66-6.66h0c0-.06,0-.14,0-.23.13-6.45,3.19-12.49,8.23-16.52l9.09-7.25c.43-.53,1.07-.84,1.76-.84Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M31.5,25.22h9c1.24,0,2.25,1.23,2.25,2.75h0c0,1.52-1.01,2.75-2.25,2.75h-9c-1.24,0-2.25-1.23-2.25-2.75h0c0-1.52,1.01-2.75,2.25-2.75Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M30.88,18.47l2.25,4.5c.38.76,1.16,1.24,2.01,1.24h1.72c.85,0,1.63-.48,2.01-1.24l2.25-4.5c.75-1.5-.34-3.26-2.01-3.26h-6.22c-1.67,0-2.76,1.76-2.01,3.26Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M34.83,31.72h2.34c.68,0,1.33.31,1.76.84l9.09,7.25c5.04,4.02,8.1,10.07,8.23,16.52,0,.09,0,.16,0,.23h0c0,3.68-2.98,6.66-6.66,6.66h-27.17c-3.68,0-6.66-2.98-6.66-6.66h0c0-.06,0-.14,0-.23.13-6.45,3.19-12.49,8.23-16.52l9.09-7.25c.43-.53,1.07-.84,1.76-.84Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M31.5,25.22h9c1.24,0,2.25,1.23,2.25,2.75h0c0,1.52-1.01,2.75-2.25,2.75h-9c-1.24,0-2.25-1.23-2.25-2.75h0c0-1.52,1.01-2.75,2.25-2.75Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30.88,18.47l2.25,4.5c.38.76,1.16,1.24,2.01,1.24h1.72c.85,0,1.63-.48,2.01-1.24l2.25-4.5c.75-1.5-.34-3.26-2.01-3.26h-6.22c-1.67,0-2.76,1.76-2.01,3.26Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      moneybag_default = IconMoneybag;
    }
  });

  // lib/oven.ts
  var oven_exports = {};
  __export(oven_exports, {
    IconOven: () => IconOven,
    default: () => oven_default
  });
  var IconOven, oven_default;
  var init_oven = __esm({
    "lib/oven.ts"() {
      IconOven = `<svg id="Oven" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,9v54h45V9H13.5ZM49.5,54h-27v-22.5h27v22.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><g><line x1="22.5" y1="16.5" x2="22.5" y2="16.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="16.5" x2="31.5" y2="16.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="16.5" x2="40.5" y2="16.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="16.5" x2="49.5" y2="16.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="9" width="45" height="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="22.5" x2="58.5" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="22.5" y="31.5" width="27" height="22.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      oven_default = IconOven;
    }
  });

  // lib/plant.ts
  var plant_exports = {};
  __export(plant_exports, {
    IconPlant: () => IconPlant,
    default: () => plant_default
  });
  var IconPlant, plant_default;
  var init_plant = __esm({
    "lib/plant.ts"() {
      IconPlant = `<svg id="Plant" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="18 36 18 43.7 22.5 43.7 27 61.7 45 61.7 49.5 43.7 54 43.7 54 36 18 36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M35.24,29.43s.33-6.03-3.18-9.55-9.55-3.18-9.55-3.18c0,0-.33,6.03,3.18,9.55,3.52,3.51,9.55,3.18,9.55,3.18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M43.07,14.77c2.12-2.12,1.92-5.77,1.92-5.77,0,0-3.64-.2-5.77,1.92s-1.92,5.77-1.92,5.77c0,0,3.64.2,5.77-1.92Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polygon points="22.5 43.7 49.5 43.7 45 61.7 27 61.7 22.5 43.7" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="36" width="36" height="7.7" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M32.05,19.89c3.51,3.51,3.18,9.55,3.18,9.55,0,0-6.03.33-9.55-3.18s-3.18-9.55-3.18-9.55c0,0,6.03-.33,9.55,3.18Z" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M43.07,14.77c-2.12,2.12-5.77,1.92-5.77,1.92,0,0-.2-3.64,1.92-5.77s5.77-1.92,5.77-1.92c0,0,.2,3.64-1.92,5.77Z" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      plant_default = IconPlant;
    }
  });

  // lib/politician2.ts
  var politician2_exports = {};
  __export(politician2_exports, {
    IconPolitician2: () => IconPolitician2,
    default: () => politician2_default
  });
  var IconPolitician2, politician2_default;
  var init_politician2 = __esm({
    "lib/politician2.ts"() {
      IconPolitician2 = `<svg id="Politician2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M27,40.5v-4.5s2.25-4.5,9-4.5,9,4.5,9,4.5v4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="22.5" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="21.27 63 18 40.5 36 40.5 54 40.5 50.73 63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      politician2_default = IconPolitician2;
    }
  });

  // lib/politician.ts
  var politician_exports = {};
  __export(politician_exports, {
    IconPolitician: () => IconPolitician,
    default: () => politician_default
  });
  var IconPolitician, politician_default;
  var init_politician = __esm({
    "lib/politician.ts"() {
      IconPolitician = `<svg id="Politician" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="36" width="45" height="9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M27,36v-9s2.25-4.5,9-4.5,9,4.5,9,4.5v9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="13.5" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="36" width="45" height="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="50.73" y1="63" x2="54" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="45" x2="21.27" y2="63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 18 54 22.5 54 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 18 18 22.5 18 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      politician_default = IconPolitician;
    }
  });

  // lib/room-shade.ts
  var room_shade_exports = {};
  __export(room_shade_exports, {
    IconRoomShade: () => IconRoomShade,
    default: () => room_shade_default
  });
  var IconRoomShade, room_shade_default;
  var init_room_shade = __esm({
    "lib/room-shade.ts"() {
      IconRoomShade = `<svg id="RoomShade" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M18,13.5h36v29.32c0,2.21-1.79,4-4,4h-28c-2.21,0-4-1.79-4-4V13.5h0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="58.5" y1="13.5" x2="13.5" y2="13.5" style="fill: var(--icon-line-color, currentColor);  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,13.5h36v29.32c0,2.21-1.79,4-4,4h-28c-2.21,0-4-1.79-4-4V13.5h0Z" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="59.41" r="3.59" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="46.82" x2="36" y2="55.82" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      room_shade_default = IconRoomShade;
    }
  });

  // lib/stove.ts
  var stove_exports = {};
  __export(stove_exports, {
    IconStove: () => IconStove,
    default: () => stove_default
  });
  var IconStove, stove_default;
  var init_stove = __esm({
    "lib/stove.ts"() {
      IconStove = `<svg id="Stove" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,13.5v45h45V13.5H13.5ZM27,49.5c-2.49,0-4.5-2.01-4.5-4.5s2.01-4.5,4.5-4.5,4.5,2.01,4.5,4.5-2.01,4.5-4.5,4.5ZM28.5,34.5c-3.31,0-6-2.69-6-6s2.69-6,6-6,6,2.69,6,6-2.69,6-6,6ZM43.5,49.5c-3.31,0-6-2.69-6-6s2.69-6,6-6,6,2.69,6,6-2.69,6-6,6ZM45,31.5c-2.49,0-4.5-2.01-4.5-4.5s2.01-4.5,4.5-4.5,4.5,2.01,4.5,4.5-2.01,4.5-4.5,4.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="28.5" cy="28.5" r="6" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="45" cy="27" r="4.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="43.5" cy="43.5" r="6" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="27" cy="45" r="4.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      stove_default = IconStove;
    }
  });

  // lib/temple2.ts
  var temple2_exports = {};
  __export(temple2_exports, {
    IconTemple2: () => IconTemple2,
    default: () => temple2_default
  });
  var IconTemple2, temple2_default;
  var init_temple2 = __esm({
    "lib/temple2.ts"() {
      IconTemple2 = `<svg id="Temple2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g><line x1="27" y1="31.5" x2="27" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="31.5" x2="18" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="31.5" x2="45" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="31.5" x2="54" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><rect x="13.5" y="54" width="45" height="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="27" x2="58.5" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,27c0-9.94,8.06-18,18-18s18,8.06,18,18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      temple2_default = IconTemple2;
    }
  });

  // lib/temple.ts
  var temple_exports = {};
  __export(temple_exports, {
    IconTemple: () => IconTemple,
    default: () => temple_default
  });
  var IconTemple, temple_default;
  var init_temple = __esm({
    "lib/temple.ts"() {
      IconTemple = `<svg id="Temple" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="22.5" y1="27" x2="22.5" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="27" x2="31.5" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="27" x2="40.5" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="27" x2="49.5" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="58.5" x2="58.5" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="13.5 22.5 58.5 22.5 36 13.5 13.5 22.5" style="fill: none;  stroke-linejoin: bevel; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      temple_default = IconTemple;
    }
  });

  // lib/tree2.ts
  var tree2_exports = {};
  __export(tree2_exports, {
    IconTree2: () => IconTree2,
    default: () => tree2_default
  });
  var IconTree2, tree2_default;
  var init_tree2 = __esm({
    "lib/tree2.ts"() {
      IconTree2 = `<svg id="Tree2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M52.5,38.75c0,1.37-.11,2.72-.32,4.04-2.91,18.29-29.44,18.29-32.35,0-.21-1.32-.32-2.67-.32-4.04,0-9.28,5.26-17.57,9.85-23.03,3.46-4.12,9.85-4.12,13.31,0,4.58,5.46,9.85,13.75,9.85,23.03Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M52.5,38.75c0,1.37-.11,2.72-.32,4.04-2.91,18.29-29.44,18.29-32.35,0-.21-1.32-.32-2.67-.32-4.04,0-9.28,5.26-17.57,9.85-23.03,3.46-4.12,9.85-4.12,13.31,0,4.58,5.46,9.85,13.75,9.85,23.03Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="67.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="45" x2="45" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="40.5" x2="36" y2="49.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      tree2_default = IconTree2;
    }
  });

  // lib/tree3.ts
  var tree3_exports = {};
  __export(tree3_exports, {
    IconTree3: () => IconTree3,
    default: () => tree3_default
  });
  var IconTree3, tree3_default;
  var init_tree3 = __esm({
    "lib/tree3.ts"() {
      IconTree3 = `<svg id="Tree3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="13.5 54 58.5 54 47.25 39 54.75 39 43.5 24 51 24 36 4.5 21 24 28.5 24 17.25 39 24.75 39 13.5 54" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="13.5 54 58.5 54 47.25 39 54.75 39 43.5 24 51 24 36 4.5 21 24 28.5 24 17.25 39 24.75 39 13.5 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="67.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      tree3_default = IconTree3;
    }
  });

  // lib/tree.ts
  var tree_exports = {};
  __export(tree_exports, {
    IconTree: () => IconTree,
    default: () => tree_default
  });
  var IconTree, tree_default;
  var init_tree = __esm({
    "lib/tree.ts"() {
      IconTree = `<svg id="Tree" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M46.98,27.18c.17-.78.27-1.6.27-2.43,0-6.21-5.04-11.25-11.25-11.25s-11.25,5.04-11.25,11.25c0,.84.1,1.65.27,2.43-5.27.94-9.27,5.53-9.27,11.07,0,6.21,5.04,11.25,11.25,11.25,3.69,0,6.95-1.78,9-4.52,2.05,2.74,5.31,4.52,9,4.52,6.21,0,11.25-5.04,11.25-11.25,0-5.54-4-10.13-9.27-11.07Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M46.98,27.18c.17-.78.27-1.6.27-2.43,0-6.21-5.04-11.25-11.25-11.25s-11.25,5.04-11.25,11.25c0,.84.1,1.65.27,2.43-5.27.94-9.27,5.53-9.27,11.07,0,6.21,5.04,11.25,11.25,11.25,3.69,0,6.95-1.78,9-4.52,2.05,2.74,5.31,4.52,9,4.52,6.21,0,11.25-5.04,11.25-11.25,0-5.54-4-10.13-9.27-11.07Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="36" x2="36" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="40.5" x2="45" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="63" x2="36" y2="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      tree_default = IconTree;
    }
  });

  // lib/trees2.ts
  var trees2_exports = {};
  __export(trees2_exports, {
    IconTrees2: () => IconTrees2,
    default: () => trees2_default
  });
  var IconTrees2, trees2_default;
  var init_trees2 = __esm({
    "lib/trees2.ts"() {
      IconTrees2 = `<svg id="Trees2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M48.68,34.77c1.35-1.93,2.99-3.27,4.75-3.27,4.66,0,8.44,9.4,8.44,14.06s-3.78,8.44-8.44,8.44c-3.21,0-6.01-1.8-7.43-4.44" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M27,45.56c0,4.66-3.78,8.44-8.44,8.44s-8.44-3.78-8.44-8.44,3.78-14.06,8.44-14.06,8.44,9.4,8.44,14.06Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M26,49.55c2.47,2.73,6.03,4.45,10,4.45,7.46,0,13.5-6.04,13.5-13.5s-6.04-22.5-13.5-22.5c-5.83,0-10.8,9.2-12.69,16.77" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M48.68,34.77c1.35-1.93,2.99-3.27,4.75-3.27,4.66,0,8.44,9.4,8.44,14.06s-3.78,8.44-8.44,8.44c-3.21,0-6.01-1.8-7.43-4.44" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M27,45.56c0,4.66-3.78,8.44-8.44,8.44s-8.44-3.78-8.44-8.44,3.78-14.06,8.44-14.06,8.44,9.4,8.44,14.06Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M26,49.55c2.47,2.73,6.03,4.45,10,4.45,7.46,0,13.5-6.04,13.5-13.5s-6.04-22.5-13.5-22.5c-5.83,0-10.8,9.2-12.69,16.77" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="40.5" x2="36" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="53.44" y1="45" x2="53.44" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18.56" y1="45" x2="18.56" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="63" x2="63" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="31.5 36 36 40.5 40.5 36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      trees2_default = IconTrees2;
    }
  });

  // lib/trees.ts
  var trees_exports = {};
  __export(trees_exports, {
    IconTrees: () => IconTrees,
    default: () => trees_default
  });
  var IconTrees, trees_default;
  var init_trees = __esm({
    "lib/trees.ts"() {
      IconTrees = `<svg id="Trees" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,40.5c0,7.46-6.04,13.5-13.5,13.5s-13.5-6.04-13.5-13.5,6.04-22.5,13.5-22.5,13.5,15.04,13.5,22.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M57.94,45.56c0,4.66-3.78,8.44-8.44,8.44s-8.44-3.78-8.44-8.44,3.78-14.06,8.44-14.06,8.44,9.4,8.44,14.06Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,40.5c0,7.46-6.04,13.5-13.5,13.5s-13.5-6.04-13.5-13.5,6.04-22.5,13.5-22.5,13.5,15.04,13.5,22.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M57.94,45.56c0,4.66-3.78,8.44-8.44,8.44s-8.44-3.78-8.44-8.44,3.78-14.06,8.44-14.06,8.44,9.4,8.44,14.06Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="40.5" x2="27" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="45" x2="49.5" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="63" x2="63" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      trees_default = IconTrees;
    }
  });

  // lib/turtle.ts
  var turtle_exports = {};
  __export(turtle_exports, {
    IconTurtle: () => IconTurtle,
    default: () => turtle_default
  });
  var IconTurtle, turtle_default;
  var init_turtle = __esm({
    "lib/turtle.ts"() {
      IconTurtle = `<svg id="Turtle" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M50.06,47.4c-12.73,12.73-28.64,3.18-28.64,3.18,0,0-9.55-15.91,3.18-28.64,7.03-7.03,18.43-7.03,25.46,0,7.03,7.03,7.03,18.43,0,25.46Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><g><g><path d="M50.06,47.4c-12.73,12.73-28.64,3.18-28.64,3.18,0,0-9.55-15.91,3.18-28.64,7.03-7.03,18.43-7.03,25.46,0,7.03,7.03,7.03,18.43,0,25.46Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M50.06,21.94c1.25,1.25,2.26,2.64,3.07,4.11,2.7-1.23,5.27-2.91,6.48-4.11,2.64-2.64,2.64-6.91,0-9.55s-6.91-2.64-9.55,0c-1.2,1.2-2.89,3.78-4.11,6.48,1.48.81,2.87,1.82,4.11,3.07Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M37.75,8.8h-9c-4.97,0-9,4.03-9,9h0s9,0,9,0c4.97,0,9-4.03,9-9h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63.2,34.25v9c0,4.97-4.03,9-9,9h0v-9c0-4.97,4.03-9,9-9h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.8,32.11v6c0,4.97-4.03,9-9,9h0v-6c0-4.97,4.03-9,9-9h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M39.89,54.2h-6c-4.97,0-9,4.03-9,9h0s6,0,6,0c4.97,0,9-4.03,9-9h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><g><polygon points="39.53 25.65 45.89 32.01 43.77 42.62 33.16 44.74 26.8 38.37 28.92 27.77 39.53 25.65" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="39.53" y1="25.65" x2="41.21" y2="17.2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54.33" y1="30.32" x2="45.89" y2="32.01" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="23.43" y1="22.28" x2="28.92" y2="27.77" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="43.77" y1="42.62" x2="49.25" y2="48.1" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="33.16" y1="44.74" x2="31.21" y2="54.48" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="26.8" y1="38.37" x2="17.67" y2="40.2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></g></svg>`;
      turtle_default = IconTurtle;
    }
  });

  // lib/vote.ts
  var vote_exports = {};
  __export(vote_exports, {
    IconVote: () => IconVote,
    default: () => vote_default
  });
  var IconVote, vote_default;
  var init_vote = __esm({
    "lib/vote.ts"() {
      IconVote = `<svg id="Vote" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M31.53,31.5c.13-2.69,1.22-5.35,3.28-7.41,4.39-4.39,11.52-4.39,15.91,0,4.39,4.39,4.39,11.52,0,15.91h0l-9.55,9.55c-2.64,2.64-6.91,2.64-9.55,0s-2.64-6.91,0-9.55l11.14-11.14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="42.66" y="16.41" width="22.5" height="9" transform="translate(30.57 -31.99) rotate(45)" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="58.5" x2="63" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="31.5" x2="54" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="18 58.5 18 31.5 40.13 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      vote_default = IconVote;
    }
  });

  // lib/wallet.ts
  var wallet_exports = {};
  __export(wallet_exports, {
    IconWallet: () => IconWallet,
    default: () => wallet_default
  });
  var IconWallet, wallet_default;
  var init_wallet = __esm({
    "lib/wallet.ts"() {
      IconWallet = `<svg id="Wallet" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M49.5,39.22h9v-5c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v23.5c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4v-9.5h-9c-2.49,0-4.5-2.01-4.5-4.5s2.01-4.5,4.5-4.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,39.22h-9c-2.49,0-4.5,2.01-4.5,4.5h0c0,2.49,2.01,4.5,4.5,4.5h9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="21.24" width="13.96" height="9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="31.96" y="15.22" width="19.79" height="15.02" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="30.22" width="45" height="31.5" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      wallet_default = IconWallet;
    }
  });

  // lib/washing-machine.ts
  var washing_machine_exports = {};
  __export(washing_machine_exports, {
    IconWashingMachine: () => IconWashingMachine,
    default: () => washing_machine_default
  });
  var IconWashingMachine, washing_machine_default;
  var init_washing_machine = __esm({
    "lib/washing-machine.ts"() {
      IconWashingMachine = `<svg id="WashingMachine" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M60.81,9.42c-.04-.25-.25-.42-.49-.42H11.68c-.25,0-.46.17-.49.42-.36,2.48-2.19,15.41-2.19,24.33s1.83,21.85,2.19,24.33c.04.25.25.42.49.42h48.64c.25,0,.46-.17.49-.42.36-2.48,2.19-15.41,2.19-24.33s-1.83-21.85-2.19-24.33ZM49.5,36c0,7.46-6.04,13.5-13.5,13.5-5.88,0-10.87-3.77-12.72-9.02-.26,0-.51.02-.78.02l.7-.23c-.45-1.34-.7-2.77-.7-4.27,0-7.46,6.04-13.5,13.5-13.5,5.88,0,10.87,3.77,12.72,9.01.26,0,.51-.01.78-.01l-.7.23c.45,1.34.7,2.77.7,4.27Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M60.32,58.5c.25,0,.46-.17.49-.42.36-2.48,2.19-15.41,2.19-24.33s-1.83-21.85-2.19-24.33c-.04-.25-.25-.42-.49-.42H11.68c-.25,0-.46.17-.49.42-.36,2.48-2.19,15.41-2.19,24.33s1.83,21.85,2.19,24.33c.04.25.25.42.49.42h48.64Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,40.5c12,0,12-9,27-9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="18" x2="22.5" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      washing_machine_default = IconWashingMachine;
    }
  });

  // lib/watercooker.ts
  var watercooker_exports = {};
  __export(watercooker_exports, {
    IconWatercooker: () => IconWatercooker,
    default: () => watercooker_default
  });
  var IconWatercooker, watercooker_default;
  var init_watercooker = __esm({
    "lib/watercooker.ts"() {
      IconWatercooker = `<svg id="Watercooker" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M19.61,40.49l-1.32,12.96c-.03.29.2.55.5.55h34.89c.3,0,.53-.26.5-.55l-2.23-21.95c-17.93.08-18.25,8.75-32.34,8.99Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M18.81,40.5c14.73,0,14.73-9,33.14-9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18.55,54h34.89c.3,0,.53-.26.5-.55l-3.78-37.17c-.37-4.12-3.83-7.28-7.97-7.28h-12.39c-4.14,0-7.59,3.16-7.97,7.28l-3.78,37.17c-.03.29.2.55.5.55Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,40.5l4.18-20.89c.19-.93,1.01-1.61,1.96-1.61h45.48c1.28,0,2.23,1.19,1.95,2.44-.92,4.11-3.65,11.98-10.94,11.98" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="63" x2="54" y2="63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      watercooker_default = IconWatercooker;
    }
  });

  // lib/accessibility-person-circled.ts
  var accessibility_person_circled_exports = {};
  __export(accessibility_person_circled_exports, {
    IconAccessibilityPersonCircled: () => IconAccessibilityPersonCircled,
    default: () => accessibility_person_circled_default
  });
  var IconAccessibilityPersonCircled, accessibility_person_circled_default;
  var init_accessibility_person_circled = __esm({
    "lib/accessibility-person-circled.ts"() {
      IconAccessibilityPersonCircled = `<svg id="AccessibilityPersonCircled" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72.05"><circle cx="36" cy="36.05" r="27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><g><path d="M23.55,30.72l6.61,4.4v3.27c0,1.7-.39,3.37-1.15,4.88l-4.01,8.01c-.41.82-.25,1.81.4,2.46l.1.1c.92.92,2.43.81,3.21-.23l7.29-9.73,7.29,9.73c.78,1.04,2.29,1.14,3.21.23l.1-.1c.65-.65.81-1.64.4-2.46l-4.01-8.01c-.76-1.52-1.15-3.19-1.15-4.88v-3.27l6.61-4.4c1.12-.75,1.28-2.33.32-3.28-.65-.65-1.64-.81-2.46-.4l-7.44,3.72c-1.81.91-3.94.91-5.75,0l-7.44-3.72c-.82-.41-1.81-.25-2.46.4-.95.95-.79,2.53.32,3.28Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="36" cy="23.43" r="5.85" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><circle cx="36" cy="36.05" r="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      accessibility_person_circled_default = IconAccessibilityPersonCircled;
    }
  });

  // lib/accessibility-person.ts
  var accessibility_person_exports = {};
  __export(accessibility_person_exports, {
    IconAccessibilityPerson: () => IconAccessibilityPerson,
    default: () => accessibility_person_default
  });
  var IconAccessibilityPerson, accessibility_person_default;
  var init_accessibility_person = __esm({
    "lib/accessibility-person.ts"() {
      IconAccessibilityPerson = `<svg id="AccessibilityPerson" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72.05"><path d="M17.77,28.23l9.67,6.45v4.78c0,2.48-.58,4.93-1.69,7.15l-5.87,11.73c-.6,1.2-.36,2.65.58,3.6l.15.15c1.34,1.34,3.56,1.18,4.7-.33l10.68-14.24,10.68,14.24c1.14,1.52,3.36,1.68,4.7.33l.15-.15c.95-.95,1.18-2.4.58-3.6l-5.87-11.73c-1.11-2.22-1.69-4.67-1.69-7.15v-4.78l9.67-6.45c1.64-1.09,1.87-3.41.48-4.8-.95-.95-2.4-1.18-3.6-.58l-10.9,5.45c-2.65,1.32-5.77,1.32-8.42,0l-10.9-5.45c-1.2-.6-2.65-.37-3.6.58-1.39,1.39-1.16,3.71.48,4.8Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><circle cx="36" cy="17.56" r="8.56" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      accessibility_person_default = IconAccessibilityPerson;
    }
  });

  // lib/add-fat.ts
  var add_fat_exports = {};
  __export(add_fat_exports, {
    IconAddFat: () => IconAddFat,
    default: () => add_fat_default
  });
  var IconAddFat, add_fat_default;
  var init_add_fat = __esm({
    "lib/add-fat.ts"() {
      IconAddFat = `<svg id="AddFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="13.5" x2="36" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/><line x1="13.5" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      add_fat_default = IconAddFat;
    }
  });

  // lib/add-l.ts
  var add_l_exports = {};
  __export(add_l_exports, {
    IconAddL: () => IconAddL,
    default: () => add_l_default
  });
  var IconAddL, add_l_default;
  var init_add_l = __esm({
    "lib/add-l.ts"() {
      IconAddL = `<svg id="AddL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="13.5" x2="36" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      add_l_default = IconAddL;
    }
  });

  // lib/add-lines.ts
  var add_lines_exports = {};
  __export(add_lines_exports, {
    IconAddLines: () => IconAddLines,
    default: () => add_lines_default
  });
  var IconAddLines, add_lines_default;
  var init_add_lines = __esm({
    "lib/add-lines.ts"() {
      IconAddLines = `<svg id="AddLines" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="54" x2="40.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="30" x2="13.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="42" x2="40.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="49.5" x2="63" y2="49.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="40.5" x2="54" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      add_lines_default = IconAddLines;
    }
  });

  // lib/add-m.ts
  var add_m_exports = {};
  __export(add_m_exports, {
    IconAddM: () => IconAddM,
    default: () => add_m_default
  });
  var IconAddM, add_m_default;
  var init_add_m = __esm({
    "lib/add-m.ts"() {
      IconAddM = `<svg id="AddM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="18" x2="36" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="36" x2="54" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      add_m_default = IconAddM;
    }
  });

  // lib/add-s.ts
  var add_s_exports = {};
  __export(add_s_exports, {
    IconAddS: () => IconAddS,
    default: () => add_s_default
  });
  var IconAddS, add_s_default;
  var init_add_s = __esm({
    "lib/add-s.ts"() {
      IconAddS = `<svg id="AddS" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="22.5" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="36" x2="49.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      add_s_default = IconAddS;
    }
  });

  // lib/at-sign.ts
  var at_sign_exports = {};
  __export(at_sign_exports, {
    IconAtSign: () => IconAtSign,
    default: () => at_sign_default
  });
  var IconAtSign, at_sign_default;
  var init_at_sign = __esm({
    "lib/at-sign.ts"() {
      IconAtSign = `<svg id="AtSign" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45,36c0,3.73,3.02,6.75,6.75,6.75s6.75-3.02,6.75-6.75c0-12.43-10.07-22.5-22.5-22.5s-22.5,10.07-22.5,22.5,10.07,22.5,22.5,22.5h9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      at_sign_default = IconAtSign;
    }
  });

  // lib/block-partials.ts
  var block_partials_exports = {};
  __export(block_partials_exports, {
    IconBlockPartials: () => IconBlockPartials,
    default: () => block_partials_default
  });
  var IconBlockPartials, block_partials_default;
  var init_block_partials = __esm({
    "lib/block-partials.ts"() {
      IconBlockPartials = `<svg id="BlockPartials" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.11,13.5c.25.7.39,1.46.39,2.25,0,3.73-3.02,6.75-6.75,6.75-.79,0-1.55-.14-2.25-.39v36.39h36.39c-.25-.7-.39-1.46-.39-2.25,0-3.73,3.02-6.75,6.75-6.75.79,0,1.55.14,2.25.39V13.5H22.11Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M49.5,58.5H17.5c-2.21,0-4-1.79-4-4V22.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,13.5h32c2.21,0,4,1.79,4,4v32" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="15.75" cy="15.75" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="56.25" cy="56.25" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      block_partials_default = IconBlockPartials;
    }
  });

  // lib/board-add2.ts
  var board_add2_exports = {};
  __export(board_add2_exports, {
    IconBoardAdd2: () => IconBoardAdd2,
    default: () => board_add2_default
  });
  var IconBoardAdd2, board_add2_default;
  var init_board_add2 = __esm({
    "lib/board-add2.ts"() {
      IconBoardAdd2 = `<svg id="BoardAdd2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h21" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h21" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="18" x2="63" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="9" x2="54" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_add2_default = IconBoardAdd2;
    }
  });

  // lib/board-multi2-horizontal.ts
  var board_multi2_horizontal_exports = {};
  __export(board_multi2_horizontal_exports, {
    IconBoardMulti2Horizontal: () => IconBoardMulti2Horizontal,
    default: () => board_multi2_horizontal_default
  });
  var IconBoardMulti2Horizontal, board_multi2_horizontal_default;
  var init_board_multi2_horizontal = __esm({
    "lib/board-multi2-horizontal.ts"() {
      IconBoardMulti2Horizontal = `<svg id="BoardMulti2Horizontal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="40.5" width="45" height="18" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="18" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="18" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="40.5" width="45" height="18" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_multi2_horizontal_default = IconBoardMulti2Horizontal;
    }
  });

  // lib/board-multi2-vertical.ts
  var board_multi2_vertical_exports = {};
  __export(board_multi2_vertical_exports, {
    IconBoardMulti2Vertical: () => IconBoardMulti2Vertical,
    default: () => board_multi2_vertical_default
  });
  var IconBoardMulti2Vertical, board_multi2_vertical_default;
  var init_board_multi2_vertical = __esm({
    "lib/board-multi2-vertical.ts"() {
      IconBoardMulti2Vertical = `<svg id="BoardMulti2Vertical" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="27" y="27" width="45" height="18" rx="2" ry="2" transform="translate(13.5 85.5) rotate(-90)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect y="27" width="45" height="18" rx="2" ry="2" transform="translate(-13.5 58.5) rotate(-90)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect y="27" width="45" height="18" rx="2" ry="2" transform="translate(-13.5 58.5) rotate(-90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="27" y="27" width="45" height="18" rx="2" ry="2" transform="translate(13.5 85.5) rotate(-90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_multi2_vertical_default = IconBoardMulti2Vertical;
    }
  });

  // lib/board-multi-dashboard.ts
  var board_multi_dashboard_exports = {};
  __export(board_multi_dashboard_exports, {
    IconBoardMultiDashboard: () => IconBoardMultiDashboard,
    default: () => board_multi_dashboard_default
  });
  var IconBoardMultiDashboard, board_multi_dashboard_default;
  var init_board_multi_dashboard = __esm({
    "lib/board-multi-dashboard.ts"() {
      IconBoardMultiDashboard = `<svg id="BoardMultiDashboard" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="40.5" y="47" width="18" height="11.5" rx="2" ry="2" transform="translate(99 105.5) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="34" width="18" height="24.5" rx="2" ry="2" transform="translate(45 92.5) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="18" height="11.5" rx="2" ry="2" transform="translate(45 38.5) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="13.5" width="18" height="24.5" rx="2" ry="2" transform="translate(99 51.5) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="47" width="18" height="11.5" rx="2" ry="2" transform="translate(99 105.5) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="34" width="18" height="24.5" rx="2" ry="2" transform="translate(45 92.5) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="40.5" y="13.5" width="18" height="24.5" rx="2" ry="2" transform="translate(99 51.5) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="18" height="11.5" rx="2" ry="2" transform="translate(45 38.5) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_multi_dashboard_default = IconBoardMultiDashboard;
    }
  });

  // lib/board-multi-t-down.ts
  var board_multi_t_down_exports = {};
  __export(board_multi_t_down_exports, {
    IconBoardMultiTDown: () => IconBoardMultiTDown,
    default: () => board_multi_t_down_default
  });
  var IconBoardMultiTDown, board_multi_t_down_default;
  var init_board_multi_t_down = __esm({
    "lib/board-multi-t-down.ts"() {
      IconBoardMultiTDown = `<svg id="BoardMultiTDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="40.5" width="45" height="18" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="18" height="18" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="13.5" width="18" height="18" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="18" height="18" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="40.5" y="13.5" width="18" height="18" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="40.5" width="45" height="18" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_multi_t_down_default = IconBoardMultiTDown;
    }
  });

  // lib/board-multi-t-left.ts
  var board_multi_t_left_exports = {};
  __export(board_multi_t_left_exports, {
    IconBoardMultiTLeft: () => IconBoardMultiTLeft,
    default: () => board_multi_t_left_default
  });
  var IconBoardMultiTLeft, board_multi_t_left_default;
  var init_board_multi_t_left = __esm({
    "lib/board-multi-t-left.ts"() {
      IconBoardMultiTLeft = `<svg id="BoardMultiTLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="27" y="27" width="45" height="18" rx="2" ry="2" transform="translate(13.5 85.5) rotate(-90)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="18" height="18" rx="2" ry="2" transform="translate(0 45) rotate(-90)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(-27 72) rotate(-90)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(-27 72) rotate(-90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="18" height="18" rx="2" ry="2" transform="translate(0 45) rotate(-90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="27" y="27" width="45" height="18" rx="2" ry="2" transform="translate(13.5 85.5) rotate(-90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_multi_t_left_default = IconBoardMultiTLeft;
    }
  });

  // lib/board-multi-t-right.ts
  var board_multi_t_right_exports = {};
  __export(board_multi_t_right_exports, {
    IconBoardMultiTRight: () => IconBoardMultiTRight,
    default: () => board_multi_t_right_default
  });
  var IconBoardMultiTRight, board_multi_t_right_default;
  var init_board_multi_t_right = __esm({
    "lib/board-multi-t-right.ts"() {
      IconBoardMultiTRight = `<svg id="BoardMultiTRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="0" y="27" width="45" height="18" rx="2" ry="2" transform="translate(58.5 13.5) rotate(90)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="13.5" width="18" height="18" rx="2" ry="2" transform="translate(72 -27) rotate(90)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(99 0) rotate(90)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="13.5" width="18" height="18" rx="2" ry="2" transform="translate(72 -27) rotate(90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="40.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(99 0) rotate(90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="0" y="27" width="45" height="18" rx="2" ry="2" transform="translate(58.5 13.5) rotate(90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_multi_t_right_default = IconBoardMultiTRight;
    }
  });

  // lib/board-multi-t-up.ts
  var board_multi_t_up_exports = {};
  __export(board_multi_t_up_exports, {
    IconBoardMultiTUp: () => IconBoardMultiTUp,
    default: () => board_multi_t_up_default
  });
  var IconBoardMultiTUp, board_multi_t_up_default;
  var init_board_multi_t_up = __esm({
    "lib/board-multi-t-up.ts"() {
      IconBoardMultiTUp = `<svg id="BoardMultiTUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="18" rx="2" ry="2" transform="translate(72 45) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(99 99) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(45 99) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(99 99) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(45 99) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="18" rx="2" ry="2" transform="translate(72 45) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_multi_t_up_default = IconBoardMultiTUp;
    }
  });

  // lib/board-multi.ts
  var board_multi_exports = {};
  __export(board_multi_exports, {
    IconBoardMulti: () => IconBoardMulti,
    default: () => board_multi_default
  });
  var IconBoardMulti, board_multi_default;
  var init_board_multi = __esm({
    "lib/board-multi.ts"() {
      IconBoardMulti = `<svg id="BoardMulti" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="40.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(99 99) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(45 99) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="18" height="18" rx="2" ry="2" transform="translate(45 45) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="13.5" width="18" height="18" rx="2" ry="2" transform="translate(99 45) rotate(180)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(99 99) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="40.5" width="18" height="18" rx="2" ry="2" transform="translate(45 99) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="40.5" y="13.5" width="18" height="18" rx="2" ry="2" transform="translate(99 45) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="18" height="18" rx="2" ry="2" transform="translate(45 45) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_multi_default = IconBoardMulti;
    }
  });

  // lib/board-multiply2.ts
  var board_multiply2_exports = {};
  __export(board_multiply2_exports, {
    IconBoardMultiply2: () => IconBoardMultiply2,
    default: () => board_multiply2_default
  });
  var IconBoardMultiply2, board_multiply2_default;
  var init_board_multiply2 = __esm({
    "lib/board-multiply2.ts"() {
      IconBoardMultiply2 = `<svg id="BoardMultiply2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h21" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h21" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.64" y1="11.64" x2="60.36" y2="24.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="60.36" y1="11.64" x2="47.64" y2="24.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_multiply2_default = IconBoardMultiply2;
    }
  });

  // lib/board-split13-horizontal.ts
  var board_split13_horizontal_exports = {};
  __export(board_split13_horizontal_exports, {
    IconBoardSplit13Horizontal: () => IconBoardSplit13Horizontal,
    default: () => board_split13_horizontal_default
  });
  var IconBoardSplit13Horizontal, board_split13_horizontal_default;
  var init_board_split13_horizontal = __esm({
    "lib/board-split13-horizontal.ts"() {
      IconBoardSplit13Horizontal = `<svg id="BoardSplit13Horizontal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="27" x2="58.5" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" transform="translate(72) rotate(90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split13_horizontal_default = IconBoardSplit13Horizontal;
    }
  });

  // lib/board-split13-vertical.ts
  var board_split13_vertical_exports = {};
  __export(board_split13_vertical_exports, {
    IconBoardSplit13Vertical: () => IconBoardSplit13Vertical,
    default: () => board_split13_vertical_default
  });
  var IconBoardSplit13Vertical, board_split13_vertical_default;
  var init_board_split13_vertical = __esm({
    "lib/board-split13-vertical.ts"() {
      IconBoardSplit13Vertical = `<svg id="BoardSplit13Vertical" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="27" y1="58.5" x2="27" y2="13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split13_vertical_default = IconBoardSplit13Vertical;
    }
  });

  // lib/board-split2-horizontal.ts
  var board_split2_horizontal_exports = {};
  __export(board_split2_horizontal_exports, {
    IconBoardSplit2Horizontal: () => IconBoardSplit2Horizontal,
    default: () => board_split2_horizontal_default
  });
  var IconBoardSplit2Horizontal, board_split2_horizontal_default;
  var init_board_split2_horizontal = __esm({
    "lib/board-split2-horizontal.ts"() {
      IconBoardSplit2Horizontal = `<svg id="BoardSplit2Horizontal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="36" x2="58.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split2_horizontal_default = IconBoardSplit2Horizontal;
    }
  });

  // lib/board-split2-vertical.ts
  var board_split2_vertical_exports = {};
  __export(board_split2_vertical_exports, {
    IconBoardSplit2Vertical: () => IconBoardSplit2Vertical,
    default: () => board_split2_vertical_default
  });
  var IconBoardSplit2Vertical, board_split2_vertical_default;
  var init_board_split2_vertical = __esm({
    "lib/board-split2-vertical.ts"() {
      IconBoardSplit2Vertical = `<svg id="BoardSplit2Vertical" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="58.5" x2="36" y2="13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split2_vertical_default = IconBoardSplit2Vertical;
    }
  });

  // lib/board-split31-horizontal.ts
  var board_split31_horizontal_exports = {};
  __export(board_split31_horizontal_exports, {
    IconBoardSplit31Horizontal: () => IconBoardSplit31Horizontal,
    default: () => board_split31_horizontal_default
  });
  var IconBoardSplit31Horizontal, board_split31_horizontal_default;
  var init_board_split31_horizontal = __esm({
    "lib/board-split31-horizontal.ts"() {
      IconBoardSplit31Horizontal = `<svg id="BoardSplit31Horizontal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="58.5" y1="45" x2="13.5" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" transform="translate(0 72) rotate(-90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split31_horizontal_default = IconBoardSplit31Horizontal;
    }
  });

  // lib/board-split31-vertical.ts
  var board_split31_vertical_exports = {};
  __export(board_split31_vertical_exports, {
    IconBoardSplit31Vertical: () => IconBoardSplit31Vertical,
    default: () => board_split31_vertical_default
  });
  var IconBoardSplit31Vertical, board_split31_vertical_default;
  var init_board_split31_vertical = __esm({
    "lib/board-split31-vertical.ts"() {
      IconBoardSplit31Vertical = `<svg id="BoardSplit31Vertical" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="45" y1="13.5" x2="45" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" transform="translate(72 72) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split31_vertical_default = IconBoardSplit31Vertical;
    }
  });

  // lib/board-split3-horizontal.ts
  var board_split3_horizontal_exports = {};
  __export(board_split3_horizontal_exports, {
    IconBoardSplit3Horizontal: () => IconBoardSplit3Horizontal,
    default: () => board_split3_horizontal_default
  });
  var IconBoardSplit3Horizontal, board_split3_horizontal_default;
  var init_board_split3_horizontal = __esm({
    "lib/board-split3-horizontal.ts"() {
      IconBoardSplit3Horizontal = `<svg id="BoardSplit3Horizontal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="58.5" y1="28.5" x2="13.5" y2="28.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="43.5" x2="58.5" y2="43.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split3_horizontal_default = IconBoardSplit3Horizontal;
    }
  });

  // lib/board-split3-vertical.ts
  var board_split3_vertical_exports = {};
  __export(board_split3_vertical_exports, {
    IconBoardSplit3Vertical: () => IconBoardSplit3Vertical,
    default: () => board_split3_vertical_default
  });
  var IconBoardSplit3Vertical, board_split3_vertical_default;
  var init_board_split3_vertical = __esm({
    "lib/board-split3-vertical.ts"() {
      IconBoardSplit3Vertical = `<svg id="BoardSplit3Vertical" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="28.5" y1="13.5" x2="28.5" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="43.5" y1="58.5" x2="43.5" y2="13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split3_vertical_default = IconBoardSplit3Vertical;
    }
  });

  // lib/board-split4-horizontal.ts
  var board_split4_horizontal_exports = {};
  __export(board_split4_horizontal_exports, {
    IconBoardSplit4Horizontal: () => IconBoardSplit4Horizontal,
    default: () => board_split4_horizontal_default
  });
  var IconBoardSplit4Horizontal, board_split4_horizontal_default;
  var init_board_split4_horizontal = __esm({
    "lib/board-split4-horizontal.ts"() {
      IconBoardSplit4Horizontal = `<svg id="BoardSplit4Horizontal" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="58.5" y1="24.75" x2="13.5" y2="24.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="36" x2="13.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="47.25" x2="58.5" y2="47.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split4_horizontal_default = IconBoardSplit4Horizontal;
    }
  });

  // lib/board-split4-vertical.ts
  var board_split4_vertical_exports = {};
  __export(board_split4_vertical_exports, {
    IconBoardSplit4Vertical: () => IconBoardSplit4Vertical,
    default: () => board_split4_vertical_default
  });
  var IconBoardSplit4Vertical, board_split4_vertical_default;
  var init_board_split4_vertical = __esm({
    "lib/board-split4-vertical.ts"() {
      IconBoardSplit4Vertical = `<svg id="BoardSplit4Vertical" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="24.75" y1="13.5" x2="24.75" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="13.5" x2="36" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.25" y1="58.5" x2="47.25" y2="13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" transform="translate(0 72) rotate(-90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split4_vertical_default = IconBoardSplit4Vertical;
    }
  });

  // lib/board-split-t-down.ts
  var board_split_t_down_exports = {};
  __export(board_split_t_down_exports, {
    IconBoardSplitTDown: () => IconBoardSplitTDown,
    default: () => board_split_t_down_default
  });
  var IconBoardSplitTDown, board_split_t_down_default;
  var init_board_split_t_down = __esm({
    "lib/board-split-t-down.ts"() {
      IconBoardSplitTDown = `<svg id="BoardSplitTDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="13.5" x2="36" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="36" x2="58.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split_t_down_default = IconBoardSplitTDown;
    }
  });

  // lib/board-split-t-left.ts
  var board_split_t_left_exports = {};
  __export(board_split_t_left_exports, {
    IconBoardSplitTLeft: () => IconBoardSplitTLeft,
    default: () => board_split_t_left_default
  });
  var IconBoardSplitTLeft, board_split_t_left_default;
  var init_board_split_t_left = __esm({
    "lib/board-split-t-left.ts"() {
      IconBoardSplitTLeft = `<svg id="BoardSplitTLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="36" x2="36" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="36" y2="13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" transform="translate(0 72) rotate(-90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split_t_left_default = IconBoardSplitTLeft;
    }
  });

  // lib/board-split-t-right.ts
  var board_split_t_right_exports = {};
  __export(board_split_t_right_exports, {
    IconBoardSplitTRight: () => IconBoardSplitTRight,
    default: () => board_split_t_right_default
  });
  var IconBoardSplitTRight, board_split_t_right_default;
  var init_board_split_t_right = __esm({
    "lib/board-split-t-right.ts"() {
      IconBoardSplitTRight = `<svg id="BoardSplitTRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="58.5" y1="36" x2="36" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="13.5" x2="36" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" transform="translate(72 0) rotate(90)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split_t_right_default = IconBoardSplitTRight;
    }
  });

  // lib/board-split-t-up.ts
  var board_split_t_up_exports = {};
  __export(board_split_t_up_exports, {
    IconBoardSplitTUp: () => IconBoardSplitTUp,
    default: () => board_split_t_up_default
  });
  var IconBoardSplitTUp, board_split_t_up_default;
  var init_board_split_t_up = __esm({
    "lib/board-split-t-up.ts"() {
      IconBoardSplitTUp = `<svg id="BoardSplitTUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="58.5" x2="36" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="36" x2="13.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" transform="translate(72 72) rotate(-180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_split_t_up_default = IconBoardSplitTUp;
    }
  });

  // lib/board-subtract2.ts
  var board_subtract2_exports = {};
  __export(board_subtract2_exports, {
    IconBoardSubtract2: () => IconBoardSubtract2,
    default: () => board_subtract2_default
  });
  var IconBoardSubtract2, board_subtract2_default;
  var init_board_subtract2 = __esm({
    "lib/board-subtract2.ts"() {
      IconBoardSubtract2 = `<svg id="BoardSubtract2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h21" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h21" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="22.5" x2="63" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_subtract2_default = IconBoardSubtract2;
    }
  });

  // lib/board.ts
  var board_exports = {};
  __export(board_exports, {
    IconBoard: () => IconBoard,
    default: () => board_default
  });
  var IconBoard, board_default;
  var init_board = __esm({
    "lib/board.ts"() {
      IconBoard = `<svg id="Board" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      board_default = IconBoard;
    }
  });

  // lib/box-in.ts
  var box_in_exports = {};
  __export(box_in_exports, {
    IconBoxIn: () => IconBoxIn,
    default: () => box_in_default
  });
  var IconBoxIn, box_in_default;
  var init_box_in = __esm({
    "lib/box-in.ts"() {
      IconBoxIn = `<svg id="BoxIn" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M34.07,12.31l-18.5,10.18c-1.28.7-2.07,2.05-2.07,3.5v20.02c0,1.46.79,2.8,2.07,3.5l18.5,10.18c1.2.66,2.66.66,3.86,0l18.5-10.18c1.28-.7,2.07-2.05,2.07-3.5v-20.02c0-1.46-.79-2.8-2.07-3.5l-18.5-10.18c-1.2-.66-2.66-.66-3.86,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><g><polyline points="14.07 23.94 36 36 57.93 23.94" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="60.18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M24.75,54.56l9.32,5.13c1.2.66,2.66.66,3.86,0l9.32-5.13,9.18-5.05c1.28-.7,2.07-2.05,2.07-3.5v-20.02c0-1.46-.79-2.8-2.07-3.5l-9.18-5.05-9.32-5.13c-1.2-.66-2.66-.66-3.86,0l-9.32,5.13-9.18,5.05c-1.28.7-2.07,2.05-2.07,3.5v5.51" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="4.5" y1="45" x2="27" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="18 36 27 45 18 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      box_in_default = IconBoxIn;
    }
  });

  // lib/box-out.ts
  var box_out_exports = {};
  __export(box_out_exports, {
    IconBoxOut: () => IconBoxOut,
    default: () => box_out_default
  });
  var IconBoxOut, box_out_default;
  var init_box_out = __esm({
    "lib/box-out.ts"() {
      IconBoxOut = `<svg id="BoxOut" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M34.07,12.31l-18.5,10.18c-1.28.7-2.07,2.05-2.07,3.5v20.02c0,1.46.79,2.8,2.07,3.5l18.5,10.18c1.2.66,2.66.66,3.86,0l18.5-10.18c1.28-.7,2.07-2.05,2.07-3.5v-20.02c0-1.46-.79-2.8-2.07-3.5l-18.5-10.18c-1.2-.66-2.66-.66-3.86,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><g><path d="M58.5,31.5v-5.51c0-1.46-.79-2.8-2.07-3.5l-9.18-5.05-9.32-5.13c-1.2-.66-2.66-.66-3.86,0l-9.32,5.13-9.18,5.05c-1.28.7-2.07,2.05-2.07,3.5v20.02c0,1.46.79,2.8,2.07,3.5l9.18,5.05,9.32,5.13c1.2.66,2.66.66,3.86,0l9.32-5.13" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="14.07 23.94 36 36 57.93 23.94" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="60.18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="45" y1="45" x2="67.5" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="58.5 36 67.5 45 58.5 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      box_out_default = IconBoxOut;
    }
  });

  // lib/box.ts
  var box_exports = {};
  __export(box_exports, {
    IconBox: () => IconBox,
    default: () => box_default
  });
  var IconBox, box_default;
  var init_box = __esm({
    "lib/box.ts"() {
      IconBox = `<svg id="Box" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M34.07,12.31l-18.5,10.18c-1.28.7-2.07,2.05-2.07,3.5v20.02c0,1.46.79,2.8,2.07,3.5l18.5,10.18c1.2.66,2.66.66,3.86,0l18.5-10.18c1.28-.7,2.07-2.05,2.07-3.5v-20.02c0-1.46-.79-2.8-2.07-3.5l-18.5-10.18c-1.2-.66-2.66-.66-3.86,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="14.07" y1="23.94" x2="36" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M34.07,12.31l-18.5,10.18c-1.28.7-2.07,2.05-2.07,3.5v20.02c0,1.46.79,2.8,2.07,3.5l18.5,10.18c1.2.66,2.66.66,3.86,0l18.5-10.18c1.28-.7,2.07-2.05,2.07-3.5v-20.02c0-1.46-.79-2.8-2.07-3.5l-18.5-10.18c-1.2-.66-2.66-.66-3.86,0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="57.93" y2="23.94" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="60.18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      box_default = IconBox;
    }
  });

  // lib/boy.ts
  var boy_exports = {};
  __export(boy_exports, {
    IconBoy: () => IconBoy,
    default: () => boy_default
  });
  var IconBoy, boy_default;
  var init_boy = __esm({
    "lib/boy.ts"() {
      IconBoy = `<svg id="Boy" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><polygon points="32.22 21.94 32.23 21.94 32.23 21.93 32.22 21.94" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M22.5,34.88c6.07-2.87,9.64-12.71,9.72-12.94-4.94,1.48-9.61,5.84-9.72,12.94Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M51,17.94c-3.65,6.78-9.61,3.42-15,3.42-1.23,0-2.51.2-3.77.58.05.18,3.87,12.94,17.27,12.94,11.31,0,6.52-12.02,1.5-16.93Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M22.5,34.88c0,7.46,6.04,13.5,13.5,13.5s13.5-6.04,13.5-13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M51,63c0-4.97-6.72-9-15-9s-15,4.03-15,9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="37.12" x2="31.5" y2="37.12" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="37.12" x2="40.5" y2="37.12" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polygon points="32.22 21.94 32.23 21.94 32.23 21.93 32.22 21.94" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,34.88c6.07-2.87,9.64-12.71,9.72-12.94-4.94,1.48-9.61,5.84-9.72,12.94Z" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M51,17.94c-3.65,6.78-9.61,3.42-15,3.42-1.23,0-2.51.2-3.77.58.05.18,3.87,12.94,17.27,12.94,11.31,0,6.52-12.02,1.5-16.93Z" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><polygon points="32.23 21.93 32.22 21.94 32.23 21.94 32.23 21.93" style="fill: white;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      boy_default = IconBoy;
    }
  });

  // lib/broken-heart-f.ts
  var broken_heart_f_exports = {};
  __export(broken_heart_f_exports, {
    IconBrokenHeartF: () => IconBrokenHeartF,
    default: () => broken_heart_f_default
  });
  var IconBrokenHeartF, broken_heart_f_default;
  var init_broken_heart_f = __esm({
    "lib/broken-heart-f.ts"() {
      IconBrokenHeartF = `<svg id="BrokenHeartF" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,58.5C-10.77,34.02,12.62-3.19,36,21.77c23.38-24.97,46.77,12.24,0,36.73Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="36 22.5 40.5 36 31.5 40.5 36 58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width: 8px;"/><path d="M36,58.5C-10.77,34.02,12.62-3.19,36,21.77c23.38-24.97,46.77,12.24,0,36.73Z" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      broken_heart_f_default = IconBrokenHeartF;
    }
  });

  // lib/broken-heart-l.ts
  var broken_heart_l_exports = {};
  __export(broken_heart_l_exports, {
    IconBrokenHeartL: () => IconBrokenHeartL,
    default: () => broken_heart_l_default
  });
  var IconBrokenHeartL, broken_heart_l_default;
  var init_broken_heart_l = __esm({
    "lib/broken-heart-l.ts"() {
      IconBrokenHeartL = `<svg id="BrokenHeartL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,58.5C-10.77,34.02,12.62-3.19,36,21.77c23.38-24.97,46.77,12.24,0,36.73Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="36 22.5 40.5 36 31.5 40.5 36 58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,58.5C-10.77,34.02,12.62-3.19,36,21.77c23.38-24.97,46.77,12.24,0,36.73Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      broken_heart_l_default = IconBrokenHeartL;
    }
  });

  // lib/broken-heart-m.ts
  var broken_heart_m_exports = {};
  __export(broken_heart_m_exports, {
    IconBrokenHeartM: () => IconBrokenHeartM,
    default: () => broken_heart_m_default
  });
  var IconBrokenHeartM, broken_heart_m_default;
  var init_broken_heart_m = __esm({
    "lib/broken-heart-m.ts"() {
      IconBrokenHeartM = `<svg id="BrokenHeartM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,54C-1.41,34.41,17.29,4.64,36,24.62c18.71-19.97,37.41,9.79,0,29.38Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="36 25.2 39.6 36 32.4 39.6 36 54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,54C-1.41,34.41,17.29,4.64,36,24.62c18.71-19.97,37.41,9.79,0,29.38Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      broken_heart_m_default = IconBrokenHeartM;
    }
  });

  // lib/building-church.ts
  var building_church_exports = {};
  __export(building_church_exports, {
    IconBuildingChurch: () => IconBuildingChurch,
    default: () => building_church_default
  });
  var IconBuildingChurch, building_church_default;
  var init_building_church = __esm({
    "lib/building-church.ts"() {
      IconBuildingChurch = `<svg id="BuildingChurch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M57.75,38.81l-20.49-16.39c-.74-.59-1.78-.58-2.51.01l-20.51,16.73c-.47.38-.74.95-.74,1.55v15.78c0,1.1.9,2,2,2h16v-11.5c0-1.1.9-2,2-2h5c1.1,0,2,.9,2,2v11.5h16c1.1,0,2-.9,2-2v-16.12c0-.61-.28-1.18-.75-1.56Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,58.28v-11.5c0-1.1-.9-2-2-2h-5c-1.1,0-2,.9-2,2v11.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M14.24,39.68l20.51-16.73c.73-.6,1.78-.6,2.51-.01l20.49,16.39c.47.38.75.95.75,1.56v16.12c0,1.1-.9,2-2,2H15.5c-1.1,0-2-.9-2-2v-15.78c0-.6.27-1.17.74-1.55Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="4.5" x2="36" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.25" y1="11" x2="42.75" y2="11" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      building_church_default = IconBuildingChurch;
    }
  });

  // lib/building-house2.ts
  var building_house2_exports = {};
  __export(building_house2_exports, {
    IconBuildingHouse2: () => IconBuildingHouse2,
    default: () => building_house2_default
  });
  var IconBuildingHouse2, building_house2_default;
  var init_building_house2 = __esm({
    "lib/building-house2.ts"() {
      IconBuildingHouse2 = `<svg id="BuildingHouse2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M57.75,30.55l-20.49-16.39c-.74-.59-1.78-.58-2.51.01L14.24,30.9c-.47.38-.74.95-.74,1.55v24.05c0,1.1.9,2,2,2h41c1.1,0,2-.9,2-2v-24.39c0-.61-.28-1.18-.75-1.56Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M14.24,30.9l20.51-16.73c.73-.6,1.78-.6,2.51-.01l20.49,16.39c.47.38.75.95.75,1.56v24.39c0,1.1-.9,2-2,2H15.5c-1.1,0-2-.9-2-2v-24.05c0-.6.27-1.17.74-1.55Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      building_house2_default = IconBuildingHouse2;
    }
  });

  // lib/building-house.ts
  var building_house_exports = {};
  __export(building_house_exports, {
    IconBuildingHouse: () => IconBuildingHouse,
    default: () => building_house_default
  });
  var IconBuildingHouse, building_house_default;
  var init_building_house = __esm({
    "lib/building-house.ts"() {
      IconBuildingHouse = `<svg id="BuildingHouse" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M57.75,30.55l-20.49-16.39c-.74-.59-1.78-.58-2.51.01L14.24,30.9c-.47.38-.74.95-.74,1.55v24.05c0,1.1.9,2,2,2h16v-11.5c0-1.1.9-2,2-2h5c1.1,0,2,.9,2,2v11.5h16c1.1,0,2-.9,2-2v-24.39c0-.61-.28-1.18-.75-1.56Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,58.5v-11.5c0-1.1-.9-2-2-2h-5c-1.1,0-2,.9-2,2v11.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M14.24,30.9l20.51-16.73c.73-.6,1.78-.6,2.51-.01l20.49,16.39c.47.38.75.95.75,1.56v24.39c0,1.1-.9,2-2,2H15.5c-1.1,0-2-.9-2-2v-24.05c0-.6.27-1.17.74-1.55Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      building_house_default = IconBuildingHouse;
    }
  });

  // lib/building-shop.ts
  var building_shop_exports = {};
  __export(building_shop_exports, {
    IconBuildingShop: () => IconBuildingShop,
    default: () => building_shop_default
  });
  var IconBuildingShop, building_shop_default;
  var init_building_shop = __esm({
    "lib/building-shop.ts"() {
      IconBuildingShop = `<svg id="BuildingShop" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M61.31,30.38l-2.53-15.2c-.16-.96-1-1.67-1.97-1.67H15.19c-.98,0-1.81.71-1.97,1.67l-2.53,15.2c-.59,3.52.58,6.73,2.83,8.55h-.01v17.57c0,1.1.9,2,2,2h16v-11.5c0-1.1.9-2,2-2h5c1.1,0,2,.9,2,2v11.5h16c1.1,0,2-.9,2-2v-17.57h-.01c2.25-1.82,3.41-5.03,2.83-8.55Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M61.31,30.38c.9,5.43-2.34,10.13-7.31,10.13s-9.26-4.7-9.56-10.13c.3,5.43-3.47,10.13-8.44,10.13s-8.74-4.7-8.44-10.13c-.3,5.43-4.59,10.13-9.56,10.13s-8.22-4.7-7.31-10.13l2.53-15.2c.16-.96,1-1.67,1.97-1.67h41.61c.98,0,1.81.71,1.97,1.67l2.53,15.2Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,58.5v-11.5c0-1.1-.9-2-2-2h-5c-1.1,0-2,.9-2,2v11.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,38.93v17.57c0,1.1.9,2,2,2h41c1.1,0,2-.9,2-2v-17.57" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      building_shop_default = IconBuildingShop;
    }
  });

  // lib/button-add.ts
  var button_add_exports = {};
  __export(button_add_exports, {
    IconButtonAdd: () => IconButtonAdd,
    default: () => button_add_default
  });
  var IconButtonAdd, button_add_default;
  var init_button_add = __esm({
    "lib/button-add.ts"() {
      IconButtonAdd = `<svg id="ButtonAdd" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="31.5" x2="45" y2="31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_add_default = IconButtonAdd;
    }
  });

  // lib/button-broken-heart2.ts
  var button_broken_heart2_exports = {};
  __export(button_broken_heart2_exports, {
    IconButtonBrokenHeart2: () => IconButtonBrokenHeart2,
    default: () => button_broken_heart2_default
  });
  var IconButtonBrokenHeart2, button_broken_heart2_default;
  var init_button_broken_heart2 = __esm({
    "lib/button-broken-heart2.ts"() {
      IconButtonBrokenHeart2 = `<svg id="ButtonBrokenHeart2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h12" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 13.5 51.75 20.25 47.25 22.5 49.5 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,31.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_broken_heart2_default = IconButtonBrokenHeart2;
    }
  });

  // lib/button-broken-heart.ts
  var button_broken_heart_exports = {};
  __export(button_broken_heart_exports, {
    IconButtonBrokenHeart: () => IconButtonBrokenHeart,
    default: () => button_broken_heart_default
  });
  var IconButtonBrokenHeart, button_broken_heart_default;
  var init_button_broken_heart = __esm({
    "lib/button-broken-heart.ts"() {
      IconButtonBrokenHeart = `<svg id="ButtonBrokenHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 25 38.25 31.75 33.75 34 36 43" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,43c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_broken_heart_default = IconButtonBrokenHeart;
    }
  });

  // lib/button-check2.ts
  var button_check2_exports = {};
  __export(button_check2_exports, {
    IconButtonCheck2: () => IconButtonCheck2,
    default: () => button_check2_default
  });
  var IconButtonCheck2, button_check2_default;
  var init_button_check2 = __esm({
    "lib/button-check2.ts"() {
      IconButtonCheck2 = `<svg id="ButtonCheck2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h21" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h21" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 18.64 48.21 31.5 58.5 13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_check2_default = IconButtonCheck2;
    }
  });

  // lib/button-check.ts
  var button_check_exports = {};
  __export(button_check_exports, {
    IconButtonCheck: () => IconButtonCheck,
    default: () => button_check_default
  });
  var IconButtonCheck, button_check_default;
  var init_button_check = __esm({
    "lib/button-check.ts"() {
      IconButtonCheck = `<svg id="ButtonCheck" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 27.64 34.71 40.5 45 22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_check_default = IconButtonCheck;
    }
  });

  // lib/button-edit2.ts
  var button_edit2_exports = {};
  __export(button_edit2_exports, {
    IconButtonEdit2: () => IconButtonEdit2,
    default: () => button_edit2_default
  });
  var IconButtonEdit2, button_edit2_default;
  var init_button_edit2 = __esm({
    "lib/button-edit2.ts"() {
      IconButtonEdit2 = `<svg id="ButtonEdit2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h21" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h21" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M37.47,28.64l-1.47,7.36,7.36-1.47c.39-.08.74-.27,1.02-.55l14.07-14.07c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-14.07,14.07c-.28.28-.47.63-.55,1.02Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="48.73" y1="16.91" x2="55.09" y2="23.27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      button_edit2_default = IconButtonEdit2;
    }
  });

  // lib/button-edit.ts
  var button_edit_exports = {};
  __export(button_edit_exports, {
    IconButtonEdit: () => IconButtonEdit,
    default: () => button_edit_default
  });
  var IconButtonEdit, button_edit_default;
  var init_button_edit = __esm({
    "lib/button-edit.ts"() {
      IconButtonEdit = `<svg id="ButtonEdit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M23.44,33.68l-1.47,7.36,7.36-1.47c.39-.08.74-.27,1.02-.55l14.07-14.07c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-14.07,14.07c-.28.28-.47.63-.55,1.02Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="34.69" y1="21.94" x2="41.06" y2="28.31" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      button_edit_default = IconButtonEdit;
    }
  });

  // lib/button-exclamation-mark2.ts
  var button_exclamation_mark2_exports = {};
  __export(button_exclamation_mark2_exports, {
    IconButtonExclamationMark2: () => IconButtonExclamationMark2,
    default: () => button_exclamation_mark2_default
  });
  var IconButtonExclamationMark2, button_exclamation_mark2_default;
  var init_button_exclamation_mark2 = __esm({
    "lib/button-exclamation-mark2.ts"() {
      IconButtonExclamationMark2 = `<svg id="ButtonExclamationMark2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h12" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="45" y1="9" x2="45" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="31.5" x2="45" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      button_exclamation_mark2_default = IconButtonExclamationMark2;
    }
  });

  // lib/button-exclamation-mark.ts
  var button_exclamation_mark_exports = {};
  __export(button_exclamation_mark_exports, {
    IconButtonExclamationMark: () => IconButtonExclamationMark,
    default: () => button_exclamation_mark_default
  });
  var IconButtonExclamationMark, button_exclamation_mark_default;
  var init_button_exclamation_mark = __esm({
    "lib/button-exclamation-mark.ts"() {
      IconButtonExclamationMark = `<svg id="ButtonExclamationMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="22.5" x2="36" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="40.5" x2="36" y2="40.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      button_exclamation_mark_default = IconButtonExclamationMark;
    }
  });

  // lib/button-heart2.ts
  var button_heart2_exports = {};
  __export(button_heart2_exports, {
    IconButtonHeart2: () => IconButtonHeart2,
    default: () => button_heart2_default
  });
  var IconButtonHeart2, button_heart2_default;
  var init_button_heart2 = __esm({
    "lib/button-heart2.ts"() {
      IconButtonHeart2 = `<svg id="ButtonHeart2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h12" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,31.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_heart2_default = IconButtonHeart2;
    }
  });

  // lib/button-heart.ts
  var button_heart_exports = {};
  __export(button_heart_exports, {
    IconButtonHeart: () => IconButtonHeart,
    default: () => button_heart_default
  });
  var IconButtonHeart, button_heart_default;
  var init_button_heart = __esm({
    "lib/button-heart.ts"() {
      IconButtonHeart = `<svg id="ButtonHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,43c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_heart_default = IconButtonHeart;
    }
  });

  // lib/button-info2.ts
  var button_info2_exports = {};
  __export(button_info2_exports, {
    IconButtonInfo2: () => IconButtonInfo2,
    default: () => button_info2_default
  });
  var IconButtonInfo2, button_info2_default;
  var init_button_info2 = __esm({
    "lib/button-info2.ts"() {
      IconButtonInfo2 = `<svg id="ButtonInfo2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h12" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h16.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="49.5 31.5 49.5 18 45 18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="9" x2="49.5" y2="9" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      button_info2_default = IconButtonInfo2;
    }
  });

  // lib/button-info.ts
  var button_info_exports = {};
  __export(button_info_exports, {
    IconButtonInfo: () => IconButtonInfo,
    default: () => button_info_default
  });
  var IconButtonInfo, button_info_default;
  var init_button_info = __esm({
    "lib/button-info.ts"() {
      IconButtonInfo = `<svg id="ButtonInfo" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="36 45 36 31.5 31.5 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      button_info_default = IconButtonInfo;
    }
  });

  // lib/button-invisible2.ts
  var button_invisible2_exports = {};
  __export(button_invisible2_exports, {
    IconButtonInvisible2: () => IconButtonInvisible2,
    default: () => button_invisible2_default
  });
  var IconButtonInvisible2, button_invisible2_default;
  var init_button_invisible2 = __esm({
    "lib/button-invisible2.ts"() {
      IconButtonInvisible2 = `<svg id="ButtonInvisible2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h12" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,18s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="9" x2="36" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_invisible2_default = IconButtonInvisible2;
    }
  });

  // lib/button-invisible.ts
  var button_invisible_exports = {};
  __export(button_invisible_exports, {
    IconButtonInvisible: () => IconButtonInvisible,
    default: () => button_invisible_default
  });
  var IconButtonInvisible, button_invisible_default;
  var init_button_invisible = __esm({
    "lib/button-invisible.ts"() {
      IconButtonInvisible = `<svg id="ButtonInvisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,31.5s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="22.5" x2="22.5" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_invisible_default = IconButtonInvisible;
    }
  });

  // lib/button-multiply.ts
  var button_multiply_exports = {};
  __export(button_multiply_exports, {
    IconButtonMultiply: () => IconButtonMultiply,
    default: () => button_multiply_default
  });
  var IconButtonMultiply, button_multiply_default;
  var init_button_multiply = __esm({
    "lib/button-multiply.ts"() {
      IconButtonMultiply = `<svg id="ButtonMultiply" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.64" y1="25.14" x2="42.36" y2="37.86" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.36" y1="25.14" x2="29.64" y2="37.86" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_multiply_default = IconButtonMultiply;
    }
  });

  // lib/button-question-mark2.ts
  var button_question_mark2_exports = {};
  __export(button_question_mark2_exports, {
    IconButtonQuestionMark2: () => IconButtonQuestionMark2,
    default: () => button_question_mark2_default
  });
  var IconButtonQuestionMark2, button_question_mark2_default;
  var init_button_question_mark2 = __esm({
    "lib/button-question-mark2.ts"() {
      IconButtonQuestionMark2 = `<svg id="ButtonQuestionMark2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h12" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h16.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="48.67" y1="31.5" x2="48.67" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M42.67,15c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      button_question_mark2_default = IconButtonQuestionMark2;
    }
  });

  // lib/button-question-mark.ts
  var button_question_mark_exports = {};
  __export(button_question_mark_exports, {
    IconButtonQuestionMark: () => IconButtonQuestionMark,
    default: () => button_question_mark_default
  });
  var IconButtonQuestionMark, button_question_mark_default;
  var init_button_question_mark = __esm({
    "lib/button-question-mark.ts"() {
      IconButtonQuestionMark = `<svg id="ButtonQuestionMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="42.75" x2="36" y2="42.75" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30,26.25c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      button_question_mark_default = IconButtonQuestionMark;
    }
  });

  // lib/button-search2.ts
  var button_search2_exports = {};
  __export(button_search2_exports, {
    IconButtonSearch2: () => IconButtonSearch2,
    default: () => button_search2_default
  });
  var IconButtonSearch2, button_search2_default;
  var init_button_search2 = __esm({
    "lib/button-search2.ts"() {
      IconButtonSearch2 = `<svg id="ButtonSearch2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h12" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="58.5" y1="31.5" x2="51.36" y2="24.36" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="45" cy="18" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      button_search2_default = IconButtonSearch2;
    }
  });

  // lib/button-search.ts
  var button_search_exports = {};
  __export(button_search_exports, {
    IconButtonSearch: () => IconButtonSearch,
    default: () => button_search_default
  });
  var IconButtonSearch, button_search_default;
  var init_button_search = __esm({
    "lib/button-search.ts"() {
      IconButtonSearch = `<svg id="ButtonSearch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="49.5" y1="45" x2="42.36" y2="37.86" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="31.5" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      button_search_default = IconButtonSearch;
    }
  });

  // lib/button-star2.ts
  var button_star2_exports = {};
  __export(button_star2_exports, {
    IconButtonStar2: () => IconButtonStar2,
    default: () => button_star2_default
  });
  var IconButtonStar2, button_star2_default;
  var init_button_star2 = __esm({
    "lib/button-star2.ts"() {
      IconButtonStar2 = `<svg id="ButtonStar2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,36v7.5c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h12" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,36v16.5c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M50,24.5l8.18,5.85c.39.28.91-.1.76-.56l-3.18-9.55,8.09-5.98c.39-.28.18-.9-.3-.89l-10.06.08-3.18-9.55c-.15-.45-.8-.45-.94,0l-3.04,9.59-10.06.08c-.48,0-.67.62-.28.9l8.18,5.85-3.04,9.59c-.14.46.38.83.76.55l8.09-5.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_star2_default = IconButtonStar2;
    }
  });

  // lib/button-star.ts
  var button_star_exports = {};
  __export(button_star_exports, {
    IconButtonStar: () => IconButtonStar,
    default: () => button_star_default
  });
  var IconButtonStar, button_star_default;
  var init_button_star = __esm({
    "lib/button-star.ts"() {
      IconButtonStar = `<svg id="ButtonStar" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,39.5l8.18,5.85c.39.28.91-.1.76-.56l-3.18-9.55,8.09-5.98c.39-.28.18-.9-.3-.89l-10.06.08-3.18-9.55c-.15-.45-.8-.45-.94,0l-3.04,9.59-10.06.08c-.48,0-.67.62-.28.9l8.18,5.85-3.04,9.59c-.14.46.38.83.76.55l8.09-5.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_star_default = IconButtonStar;
    }
  });

  // lib/button-subtract.ts
  var button_subtract_exports = {};
  __export(button_subtract_exports, {
    IconButtonSubtract: () => IconButtonSubtract,
    default: () => button_subtract_default
  });
  var IconButtonSubtract, button_subtract_default;
  var init_button_subtract = __esm({
    "lib/button-subtract.ts"() {
      IconButtonSubtract = `<svg id="ButtonSubtract" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="31.5" x2="45" y2="31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_subtract_default = IconButtonSubtract;
    }
  });

  // lib/button-visible2.ts
  var button_visible2_exports = {};
  __export(button_visible2_exports, {
    IconButtonVisible2: () => IconButtonVisible2,
    default: () => button_visible2_default
  });
  var IconButtonVisible2, button_visible2_default;
  var init_button_visible2 = __esm({
    "lib/button-visible2.ts"() {
      IconButtonVisible2 = `<svg id="ButtonVisible2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5v12c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6v-24c0-3.31,2.69-6,6-6h12" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,31.5v21c0,3.31-2.69,6-6,6H19.5c-3.31,0-6-2.69-6-6V19.5c0-3.31,2.69-6,6-6h12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,18s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="18" r="4.5" style="stroke-width: 0px;"/></svg>`;
      button_visible2_default = IconButtonVisible2;
    }
  });

  // lib/button-visible.ts
  var button_visible_exports = {};
  __export(button_visible_exports, {
    IconButtonVisible: () => IconButtonVisible,
    default: () => button_visible_default
  });
  var IconButtonVisible, button_visible_default;
  var init_button_visible = __esm({
    "lib/button-visible.ts"() {
      IconButtonVisible = `<svg id="ButtonVisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,31.5s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="31.5" r="4.5" style="stroke-width: 0px;"/></svg>`;
      button_visible_default = IconButtonVisible;
    }
  });

  // lib/button.ts
  var button_exports = {};
  __export(button_exports, {
    IconButton: () => IconButton,
    default: () => button_default
  });
  var IconButton, button_default;
  var init_button = __esm({
    "lib/button.ts"() {
      IconButton = `<svg id="Button" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="36" rx="6" ry="6" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="6" ry="6" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      button_default = IconButton;
    }
  });

  // lib/calendar2.ts
  var calendar2_exports = {};
  __export(calendar2_exports, {
    IconCalendar2: () => IconCalendar2,
    default: () => calendar2_default
  });
  var IconCalendar2, calendar2_default;
  var init_calendar2 = __esm({
    "lib/calendar2.ts"() {
      IconCalendar2 = `<svg id="Calendar2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="13.5" width="54" height="49.5" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="13.5" width="54" height="49.5" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="9" x2="18" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="9" x2="27" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="9" x2="45" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="9" x2="54" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="27" x2="22.5" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="27" x2="31.5" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="27" x2="40.5" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="27" x2="49.5" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="36" x2="22.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="36" x2="31.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="36" x2="40.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="36" x2="49.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="45" x2="22.5" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="45" x2="31.5" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="45" x2="40.5" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="45" x2="49.5" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="54" x2="22.5" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="54" x2="31.5" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="54" x2="40.5" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="54" x2="49.5" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      calendar2_default = IconCalendar2;
    }
  });

  // lib/calendar.ts
  var calendar_exports = {};
  __export(calendar_exports, {
    IconCalendar: () => IconCalendar,
    default: () => calendar_default
  });
  var IconCalendar, calendar_default;
  var init_calendar = __esm({
    "lib/calendar.ts"() {
      IconCalendar = `<svg id="Calendar" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M9,27v32c0,2.21,1.79,4,4,4h46c2.21,0,4-1.79,4-4V27H9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="13.5" width="54" height="49.5" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="27" x2="63" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="36" x2="18" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="18" y1="45" x2="18" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="18" y1="54" x2="18" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="27" y1="54" x2="27" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="36" y1="54" x2="36" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="45" y1="54" x2="45" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="54" y1="54" x2="54" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="54" y1="45" x2="54" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="54" y1="36" x2="54" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="45" y1="36" x2="45" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="45" y1="45" x2="45" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="36" y1="45" x2="36" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="27" y1="45" x2="27" y2="45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="27" y1="36" x2="27" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="36" y1="36" x2="36" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="18" y1="9" x2="18" y2="13.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="9" x2="27" y2="13.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="13.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="9" x2="45" y2="13.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="9" x2="54" y2="13.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="16.5" y1="20.5" x2="30" y2="20.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      calendar_default = IconCalendar;
    }
  });

  // lib/chart-bars-squared.ts
  var chart_bars_squared_exports = {};
  __export(chart_bars_squared_exports, {
    IconChartBarsSquared: () => IconChartBarsSquared,
    default: () => chart_bars_squared_default
  });
  var IconChartBarsSquared, chart_bars_squared_default;
  var init_chart_bars_squared = __esm({
    "lib/chart-bars-squared.ts"() {
      IconChartBarsSquared = `<svg id="ChartBarsSquared" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="22.5" x2="22.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="27" x2="49.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chart_bars_squared_default = IconChartBarsSquared;
    }
  });

  // lib/chart-bubbles.ts
  var chart_bubbles_exports = {};
  __export(chart_bubbles_exports, {
    IconChartBubbles: () => IconChartBubbles,
    default: () => chart_bubbles_default
  });
  var IconChartBubbles, chart_bubbles_default;
  var init_chart_bubbles = __esm({
    "lib/chart-bubbles.ts"() {
      IconChartBubbles = `<svg id="ChartBubbles" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="18" cy="27" r="9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="29.25" cy="51.75" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="22.5" r="13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="18" cy="27" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="29.25" cy="51.75" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="22.5" r="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chart_bubbles_default = IconChartBubbles;
    }
  });

  // lib/chart-candles.ts
  var chart_candles_exports = {};
  __export(chart_candles_exports, {
    IconChartCandles: () => IconChartCandles,
    default: () => chart_candles_default
  });
  var IconChartCandles, chart_candles_default;
  var init_chart_candles = __esm({
    "lib/chart-candles.ts"() {
      IconChartCandles = `<svg id="ChartCandles" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="18" width="9" height="27" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="45" y="27" width="9" height="22.5" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="22.5" y1="9" x2="22.5" y2="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="45" x2="22.5" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="9" x2="49.5" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="49.5" x2="49.5" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="18" width="9" height="27" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="45" y="27" width="9" height="22.5" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chart_candles_default = IconChartCandles;
    }
  });

  // lib/chart-half-circle.ts
  var chart_half_circle_exports = {};
  __export(chart_half_circle_exports, {
    IconChartHalfCircle: () => IconChartHalfCircle,
    default: () => chart_half_circle_default
  });
  var IconChartHalfCircle, chart_half_circle_default;
  var init_chart_half_circle = __esm({
    "lib/chart-half-circle.ts"() {
      IconChartHalfCircle = `<svg id="ChartHalfCircle" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,19c-14.91,0-27,12.09-27,27h18c0-4.97,4.03-9,9-9s9,4.03,9,9h18c0-14.91-12.09-27-27-27Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="42.36" y1="39.64" x2="55.09" y2="26.91" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.64" y1="39.64" x2="16.91" y2="26.91" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="19" x2="36" y2="37" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,19c-14.91,0-27,12.09-27,27h18c0-4.97,4.03-9,9-9s9,4.03,9,9h18c0-14.91-12.09-27-27-27Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chart_half_circle_default = IconChartHalfCircle;
    }
  });

  // lib/chart-line-squared.ts
  var chart_line_squared_exports = {};
  __export(chart_line_squared_exports, {
    IconChartLineSquared: () => IconChartLineSquared,
    default: () => chart_line_squared_default
  });
  var IconChartLineSquared, chart_line_squared_default;
  var init_chart_line_squared = __esm({
    "lib/chart-line-squared.ts"() {
      IconChartLineSquared = `<svg id="ChartLineSquared" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="18 54 31.5 31.5 40.5 40.5 54 18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chart_line_squared_default = IconChartLineSquared;
    }
  });

  // lib/chart-line.ts
  var chart_line_exports = {};
  __export(chart_line_exports, {
    IconChartLine: () => IconChartLine,
    default: () => chart_line_default
  });
  var IconChartLine, chart_line_default;
  var init_chart_line = __esm({
    "lib/chart-line.ts"() {
      IconChartLine = `<svg id="ChartLine" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,13.5v41c0,2.21,1.79,4,4,4h41" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 49.5 36 36 40.5 40.5 58.5 22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      chart_line_default = IconChartLine;
    }
  });

  // lib/chart-pie.ts
  var chart_pie_exports = {};
  __export(chart_pie_exports, {
    IconChartPie: () => IconChartPie,
    default: () => chart_pie_default
  });
  var IconChartPie, chart_pie_default;
  var init_chart_pie = __esm({
    "lib/chart-pie.ts"() {
      IconChartPie = `<svg id="ChartPie" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M31.5,9c-12.43,0-22.5,10.07-22.5,22.5h22.5V9Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,18v22.5h-22.5c0,12.43,10.07,22.5,22.5,22.5s22.5-10.07,22.5-22.5-10.07-22.5-22.5-22.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M31.5,9c-12.43,0-22.5,10.07-22.5,22.5h22.5V9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/></svg>`;
      chart_pie_default = IconChartPie;
    }
  });

  // lib/check-fat.ts
  var check_fat_exports = {};
  __export(check_fat_exports, {
    IconCheckFat: () => IconCheckFat,
    default: () => check_fat_default
  });
  var IconCheckFat, check_fat_default;
  var init_check_fat = __esm({
    "lib/check-fat.ts"() {
      IconCheckFat = `<svg id="CheckFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="13.5 23.14 34.71 58.5 63 9" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      check_fat_default = IconCheckFat;
    }
  });

  // lib/check-l.ts
  var check_l_exports = {};
  __export(check_l_exports, {
    IconCheckL: () => IconCheckL,
    default: () => check_l_default
  });
  var IconCheckL, check_l_default;
  var init_check_l = __esm({
    "lib/check-l.ts"() {
      IconCheckL = `<svg id="CheckL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="13.5 23.14 34.71 58.5 63 9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      check_l_default = IconCheckL;
    }
  });

  // lib/check-list.ts
  var check_list_exports = {};
  __export(check_list_exports, {
    IconCheckList: () => IconCheckList,
    default: () => check_list_default
  });
  var IconCheckList, check_list_default;
  var init_check_list = __esm({
    "lib/check-list.ts"() {
      IconCheckList = `<svg id="CheckList" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="31.5" width="27" height="27" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="31.5" width="27" height="27" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M31.5,15.5v16h7c1.1,0,2,.9,2,2v7h16c1.1,0,2-.9,2-2V15.5c0-1.1-.9-2-2-2h-23c-1.1,0-2,.9-2,2Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="21.01 42.24 26.2 49.59 33.99 37.91" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      check_list_default = IconCheckList;
    }
  });

  // lib/check-m.ts
  var check_m_exports = {};
  __export(check_m_exports, {
    IconCheckM: () => IconCheckM,
    default: () => check_m_default
  });
  var IconCheckM, check_m_default;
  var init_check_m = __esm({
    "lib/check-m.ts"() {
      IconCheckM = `<svg id="CheckM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="22.5 27 36 49.5 54 18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      check_m_default = IconCheckM;
    }
  });

  // lib/check-s.ts
  var check_s_exports = {};
  __export(check_s_exports, {
    IconCheckS: () => IconCheckS,
    default: () => check_s_default
  });
  var IconCheckS, check_s_default;
  var init_check_s = __esm({
    "lib/check-s.ts"() {
      IconCheckS = `<svg id="CheckS" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="26.36 33.43 36 49.5 48.86 27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      check_s_default = IconCheckS;
    }
  });

  // lib/circle-invisible.ts
  var circle_invisible_exports = {};
  __export(circle_invisible_exports, {
    IconCircleInvisible: () => IconCircleInvisible,
    default: () => circle_invisible_default
  });
  var IconCircleInvisible, circle_invisible_default;
  var init_circle_invisible = __esm({
    "lib/circle-invisible.ts"() {
      IconCircleInvisible = `<svg id="CircleInvisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,36s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="27" x2="22.5" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      circle_invisible_default = IconCircleInvisible;
    }
  });

  // lib/circle-subtract.ts
  var circle_subtract_exports = {};
  __export(circle_subtract_exports, {
    IconCircleSubtract: () => IconCircleSubtract,
    default: () => circle_subtract_default
  });
  var IconCircleSubtract, circle_subtract_default;
  var init_circle_subtract = __esm({
    "lib/circle-subtract.ts"() {
      IconCircleSubtract = `<svg id="CircleSubtract" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="36" x2="45" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      circle_subtract_default = IconCircleSubtract;
    }
  });

  // lib/circled-add.ts
  var circled_add_exports = {};
  __export(circled_add_exports, {
    IconCircledAdd: () => IconCircledAdd,
    default: () => circled_add_default
  });
  var IconCircledAdd, circled_add_default;
  var init_circled_add = __esm({
    "lib/circled-add.ts"() {
      IconCircledAdd = `<svg id="CircledAdd" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="36" x2="45" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      circled_add_default = IconCircledAdd;
    }
  });

  // lib/circled-broken-heart.ts
  var circled_broken_heart_exports = {};
  __export(circled_broken_heart_exports, {
    IconCircledBrokenHeart: () => IconCircledBrokenHeart,
    default: () => circled_broken_heart_default
  });
  var IconCircledBrokenHeart, circled_broken_heart_default;
  var init_circled_broken_heart = __esm({
    "lib/circled-broken-heart.ts"() {
      IconCircledBrokenHeart = `<svg id="CircledBrokenHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 31.5 38.25 38.25 33.75 40.5 36 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,49.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      circled_broken_heart_default = IconCircledBrokenHeart;
    }
  });

  // lib/circled-check.ts
  var circled_check_exports = {};
  __export(circled_check_exports, {
    IconCircledCheck: () => IconCircledCheck,
    default: () => circled_check_default
  });
  var IconCircledCheck, circled_check_default;
  var init_circled_check = __esm({
    "lib/circled-check.ts"() {
      IconCircledCheck = `<svg id="CircledCheck" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 32.14 34.71 45 45 27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      circled_check_default = IconCircledCheck;
    }
  });

  // lib/circled-edit.ts
  var circled_edit_exports = {};
  __export(circled_edit_exports, {
    IconCircledEdit: () => IconCircledEdit,
    default: () => circled_edit_default
  });
  var IconCircledEdit, circled_edit_default;
  var init_circled_edit = __esm({
    "lib/circled-edit.ts"() {
      IconCircledEdit = `<svg id="CircledEdit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M27.94,38.18l-1.47,7.36,7.36-1.47c.39-.08.74-.27,1.02-.55l14.07-14.07c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-14.07,14.07c-.28.28-.47.63-.55,1.02Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="39.19" y1="26.44" x2="45.56" y2="32.81" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      circled_edit_default = IconCircledEdit;
    }
  });

  // lib/circled-exclamation-mark.ts
  var circled_exclamation_mark_exports = {};
  __export(circled_exclamation_mark_exports, {
    IconCircledExclamationMark: () => IconCircledExclamationMark,
    default: () => circled_exclamation_mark_default
  });
  var IconCircledExclamationMark, circled_exclamation_mark_default;
  var init_circled_exclamation_mark = __esm({
    "lib/circled-exclamation-mark.ts"() {
      IconCircledExclamationMark = `<svg id="CircledExclamationMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="24.75" x2="36" y2="42.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="47.25" x2="36" y2="47.25" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      circled_exclamation_mark_default = IconCircledExclamationMark;
    }
  });

  // lib/circled-heart.ts
  var circled_heart_exports = {};
  __export(circled_heart_exports, {
    IconCircledHeart: () => IconCircledHeart,
    default: () => circled_heart_default
  });
  var IconCircledHeart, circled_heart_default;
  var init_circled_heart = __esm({
    "lib/circled-heart.ts"() {
      IconCircledHeart = `<svg id="CircledHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,49.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      circled_heart_default = IconCircledHeart;
    }
  });

  // lib/circled-info.ts
  var circled_info_exports = {};
  __export(circled_info_exports, {
    IconCircledInfo: () => IconCircledInfo,
    default: () => circled_info_default
  });
  var IconCircledInfo, circled_info_default;
  var init_circled_info = __esm({
    "lib/circled-info.ts"() {
      IconCircledInfo = `<svg id="CircledInfo" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="36 49.5 36 36 31.5 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="27" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      circled_info_default = IconCircledInfo;
    }
  });

  // lib/circled-multiply.ts
  var circled_multiply_exports = {};
  __export(circled_multiply_exports, {
    IconCircledMultiply: () => IconCircledMultiply,
    default: () => circled_multiply_default
  });
  var IconCircledMultiply, circled_multiply_default;
  var init_circled_multiply = __esm({
    "lib/circled-multiply.ts"() {
      IconCircledMultiply = `<svg id="CircledMultiply" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="29.64" y1="29.64" x2="42.36" y2="42.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.36" y1="29.64" x2="29.64" y2="42.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      circled_multiply_default = IconCircledMultiply;
    }
  });

  // lib/circled-question-mark.ts
  var circled_question_mark_exports = {};
  __export(circled_question_mark_exports, {
    IconCircledQuestionMark: () => IconCircledQuestionMark,
    default: () => circled_question_mark_default
  });
  var IconCircledQuestionMark, circled_question_mark_default;
  var init_circled_question_mark = __esm({
    "lib/circled-question-mark.ts"() {
      IconCircledQuestionMark = `<svg id="CircledQuestionMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="47.25" x2="36" y2="47.25" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30,30.75c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      circled_question_mark_default = IconCircledQuestionMark;
    }
  });

  // lib/circled-search.ts
  var circled_search_exports = {};
  __export(circled_search_exports, {
    IconCircledSearch: () => IconCircledSearch,
    default: () => circled_search_default
  });
  var IconCircledSearch, circled_search_default;
  var init_circled_search = __esm({
    "lib/circled-search.ts"() {
      IconCircledSearch = `<svg id="CircledSearch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="49.5" y1="49.5" x2="42.36" y2="42.36" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      circled_search_default = IconCircledSearch;
    }
  });

  // lib/circled-star.ts
  var circled_star_exports = {};
  __export(circled_star_exports, {
    IconCircledStar: () => IconCircledStar,
    default: () => circled_star_default
  });
  var IconCircledStar, circled_star_default;
  var init_circled_star = __esm({
    "lib/circled-star.ts"() {
      IconCircledStar = `<svg id="CircledStar" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,43.43l8.18,5.85c.39.28.91-.1.76-.56l-3.18-9.55,8.09-5.98c.39-.28.18-.9-.3-.89l-10.06.08-3.18-9.55c-.15-.45-.8-.45-.94,0l-3.04,9.59-10.06.08c-.48,0-.67.62-.28.9l8.18,5.85-3.04,9.59c-.14.46.38.83.76.55l8.09-5.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      circled_star_default = IconCircledStar;
    }
  });

  // lib/circled-visible.ts
  var circled_visible_exports = {};
  __export(circled_visible_exports, {
    IconCircledVisible: () => IconCircledVisible,
    default: () => circled_visible_default
  });
  var IconCircledVisible, circled_visible_default;
  var init_circled_visible = __esm({
    "lib/circled-visible.ts"() {
      IconCircledVisible = `<svg id="CircledVisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,36s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="4.5" style="stroke-width: 0px;"/></svg>`;
      circled_visible_default = IconCircledVisible;
    }
  });

  // lib/circled.ts
  var circled_exports = {};
  __export(circled_exports, {
    IconCircled: () => IconCircled,
    default: () => circled_default
  });
  var IconCircled, circled_default;
  var init_circled = __esm({
    "lib/circled.ts"() {
      IconCircled = `<svg id="Circled" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      circled_default = IconCircled;
    }
  });

  // lib/clock.ts
  var clock_exports = {};
  __export(clock_exports, {
    IconClock: () => IconClock,
    default: () => clock_default
  });
  var IconClock, clock_default;
  var init_clock = __esm({
    "lib/clock.ts"() {
      IconClock = `<svg id="Clock" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="18" x2="36" y2="36" style="fill: none; transform: rotate(calc((360 / 60 * var(--seconds-handle)) * 1deg)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-s, calc(var(--icon-stroke-width, 5) * 0.5));"/><circle cx="36" cy="36" r="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="36" style="fill: none; transform: rotate(calc((360 / 60 * var(--minutes-handle)) * 1deg)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="36" style="fill: none; transform: rotate(calc((360 / 12 * var(--hours-handle)) * 1deg)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      clock_default = IconClock;
    }
  });

  // lib/cloud-lightning.ts
  var cloud_lightning_exports = {};
  __export(cloud_lightning_exports, {
    IconCloudLightning: () => IconCloudLightning,
    default: () => cloud_lightning_default
  });
  var IconCloudLightning, cloud_lightning_default;
  var init_cloud_lightning = __esm({
    "lib/cloud-lightning.ts"() {
      IconCloudLightning = `<svg id="CloudLightning" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M30.7,46.19v7.14c0,.55.45,1,1,1h4.3v6.67c0,1.02,1.35,1.39,1.86.5l6.5-11.2c.39-.67-.09-1.5-.87-1.5h-3v-2.39" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,24.5c-.2,0-.39.02-.58.03-1.99-7.77-9.02-13.53-17.42-13.53s-15.43,5.76-17.42,13.53c-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86s9.97-2.27,13.26-5.86c1.38.86,3,1.36,4.74,1.36,4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M54,24.5c-.2,0-.39.02-.58.03-1.99-7.77-9.02-13.53-17.42-13.53s-15.43,5.76-17.42,13.53c-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86s9.97-2.27,13.26-5.86c1.38.86,3,1.36,4.74,1.36,4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cloud_lightning_default = IconCloudLightning;
    }
  });

  // lib/cloud-rain-copy2.ts
  var cloud_rain_copy2_exports = {};
  __export(cloud_rain_copy2_exports, {
    IconCloudRainCopy2: () => IconCloudRainCopy2,
    default: () => cloud_rain_copy2_default
  });
  var IconCloudRainCopy2, cloud_rain_copy2_default;
  var init_cloud_rain_copy2 = __esm({
    "lib/cloud-rain-copy2.ts"() {
      IconCloudRainCopy2 = `<svg id="CloudRainCopy2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54,24.5c-.2,0-.39.02-.58.03-1.99-7.77-9.02-13.53-17.42-13.53s-15.43,5.76-17.42,13.53c-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86s9.97-2.27,13.26-5.86c1.38.86,3,1.36,4.74,1.36,4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M54,24.5c-.2,0-.39.02-.58.03-1.99-7.77-9.02-13.53-17.42-13.53s-15.43,5.76-17.42,13.53c-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86s9.97-2.27,13.26-5.86c1.38.86,3,1.36,4.74,1.36,4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="26" y1="51.5" x2="21.5" y2="60.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="31.5" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="49.5" x2="45" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="54" x2="56.25" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="54" x2="11.25" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cloud_rain_copy2_default = IconCloudRainCopy2;
    }
  });

  // lib/cloud-small-rain.ts
  var cloud_small_rain_exports = {};
  __export(cloud_small_rain_exports, {
    IconCloudSmallRain: () => IconCloudSmallRain,
    default: () => cloud_small_rain_default
  });
  var IconCloudSmallRain, cloud_small_rain_default;
  var init_cloud_small_rain = __esm({
    "lib/cloud-small-rain.ts"() {
      IconCloudSmallRain = `<svg id="CloudSmallRain" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54,25.5c-.2,0-.39.02-.58.03-1.99-7.77-9.02-13.53-17.42-13.53s-15.43,5.76-17.42,13.53c-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86s9.97-2.27,13.26-5.86c1.38.86,3,1.36,4.74,1.36,4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M54,25.5c-.2,0-.39.02-.58.03-1.99-7.77-9.02-13.53-17.42-13.53s-15.43,5.76-17.42,13.53c-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86s9.97-2.27,13.26-5.86c1.38.86,3,1.36,4.74,1.36,4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="52.5" x2="18" y2="52.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="57" x2="36" y2="57" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="52.5" x2="54" y2="52.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cloud_small_rain_default = IconCloudSmallRain;
    }
  });

  // lib/cloud-sun.ts
  var cloud_sun_exports = {};
  __export(cloud_sun_exports, {
    IconCloudSun: () => IconCloudSun,
    default: () => cloud_sun_default
  });
  var IconCloudSun, cloud_sun_default;
  var init_cloud_sun = __esm({
    "lib/cloud-sun.ts"() {
      IconCloudSun = `<svg id="CloudSun" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="45.22" y1="3.41" x2="45.22" y2="9.68" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="60.88" y1="25.33" x2="67.14" y2="25.33" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.73" y1="9.83" x2="34.15" y2="14.26" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="56.29" y1="14.26" x2="60.72" y2="9.83" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M35.15,22.6c1.2-4.44,5.26-7.7,10.07-7.7,5.76,0,10.44,4.67,10.44,10.44,0,2.88-1.17,5.49-3.06,7.38" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,36c-.2,0-.39.02-.58.03-1.99-7.77-9.02-13.53-17.42-13.53s-15.43,5.76-17.42,13.53c-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86s9.97-2.27,13.26-5.86c1.38.86,3,1.36,4.74,1.36,4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M54,36c-.2,0-.39.02-.58.03-1.99-7.77-9.02-13.53-17.42-13.53s-15.43,5.76-17.42,13.53c-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86s9.97-2.27,13.26-5.86c1.38.86,3,1.36,4.74,1.36,4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cloud_sun_default = IconCloudSun;
    }
  });

  // lib/cloud-thermometer.ts
  var cloud_thermometer_exports = {};
  __export(cloud_thermometer_exports, {
    IconCloudThermometer: () => IconCloudThermometer,
    default: () => cloud_thermometer_default
  });
  var IconCloudThermometer, cloud_thermometer_default;
  var init_cloud_thermometer = __esm({
    "lib/cloud-thermometer.ts"() {
      IconCloudThermometer = `<svg id="CloudThermometer" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="51.75" cy="51.75" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="51.75" y1="16.5" x2="51.75" y2="47.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45,22.67c-2.65-1.54-5.72-2.42-9-2.42-8.39,0-15.43,5.76-17.42,13.53-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86,1.79,0,3.52-.26,5.15-.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,42.77V15.75c0-3.73-3.02-6.75-6.75-6.75s-6.75,3.02-6.75,6.75v27.02c-2.73,2.05-4.5,5.31-4.5,8.98,0,6.21,5.04,11.25,11.25,11.25s11.25-5.04,11.25-11.25c0-3.68-1.77-6.93-4.5-8.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45,22.67c-2.65-1.54-5.72-2.42-9-2.42-8.39,0-15.43,5.76-17.42,13.53-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86,1.79,0,3.52-.26,5.15-.75" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cloud_thermometer_default = IconCloudThermometer;
    }
  });

  // lib/cloud.ts
  var cloud_exports = {};
  __export(cloud_exports, {
    IconCloud: () => IconCloud,
    default: () => cloud_default
  });
  var IconCloud, cloud_default;
  var init_cloud = __esm({
    "lib/cloud.ts"() {
      IconCloud = `<svg id="Cloud" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54,30c-.2,0-.39.02-.58.03-1.99-7.77-9.02-13.53-17.42-13.53s-15.43,5.76-17.42,13.53c-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86s9.97-2.27,13.26-5.86c1.38.86,3,1.36,4.74,1.36,4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M54,30c-.2,0-.39.02-.58.03-1.99-7.77-9.02-13.53-17.42-13.53s-15.43,5.76-17.42,13.53c-.19-.01-.39-.03-.58-.03-4.97,0-9,4.03-9,9s4.03,9,9,9c1.74,0,3.36-.5,4.74-1.36,3.29,3.59,8.01,5.86,13.26,5.86s9.97-2.27,13.26-5.86c1.38.86,3,1.36,4.74,1.36,4.97,0,9-4.03,9-9s-4.03-9-9-9Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cloud_default = IconCloud;
    }
  });

  // lib/code-brackets-circled.ts
  var code_brackets_circled_exports = {};
  __export(code_brackets_circled_exports, {
    IconCodeBracketsCircled: () => IconCodeBracketsCircled,
    default: () => code_brackets_circled_default
  });
  var IconCodeBracketsCircled, code_brackets_circled_default;
  var init_code_brackets_circled = __esm({
    "lib/code-brackets-circled.ts"() {
      IconCodeBracketsCircled = `<svg id="CodeBracketsCircled" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,54c2.49,0,4.5-2.01,4.5-4.5v-9l4.5-4.5-4.5-4.5v-9c0-2.49-2.01-4.5-4.5-4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M31.5,18c-2.49,0-4.5,2.01-4.5,4.5v9s-4.5,4.5-4.5,4.5l4.5,4.5v9c0,2.49,2.01,4.5,4.5,4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      code_brackets_circled_default = IconCodeBracketsCircled;
    }
  });

  // lib/code-brackets.ts
  var code_brackets_exports = {};
  __export(code_brackets_exports, {
    IconCodeBrackets: () => IconCodeBrackets,
    default: () => code_brackets_default
  });
  var IconCodeBrackets, code_brackets_default;
  var init_code_brackets = __esm({
    "lib/code-brackets.ts"() {
      IconCodeBrackets = `<svg id="CodeBrackets" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M27,13.5c-2.49,0-4.5,2.01-4.5,4.5v13.5l-4.5,4.5,4.5,4.5v13.5c0,2.49,2.01,4.5,4.5,4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45,58.5c2.49,0,4.5-2.01,4.5-4.5v-13.5l4.5-4.5-4.5-4.5v-13.5c0-2.49-2.01-4.5-4.5-4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      code_brackets_default = IconCodeBrackets;
    }
  });

  // lib/code-chevrons-circled.ts
  var code_chevrons_circled_exports = {};
  __export(code_chevrons_circled_exports, {
    IconCodeChevronsCircled: () => IconCodeChevronsCircled,
    default: () => code_chevrons_circled_default
  });
  var IconCodeChevronsCircled, code_chevrons_circled_default;
  var init_code_chevrons_circled = __esm({
    "lib/code-chevrons-circled.ts"() {
      IconCodeChevronsCircled = `<svg id="CodeChevronsCircled" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="36" r="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 27 18 36 27 45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 45 54 36 45 27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="22.5" x2="31.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      code_chevrons_circled_default = IconCodeChevronsCircled;
    }
  });

  // lib/code-chevrons-open-circled.ts
  var code_chevrons_open_circled_exports = {};
  __export(code_chevrons_open_circled_exports, {
    IconCodeChevronsOpenCircled: () => IconCodeChevronsOpenCircled,
    default: () => code_chevrons_open_circled_default
  });
  var IconCodeChevronsOpenCircled, code_chevrons_open_circled_default;
  var init_code_chevrons_open_circled = __esm({
    "lib/code-chevrons-open-circled.ts"() {
      IconCodeChevronsOpenCircled = `<svg id="CodeChevronsOpenCircled" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="36" r="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="31.5 27 22.5 36 31.5 45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 45 49.5 36 40.5 27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      code_chevrons_open_circled_default = IconCodeChevronsOpenCircled;
    }
  });

  // lib/code-chevrons-open.ts
  var code_chevrons_open_exports = {};
  __export(code_chevrons_open_exports, {
    IconCodeChevronsOpen: () => IconCodeChevronsOpen,
    default: () => code_chevrons_open_default
  });
  var IconCodeChevronsOpen, code_chevrons_open_default;
  var init_code_chevrons_open = __esm({
    "lib/code-chevrons-open.ts"() {
      IconCodeChevronsOpen = `<svg id="CodeChevronsOpen" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="27 22.5 13.5 36 27 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 49.5 58.5 36 45 22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      code_chevrons_open_default = IconCodeChevronsOpen;
    }
  });

  // lib/code-chevrons.ts
  var code_chevrons_exports = {};
  __export(code_chevrons_exports, {
    IconCodeChevrons: () => IconCodeChevrons,
    default: () => code_chevrons_default
  });
  var IconCodeChevrons, code_chevrons_default;
  var init_code_chevrons = __esm({
    "lib/code-chevrons.ts"() {
      IconCodeChevrons = `<svg id="CodeChevrons" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="22.5 22.5 9 36 22.5 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 49.5 63 36 49.5 22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="18" x2="31.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      code_chevrons_default = IconCodeChevrons;
    }
  });

  // lib/company.ts
  var company_exports = {};
  __export(company_exports, {
    IconCompany: () => IconCompany,
    default: () => company_default
  });
  var IconCompany, company_default;
  var init_company = __esm({
    "lib/company.ts"() {
      IconCompany = `<svg id="Company" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="9" width="27" height="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="36" y="27" width="27" height="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="18" x2="18" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="18" x2="27" y2="18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="27" x2="18" y2="27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="27" x2="27" y2="27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="36" x2="18" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="36" x2="27" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="45" x2="18" y2="45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="45" x2="27" y2="45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="54" x2="18" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="54" x2="27" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="54" x2="45" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="54" x2="54" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="45" x2="45" y2="45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="45" x2="54" y2="45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="36" x2="45" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="36" x2="54" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      company_default = IconCompany;
    }
  });

  // lib/dislike.ts
  var dislike_exports = {};
  __export(dislike_exports, {
    IconDislike: () => IconDislike,
    default: () => dislike_default
  });
  var IconDislike, dislike_default;
  var init_dislike = __esm({
    "lib/dislike.ts"() {
      IconDislike = `<svg id="Dislike" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M29.88,18c-1.72,0-3.25,1.1-3.79,2.74l-6.33,19c-.86,2.59,1.06,5.26,3.79,5.26h13.82s-5.49,9.16-5.49,9.16c-1.19,1.99.54,4.34,3.21,4.34h.47c1.13,0,2.2-.44,2.88-1.2l11.05-12.3h0v-27h-19.62Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M51.5,18h7v27h-7c-1.1,0-2-.9-2-2v-23c0-1.1.9-2,2-2Z" transform="translate(108 63) rotate(180)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M29.88,18c-1.72,0-3.25,1.1-3.79,2.74l-6.33,19c-.86,2.59,1.06,5.26,3.79,5.26h13.82s-5.49,9.16-5.49,9.16c-1.19,1.99.54,4.34,3.21,4.34h.47c1.13,0,2.2-.44,2.88-1.2l11.05-12.3h0v-27h-19.62Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      dislike_default = IconDislike;
    }
  });

  // lib/edit-fat.ts
  var edit_fat_exports = {};
  __export(edit_fat_exports, {
    IconEditFat: () => IconEditFat,
    default: () => edit_fat_default
  });
  var IconEditFat, edit_fat_default;
  var init_edit_fat = __esm({
    "lib/edit-fat.ts"() {
      IconEditFat = `<svg id="EditFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M16.44,43.78l-2.94,14.72,14.72-2.94c.77-.15,1.49-.54,2.04-1.09l28.13-28.13c1.56-1.56,1.56-4.09,0-5.66l-7.07-7.07c-1.56-1.56-4.09-1.56-5.66,0l-28.13,28.13c-.56.56-.94,1.27-1.09,2.04Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width: 8px;"/><path d="M16.44,43.78l-2.94,14.72,14.72-2.94c.77-.15,1.49-.54,2.04-1.09l28.13-28.13c1.56-1.56,1.56-4.09,0-5.66l-7.07-7.07c-1.56-1.56-4.09-1.56-5.66,0l-28.13,28.13c-.56.56-.94,1.27-1.09,2.04Z" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/><line x1="38.96" y1="20.32" x2="51.68" y2="33.04" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      edit_fat_default = IconEditFat;
    }
  });

  // lib/edit-l.ts
  var edit_l_exports = {};
  __export(edit_l_exports, {
    IconEditL: () => IconEditL,
    default: () => edit_l_default
  });
  var IconEditL, edit_l_default;
  var init_edit_l = __esm({
    "lib/edit-l.ts"() {
      IconEditL = `<svg id="EditL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M16.44,43.78l-2.94,14.72,14.72-2.94c.77-.15,1.49-.54,2.04-1.09l28.13-28.13c1.56-1.56,1.56-4.09,0-5.66l-7.07-7.07c-1.56-1.56-4.09-1.56-5.66,0l-28.13,28.13c-.56.56-.94,1.27-1.09,2.04Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M16.44,43.78l-2.94,14.72,14.72-2.94c.77-.15,1.49-.54,2.04-1.09l28.13-28.13c1.56-1.56,1.56-4.09,0-5.66l-7.07-7.07c-1.56-1.56-4.09-1.56-5.66,0l-28.13,28.13c-.56.56-.94,1.27-1.09,2.04Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="38.96" y1="20.32" x2="51.68" y2="33.04" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      edit_l_default = IconEditL;
    }
  });

  // lib/edit-line-swirl.ts
  var edit_line_swirl_exports = {};
  __export(edit_line_swirl_exports, {
    IconEditLineSwirl: () => IconEditLineSwirl,
    default: () => edit_line_swirl_default
  });
  var IconEditLineSwirl, edit_line_swirl_default;
  var init_edit_line_swirl = __esm({
    "lib/edit-line-swirl.ts"() {
      IconEditLineSwirl = `<svg id="EditLineSwirl" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,58.5l-.95-6.66c-.73-5.09-1.98-10.14-4.32-14.72-1.16-2.26-1.09-5.07.42-7.35l.51-.76c2.34-3.52,7.18-4.3,10.52-1.71l29.26,22.75c2.9,2.25,7.01,2,9.61-.6h0c2.56-2.56,2.85-6.61.68-9.51l-23.22-30.95" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M16.44,43.78l-2.94,14.72,14.72-2.94c.77-.15,1.49-.54,2.04-1.09l28.13-28.13c1.56-1.56,1.56-4.09,0-5.66l-7.07-7.07c-1.56-1.56-4.09-1.56-5.66,0l-28.13,28.13c-.56.56-.94,1.27-1.09,2.04Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M16.44,43.78l-2.94,14.72,14.72-2.94c.77-.15,1.49-.54,2.04-1.09l28.13-28.13c1.56-1.56,1.56-4.09,0-5.66l-7.07-7.07c-1.56-1.56-4.09-1.56-5.66,0l-28.13,28.13c-.56.56-.94,1.27-1.09,2.04Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="38.96" y1="20.32" x2="51.68" y2="33.04" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      edit_line_swirl_default = IconEditLineSwirl;
    }
  });

  // lib/edit-line.ts
  var edit_line_exports = {};
  __export(edit_line_exports, {
    IconEditLine: () => IconEditLine,
    default: () => edit_line_default
  });
  var IconEditLine, edit_line_default;
  var init_edit_line = __esm({
    "lib/edit-line.ts"() {
      IconEditLine = `<svg id="EditLine" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M16.44,43.78l-2.94,14.72,14.72-2.94c.77-.15,1.49-.54,2.04-1.09l28.13-28.13c1.56-1.56,1.56-4.09,0-5.66l-7.07-7.07c-1.56-1.56-4.09-1.56-5.66,0l-28.13,28.13c-.56.56-.94,1.27-1.09,2.04Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M16.44,43.78l-2.94,14.72,14.72-2.94c.77-.15,1.49-.54,2.04-1.09l28.13-28.13c1.56-1.56,1.56-4.09,0-5.66l-7.07-7.07c-1.56-1.56-4.09-1.56-5.66,0l-28.13,28.13c-.56.56-.94,1.27-1.09,2.04Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="38.96" y1="20.32" x2="51.68" y2="33.04" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="63" x2="58.5" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      edit_line_default = IconEditLine;
    }
  });

  // lib/edit-m.ts
  var edit_m_exports = {};
  __export(edit_m_exports, {
    IconEditM: () => IconEditM,
    default: () => edit_m_default
  });
  var IconEditM, edit_m_default;
  var init_edit_m = __esm({
    "lib/edit-m.ts"() {
      IconEditM = `<svg id="EditM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M20.3,42.48l-2.3,11.52,11.52-2.3c.61-.12,1.16-.42,1.6-.86l22.01-22.01c1.22-1.22,1.22-3.2,0-4.43l-5.53-5.53c-1.22-1.22-3.2-1.22-4.43,0l-22.01,22.01c-.44.44-.73.99-.86,1.6Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M20.3,42.48l-2.3,11.52,11.52-2.3c.61-.12,1.16-.42,1.6-.86l22.01-22.01c1.22-1.22,1.22-3.2,0-4.43l-5.53-5.53c-1.22-1.22-3.2-1.22-4.43,0l-22.01,22.01c-.44.44-.73.99-.86,1.6Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="37.92" y1="24.12" x2="47.88" y2="34.08" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      edit_m_default = IconEditM;
    }
  });

  // lib/edit-s.ts
  var edit_s_exports = {};
  __export(edit_s_exports, {
    IconEditS: () => IconEditS,
    default: () => edit_s_default
  });
  var IconEditS, edit_s_default;
  var init_edit_s = __esm({
    "lib/edit-s.ts"() {
      IconEditS = `<svg id="EditS" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M23.97,37.64l-1.47,7.36,7.36-1.47c.39-.08.74-.27,1.02-.55l14.07-14.07c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-14.07,14.07c-.28.28-.47.63-.55,1.02Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M23.97,37.64l-1.47,7.36,7.36-1.47c.39-.08.74-.27,1.02-.55l14.07-14.07c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-14.07,14.07c-.28.28-.47.63-.55,1.02Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="35.23" y1="25.91" x2="41.59" y2="32.27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      edit_s_default = IconEditS;
    }
  });

  // lib/exclamation-mark-fat.ts
  var exclamation_mark_fat_exports = {};
  __export(exclamation_mark_fat_exports, {
    IconExclamationMarkFat: () => IconExclamationMarkFat,
    default: () => exclamation_mark_fat_default
  });
  var IconExclamationMarkFat, exclamation_mark_fat_default;
  var init_exclamation_mark_fat = __esm({
    "lib/exclamation-mark-fat.ts"() {
      IconExclamationMarkFat = `<svg id="ExclamationMarkFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="13.5" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/><line x1="36" y1="58.5" x2="36" y2="58.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      exclamation_mark_fat_default = IconExclamationMarkFat;
    }
  });

  // lib/exclamation-mark-l.ts
  var exclamation_mark_l_exports = {};
  __export(exclamation_mark_l_exports, {
    IconExclamationMarkL: () => IconExclamationMarkL,
    default: () => exclamation_mark_l_default
  });
  var IconExclamationMarkL, exclamation_mark_l_default;
  var init_exclamation_mark_l = __esm({
    "lib/exclamation-mark-l.ts"() {
      IconExclamationMarkL = `<svg id="ExclamationMarkL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="13.5" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="36" y2="58.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      exclamation_mark_l_default = IconExclamationMarkL;
    }
  });

  // lib/exclamation-mark-m.ts
  var exclamation_mark_m_exports = {};
  __export(exclamation_mark_m_exports, {
    IconExclamationMarkM: () => IconExclamationMarkM,
    default: () => exclamation_mark_m_default
  });
  var IconExclamationMarkM, exclamation_mark_m_default;
  var init_exclamation_mark_m = __esm({
    "lib/exclamation-mark-m.ts"() {
      IconExclamationMarkM = `<svg id="ExclamationMarkM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="18" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="36" y2="54" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      exclamation_mark_m_default = IconExclamationMarkM;
    }
  });

  // lib/exclamation-mark-s.ts
  var exclamation_mark_s_exports = {};
  __export(exclamation_mark_s_exports, {
    IconExclamationMarkS: () => IconExclamationMarkS,
    default: () => exclamation_mark_s_default
  });
  var IconExclamationMarkS, exclamation_mark_s_default;
  var init_exclamation_mark_s = __esm({
    "lib/exclamation-mark-s.ts"() {
      IconExclamationMarkS = `<svg id="ExclamationMarkS" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="22.5" x2="36" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="49.5" x2="36" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      exclamation_mark_s_default = IconExclamationMarkS;
    }
  });

  // lib/female-simplified.ts
  var female_simplified_exports = {};
  __export(female_simplified_exports, {
    IconFemaleSimplified: () => IconFemaleSimplified,
    default: () => female_simplified_default
  });
  var IconFemaleSimplified, female_simplified_default;
  var init_female_simplified = __esm({
    "lib/female-simplified.ts"() {
      IconFemaleSimplified = `<svg id="FemaleSimplified" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M45.26,50.08c4.61-10.09,4.3-18-9-18s-14.2,8.21-9,18c6.66,12.55,12.38,12.3,18,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><circle cx="36.26" cy="23.08" r="9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M45.26,50.08c4.61-10.09,4.3-18-9-18s-14.2,8.21-9,18c6.66,12.55,12.38,12.3,18,0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36.26" cy="23.08" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      female_simplified_default = IconFemaleSimplified;
    }
  });

  // lib/file-add267.ts
  var file_add267_exports = {};
  __export(file_add267_exports, {
    IconFileAdd267: () => IconFileAdd267,
    default: () => file_add267_default
  });
  var IconFileAdd267, file_add267_default;
  var init_file_add267 = __esm({
    "lib/file-add267.ts"() {
      IconFileAdd267 = `<svg id="FileAdd267" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="40.5" y1="54" x2="58.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="45" x2="49.5" y2="63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,45v-18l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_add267_default = IconFileAdd267;
    }
  });

  // lib/file-add269.ts
  var file_add269_exports = {};
  __export(file_add269_exports, {
    IconFileAdd269: () => IconFileAdd269,
    default: () => file_add269_default
  });
  var IconFileAdd269, file_add269_default;
  var init_file_add269 = __esm({
    "lib/file-add269.ts"() {
      IconFileAdd269 = `<svg id="FileAdd269" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="45" y1="49.5" x2="57.73" y2="62.23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="57.73" y1="49.5" x2="45" y2="62.23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,45v-18l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_add269_default = IconFileAdd269;
    }
  });

  // lib/file-add.ts
  var file_add_exports = {};
  __export(file_add_exports, {
    IconFileAdd: () => IconFileAdd,
    default: () => file_add_default
  });
  var IconFileAdd, file_add_default;
  var init_file_add = __esm({
    "lib/file-add.ts"() {
      IconFileAdd = `<svg id="FileAdd" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="27" y1="45" x2="45" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_add_default = IconFileAdd;
    }
  });

  // lib/file-archive.ts
  var file_archive_exports = {};
  __export(file_archive_exports, {
    IconFileArchive: () => IconFileArchive,
    default: () => file_archive_default
  });
  var IconFileArchive, file_archive_default;
  var init_file_archive = __esm({
    "lib/file-archive.ts"() {
      IconFileArchive = `<svg id="FileArchive" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="13.5" width="54" height="13.5" rx="1" ry="1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M13.5,27v30.5c0,.55.45,1,1,1h43c.55,0,1-.45,1-1v-30.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="13.5" width="54" height="13.5" rx="1" ry="1" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,27v30.5c0,.55.45,1,1,1h43c.55,0,1-.45,1-1v-30.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="36" x2="45" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_archive_default = IconFileArchive;
    }
  });

  // lib/file-arrow-up.ts
  var file_arrow_up_exports = {};
  __export(file_arrow_up_exports, {
    IconFileArrowUp: () => IconFileArrowUp,
    default: () => file_arrow_up_default
  });
  var IconFileArrowUp, file_arrow_up_default;
  var init_file_arrow_up = __esm({
    "lib/file-arrow-up.ts"() {
      IconFileArrowUp = `<svg id="FileArrowUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 36 49.5 36 49.5 45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 36 36 49.5 31.5 45 22.5 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_arrow_up_default = IconFileArrowUp;
    }
  });

  // lib/file-binary.ts
  var file_binary_exports = {};
  __export(file_binary_exports, {
    IconFileBinary: () => IconFileBinary,
    default: () => file_binary_default
  });
  var IconFileBinary, file_binary_default;
  var init_file_binary = __esm({
    "lib/file-binary.ts"() {
      IconFileBinary = `<svg id="FileBinary" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 54 45 36 40.5 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="54" x2="49.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="22.5" y="36" width="9" height="18" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_binary_default = IconFileBinary;
    }
  });

  // lib/file-broken-heart2.ts
  var file_broken_heart2_exports = {};
  __export(file_broken_heart2_exports, {
    IconFileBrokenHeart2: () => IconFileBrokenHeart2,
    default: () => file_broken_heart2_default
  });
  var IconFileBrokenHeart2, file_broken_heart2_default;
  var init_file_broken_heart2 = __esm({
    "lib/file-broken-heart2.ts"() {
      IconFileBrokenHeart2 = `<svg id="FileBrokenHeart2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,45v-18l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="48 48 50.25 54.75 45.75 57 48 66" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M48,66c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_broken_heart2_default = IconFileBrokenHeart2;
    }
  });

  // lib/file-broken-heart.ts
  var file_broken_heart_exports = {};
  __export(file_broken_heart_exports, {
    IconFileBrokenHeart: () => IconFileBrokenHeart,
    default: () => file_broken_heart_default
  });
  var IconFileBrokenHeart, file_broken_heart_default;
  var init_file_broken_heart = __esm({
    "lib/file-broken-heart.ts"() {
      IconFileBrokenHeart = `<svg id="FileBrokenHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 38 38.25 44.75 33.75 47 36 56" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,56c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_broken_heart_default = IconFileBrokenHeart;
    }
  });

  // lib/file-check2.ts
  var file_check2_exports = {};
  __export(file_check2_exports, {
    IconFileCheck2: () => IconFileCheck2,
    default: () => file_check2_default
  });
  var IconFileCheck2, file_check2_default;
  var init_file_check2 = __esm({
    "lib/file-check2.ts"() {
      IconFileCheck2 = `<svg id="FileCheck2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-13.5l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 50.14 48.21 63 58.5 45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_check2_default = IconFileCheck2;
    }
  });

  // lib/file-check.ts
  var file_check_exports = {};
  __export(file_check_exports, {
    IconFileCheck: () => IconFileCheck,
    default: () => file_check_default
  });
  var IconFileCheck, file_check_default;
  var init_file_check = __esm({
    "lib/file-check.ts"() {
      IconFileCheck = `<svg id="FileCheck" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 41.14 34.71 54 45 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_check_default = IconFileCheck;
    }
  });

  // lib/file-cloud.ts
  var file_cloud_exports = {};
  __export(file_cloud_exports, {
    IconFileCloud: () => IconFileCloud,
    default: () => file_cloud_default
  });
  var IconFileCloud, file_cloud_default;
  var init_file_cloud = __esm({
    "lib/file-cloud.ts"() {
      IconFileCloud = `<svg id="FileCloud" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45,42.75c-.1,0-.19,0-.29.01-1-3.89-4.51-6.76-8.71-6.76s-7.71,2.88-8.71,6.76c-.1,0-.19-.01-.29-.01-2.49,0-4.5,2.01-4.5,4.5s2.01,4.5,4.5,4.5c.87,0,1.68-.25,2.37-.68,1.65,1.8,4,2.93,6.63,2.93s4.99-1.13,6.63-2.93c.69.43,1.5.68,2.37.68,2.49,0,4.5-2.01,4.5-4.5s-2.01-4.5-4.5-4.5Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_cloud_default = IconFileCloud;
    }
  });

  // lib/file-code.ts
  var file_code_exports = {};
  __export(file_code_exports, {
    IconFileCode: () => IconFileCode,
    default: () => file_code_default
  });
  var IconFileCode, file_code_default;
  var init_file_code = __esm({
    "lib/file-code.ts"() {
      IconFileCode = `<svg id="FileCode" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="31.5 36 22.5 45 31.5 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 54 49.5 45 40.5 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_code_default = IconFileCode;
    }
  });

  // lib/file-columns.ts
  var file_columns_exports = {};
  __export(file_columns_exports, {
    IconFileColumns: () => IconFileColumns,
    default: () => file_columns_default
  });
  var IconFileColumns, file_columns_default;
  var init_file_columns = __esm({
    "lib/file-columns.ts"() {
      IconFileColumns = `<svg id="FileColumns" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="22.5" y="36" width="27" height="18" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="45" x2="49.5" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_columns_default = IconFileColumns;
    }
  });

  // lib/file-edit2.ts
  var file_edit2_exports = {};
  __export(file_edit2_exports, {
    IconFileEdit2: () => IconFileEdit2,
    default: () => file_edit2_default
  });
  var IconFileEdit2, file_edit2_default;
  var init_file_edit2 = __esm({
    "lib/file-edit2.ts"() {
      IconFileEdit2 = `<svg id="FileEdit2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,45v-18l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M51.14,61.53l7.36,1.47-1.47-7.36c-.08-.39-.27-.74-.55-1.02l-14.07-14.07c-.78-.78-2.05-.78-2.83,0l-3.54,3.54c-.78.78-.78,2.05,0,2.83l14.07,14.07c.28.28.63.47,1.02.55Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="39.41" y1="50.27" x2="45.77" y2="43.91" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      file_edit2_default = IconFileEdit2;
    }
  });

  // lib/file-edit.ts
  var file_edit_exports = {};
  __export(file_edit_exports, {
    IconFileEdit: () => IconFileEdit,
    default: () => file_edit_default
  });
  var IconFileEdit, file_edit_default;
  var init_file_edit = __esm({
    "lib/file-edit.ts"() {
      IconFileEdit = `<svg id="FileEdit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M23.97,46.64l-1.47,7.36,7.36-1.47c.39-.08.74-.27,1.02-.55l14.07-14.07c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-14.07,14.07c-.28.28-.47.63-.55,1.02Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="35.23" y1="34.91" x2="41.59" y2="41.27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_edit_default = IconFileEdit;
    }
  });

  // lib/file-exclamation-mark2.ts
  var file_exclamation_mark2_exports = {};
  __export(file_exclamation_mark2_exports, {
    IconFileExclamationMark2: () => IconFileExclamationMark2,
    default: () => file_exclamation_mark2_default
  });
  var IconFileExclamationMark2, file_exclamation_mark2_default;
  var init_file_exclamation_mark2 = __esm({
    "lib/file-exclamation-mark2.ts"() {
      IconFileExclamationMark2 = `<svg id="FileExclamationMark2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-13.5l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="49.5" y1="40.5" x2="49.5" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="63" x2="49.5" y2="63" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      file_exclamation_mark2_default = IconFileExclamationMark2;
    }
  });

  // lib/file-exclamation-mark.ts
  var file_exclamation_mark_exports = {};
  __export(file_exclamation_mark_exports, {
    IconFileExclamationMark: () => IconFileExclamationMark,
    default: () => file_exclamation_mark_default
  });
  var IconFileExclamationMark, file_exclamation_mark_default;
  var init_file_exclamation_mark = __esm({
    "lib/file-exclamation-mark.ts"() {
      IconFileExclamationMark = `<svg id="FileExclamationMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="31.5" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="36" y2="54" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      file_exclamation_mark_default = IconFileExclamationMark;
    }
  });

  // lib/file-graphs.ts
  var file_graphs_exports = {};
  __export(file_graphs_exports, {
    IconFileGraphs: () => IconFileGraphs,
    default: () => file_graphs_default
  });
  var IconFileGraphs, file_graphs_default;
  var init_file_graphs = __esm({
    "lib/file-graphs.ts"() {
      IconFileGraphs = `<svg id="FileGraphs" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="31.5" x2="27" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="40.5" x2="36" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="49.5" x2="45" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_graphs_default = IconFileGraphs;
    }
  });

  // lib/file-heart2.ts
  var file_heart2_exports = {};
  __export(file_heart2_exports, {
    IconFileHeart2: () => IconFileHeart2,
    default: () => file_heart2_default
  });
  var IconFileHeart2, file_heart2_default;
  var init_file_heart2 = __esm({
    "lib/file-heart2.ts"() {
      IconFileHeart2 = `<svg id="FileHeart2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,45v-18l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,67.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_heart2_default = IconFileHeart2;
    }
  });

  // lib/file-heart.ts
  var file_heart_exports = {};
  __export(file_heart_exports, {
    IconFileHeart: () => IconFileHeart,
    default: () => file_heart_default
  });
  var IconFileHeart, file_heart_default;
  var init_file_heart = __esm({
    "lib/file-heart.ts"() {
      IconFileHeart = `<svg id="FileHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,56c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_heart_default = IconFileHeart;
    }
  });

  // lib/file-info2.ts
  var file_info2_exports = {};
  __export(file_info2_exports, {
    IconFileInfo2: () => IconFileInfo2,
    default: () => file_info2_default
  });
  var IconFileInfo2, file_info2_default;
  var init_file_info2 = __esm({
    "lib/file-info2.ts"() {
      IconFileInfo2 = `<svg id="FileInfo2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-13.5l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="49.5 67.5 49.5 54 45 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="45" x2="49.5" y2="45" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      file_info2_default = IconFileInfo2;
    }
  });

  // lib/file-info.ts
  var file_info_exports = {};
  __export(file_info_exports, {
    IconFileInfo: () => IconFileInfo,
    default: () => file_info_default
  });
  var IconFileInfo, file_info_default;
  var init_file_info = __esm({
    "lib/file-info.ts"() {
      IconFileInfo = `<svg id="FileInfo" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="36 54 36 40.5 31.5 40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      file_info_default = IconFileInfo;
    }
  });

  // lib/file-invisible2.ts
  var file_invisible2_exports = {};
  __export(file_invisible2_exports, {
    IconFileInvisible2: () => IconFileInvisible2,
    default: () => file_invisible2_default
  });
  var IconFileInvisible2, file_invisible2_default;
  var init_file_invisible2 = __esm({
    "lib/file-invisible2.ts"() {
      IconFileInvisible2 = `<svg id="FileInvisible2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,45v-18l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M67.5,58.5s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="67.5" y1="49.5" x2="40.5" y2="67.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_invisible2_default = IconFileInvisible2;
    }
  });

  // lib/file-invisible.ts
  var file_invisible_exports = {};
  __export(file_invisible_exports, {
    IconFileInvisible: () => IconFileInvisible,
    default: () => file_invisible_default
  });
  var IconFileInvisible, file_invisible_default;
  var init_file_invisible = __esm({
    "lib/file-invisible.ts"() {
      IconFileInvisible = `<svg id="FileInvisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,45s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="36" x2="22.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_invisible_default = IconFileInvisible;
    }
  });

  // lib/file-multiply.ts
  var file_multiply_exports = {};
  __export(file_multiply_exports, {
    IconFileMultiply: () => IconFileMultiply,
    default: () => file_multiply_default
  });
  var IconFileMultiply, file_multiply_default;
  var init_file_multiply = __esm({
    "lib/file-multiply.ts"() {
      IconFileMultiply = `<svg id="FileMultiply" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="29.64" y1="38.64" x2="42.36" y2="51.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.36" y1="38.64" x2="29.64" y2="51.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_multiply_default = IconFileMultiply;
    }
  });

  // lib/file-question-mark2.ts
  var file_question_mark2_exports = {};
  __export(file_question_mark2_exports, {
    IconFileQuestionMark2: () => IconFileQuestionMark2,
    default: () => file_question_mark2_default
  });
  var IconFileQuestionMark2, file_question_mark2_default;
  var init_file_question_mark2 = __esm({
    "lib/file-question-mark2.ts"() {
      IconFileQuestionMark2 = `<svg id="FileQuestionMark2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-13.5l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="48" y1="67.5" x2="48" y2="67.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M42,51c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_question_mark2_default = IconFileQuestionMark2;
    }
  });

  // lib/file-question-mark.ts
  var file_question_mark_exports = {};
  __export(file_question_mark_exports, {
    IconFileQuestionMark: () => IconFileQuestionMark,
    default: () => file_question_mark_default
  });
  var IconFileQuestionMark, file_question_mark_default;
  var init_file_question_mark = __esm({
    "lib/file-question-mark.ts"() {
      IconFileQuestionMark = `<svg id="FileQuestionMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="36" y2="54" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30,37.5c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_question_mark_default = IconFileQuestionMark;
    }
  });

  // lib/file-search2.ts
  var file_search2_exports = {};
  __export(file_search2_exports, {
    IconFileSearch2: () => IconFileSearch2,
    default: () => file_search2_default
  });
  var IconFileSearch2, file_search2_default;
  var init_file_search2 = __esm({
    "lib/file-search2.ts"() {
      IconFileSearch2 = `<svg id="FileSearch2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-13.5l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="67.5" x2="55.86" y2="60.36" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="54" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_search2_default = IconFileSearch2;
    }
  });

  // lib/file-search.ts
  var file_search_exports = {};
  __export(file_search_exports, {
    IconFileSearch: () => IconFileSearch,
    default: () => file_search_default
  });
  var IconFileSearch, file_search_default;
  var init_file_search = __esm({
    "lib/file-search.ts"() {
      IconFileSearch = `<svg id="FileSearch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="57.5" x2="42.36" y2="50.36" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="44" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_search_default = IconFileSearch;
    }
  });

  // lib/file-star2.ts
  var file_star2_exports = {};
  __export(file_star2_exports, {
    IconFileStar2: () => IconFileStar2,
    default: () => file_star2_default
  });
  var IconFileStar2, file_star2_default;
  var init_file_star2 = __esm({
    "lib/file-star2.ts"() {
      IconFileStar2 = `<svg id="FileStar2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,45v-18l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M50.22,61.43l8.18,5.85c.39.28.91-.1.76-.56l-3.18-9.55,8.09-5.98c.39-.28.18-.9-.3-.89l-10.06.08-3.18-9.55c-.15-.45-.8-.45-.94,0l-3.04,9.59-10.06.08c-.48,0-.67.62-.28.9l8.18,5.85-3.04,9.59c-.14.46.38.83.76.55l8.09-5.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_star2_default = IconFileStar2;
    }
  });

  // lib/file-star.ts
  var file_star_exports = {};
  __export(file_star_exports, {
    IconFileStar: () => IconFileStar,
    default: () => file_star_default
  });
  var IconFileStar, file_star_default;
  var init_file_star = __esm({
    "lib/file-star.ts"() {
      IconFileStar = `<svg id="FileStar" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,47.93l8.18,5.85c.39.28.91-.1.76-.56l-3.18-9.55,8.09-5.98c.39-.28.18-.9-.3-.89l-10.06.08-3.18-9.55c-.15-.45-.8-.45-.94,0l-3.04,9.59-10.06.08c-.48,0-.67.62-.28.9l8.18,5.85-3.04,9.59c-.14.46.38.83.76.55l8.09-5.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_star_default = IconFileStar;
    }
  });

  // lib/file-subtract2.ts
  var file_subtract2_exports = {};
  __export(file_subtract2_exports, {
    IconFileSubtract2: () => IconFileSubtract2,
    default: () => file_subtract2_default
  });
  var IconFileSubtract2, file_subtract2_default;
  var init_file_subtract2 = __esm({
    "lib/file-subtract2.ts"() {
      IconFileSubtract2 = `<svg id="FileSubtract2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="40.5" y1="54" x2="58.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,45v-18l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_subtract2_default = IconFileSubtract2;
    }
  });

  // lib/file-subtract.ts
  var file_subtract_exports = {};
  __export(file_subtract_exports, {
    IconFileSubtract: () => IconFileSubtract,
    default: () => file_subtract_default
  });
  var IconFileSubtract, file_subtract_default;
  var init_file_subtract = __esm({
    "lib/file-subtract.ts"() {
      IconFileSubtract = `<svg id="FileSubtract" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="27" y1="45" x2="45" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_subtract_default = IconFileSubtract;
    }
  });

  // lib/file-text.ts
  var file_text_exports = {};
  __export(file_text_exports, {
    IconFileText: () => IconFileText,
    default: () => file_text_default
  });
  var IconFileText, file_text_default;
  var init_file_text = __esm({
    "lib/file-text.ts"() {
      IconFileText = `<svg id="FileText" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="36" x2="49.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="45" x2="49.5" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="54" x2="49.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_text_default = IconFileText;
    }
  });

  // lib/file-tray-stack.ts
  var file_tray_stack_exports = {};
  __export(file_tray_stack_exports, {
    IconFileTrayStack: () => IconFileTrayStack,
    default: () => file_tray_stack_default
  });
  var IconFileTrayStack, file_tray_stack_default;
  var init_file_tray_stack = __esm({
    "lib/file-tray-stack.ts"() {
      IconFileTrayStack = `<svg id="FileTrayStack" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M9,27v34c0,1.1.9,2,2,2h50c1.1,0,2-.9,2-2V27l-8.41-12.61c-.37-.56-1-.89-1.66-.89H19.07c-.67,0-1.29.33-1.66.89l-8.41,12.61Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M9,27h20.25c0,3.73,3.02,6.75,6.75,6.75s6.75-3.02,6.75-6.75h20.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,45h20.25c0,3.73,3.02,6.75,6.75,6.75s6.75-3.02,6.75-6.75h20.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,27v34c0,1.1.9,2,2,2h50c1.1,0,2-.9,2-2V27l-8.41-12.61c-.37-.56-1-.89-1.66-.89H19.07c-.67,0-1.29.33-1.66.89l-8.41,12.61Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_tray_stack_default = IconFileTrayStack;
    }
  });

  // lib/file-tray.ts
  var file_tray_exports = {};
  __export(file_tray_exports, {
    IconFileTray: () => IconFileTray,
    default: () => file_tray_default
  });
  var IconFileTray, file_tray_default;
  var init_file_tray = __esm({
    "lib/file-tray.ts"() {
      IconFileTray = `<svg id="FileTray" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M9,36v16c0,1.1.9,2,2,2h50c1.1,0,2-.9,2-2v-16l-8.41-12.61c-.37-.56-1-.89-1.66-.89H19.07c-.67,0-1.29.33-1.66.89l-8.41,12.61Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M9,36v16c0,1.1.9,2,2,2h50c1.1,0,2-.9,2-2v-16l-8.41-12.61c-.37-.56-1-.89-1.66-.89H19.07c-.67,0-1.29.33-1.66.89l-8.41,12.61Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,36h20.25c0,3.73,3.02,6.75,6.75,6.75s6.75-3.02,6.75-6.75h20.25" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_tray_default = IconFileTray;
    }
  });

  // lib/file-visible2.ts
  var file_visible2_exports = {};
  __export(file_visible2_exports, {
    IconFileVisible2: () => IconFileVisible2,
    default: () => file_visible2_default
  });
  var IconFileVisible2, file_visible2_default;
  var init_file_visible2 = __esm({
    "lib/file-visible2.ts"() {
      IconFileVisible2 = `<svg id="FileVisible2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,45v-18l-18-18h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M67.5,58.5s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="54" cy="58.5" r="4.5" style="stroke-width: 0px;"/></svg>`;
      file_visible2_default = IconFileVisible2;
    }
  });

  // lib/file-visible.ts
  var file_visible_exports = {};
  __export(file_visible_exports, {
    IconFileVisible: () => IconFileVisible,
    default: () => file_visible_default
  });
  var IconFileVisible, file_visible_default;
  var init_file_visible = __esm({
    "lib/file-visible.ts"() {
      IconFileVisible = `<svg id="FileVisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,45s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="45" r="4.5" style="stroke-width: 0px;"/></svg>`;
      file_visible_default = IconFileVisible;
    }
  });

  // lib/file.ts
  var file_exports = {};
  __export(file_exports, {
    IconFile: () => IconFile,
    default: () => file_default
  });
  var IconFile, file_default;
  var init_file = __esm({
    "lib/file.ts"() {
      IconFile = `<svg id="File" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,9v14c0,2.21,1.79,4,4,4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,9h-23c-2.21,0-4,1.79-4,4v46c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V27l-18-18Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      file_default = IconFile;
    }
  });

  // lib/folder-add2.ts
  var folder_add2_exports = {};
  __export(folder_add2_exports, {
    IconFolderAdd2: () => IconFolderAdd2,
    default: () => folder_add2_default
  });
  var IconFolderAdd2, folder_add2_default;
  var init_folder_add2 = __esm({
    "lib/folder-add2.ts"() {
      IconFolderAdd2 = `<svg id="FolderAdd2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="40.5" y1="49.5" x2="58.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="40.5" x2="49.5" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-14c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_add2_default = IconFolderAdd2;
    }
  });

  // lib/folder-add.ts
  var folder_add_exports = {};
  __export(folder_add_exports, {
    IconFolderAdd: () => IconFolderAdd,
    default: () => folder_add_default
  });
  var IconFolderAdd, folder_add_default;
  var init_folder_add = __esm({
    "lib/folder-add.ts"() {
      IconFolderAdd = `<svg id="FolderAdd" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="27" y1="40.5" x2="45" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_add_default = IconFolderAdd;
    }
  });

  // lib/folder-broken-heart2.ts
  var folder_broken_heart2_exports = {};
  __export(folder_broken_heart2_exports, {
    IconFolderBrokenHeart2: () => IconFolderBrokenHeart2,
    default: () => folder_broken_heart2_default
  });
  var IconFolderBrokenHeart2, folder_broken_heart2_default;
  var init_folder_broken_heart2 = __esm({
    "lib/folder-broken-heart2.ts"() {
      IconFolderBrokenHeart2 = `<svg id="FolderBrokenHeart2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,40.5v-14c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49 45 51.25 51.75 46.75 54 49 63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49,63c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_broken_heart2_default = IconFolderBrokenHeart2;
    }
  });

  // lib/folder-broken-heart.ts
  var folder_broken_heart_exports = {};
  __export(folder_broken_heart_exports, {
    IconFolderBrokenHeart: () => IconFolderBrokenHeart,
    default: () => folder_broken_heart_default
  });
  var IconFolderBrokenHeart, folder_broken_heart_default;
  var init_folder_broken_heart = __esm({
    "lib/folder-broken-heart.ts"() {
      IconFolderBrokenHeart = `<svg id="FolderBrokenHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 35 38.25 41.75 33.75 44 36 53" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,53c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_broken_heart_default = IconFolderBrokenHeart;
    }
  });

  // lib/folder-check2.ts
  var folder_check2_exports = {};
  __export(folder_check2_exports, {
    IconFolderCheck2: () => IconFolderCheck2,
    default: () => folder_check2_default
  });
  var IconFolderCheck2, folder_check2_default;
  var init_folder_check2 = __esm({
    "lib/folder-check2.ts"() {
      IconFolderCheck2 = `<svg id="FolderCheck2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,36v-9.5c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 45.64 48.21 58.5 58.5 40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_check2_default = IconFolderCheck2;
    }
  });

  // lib/folder-check.ts
  var folder_check_exports = {};
  __export(folder_check_exports, {
    IconFolderCheck: () => IconFolderCheck,
    default: () => folder_check_default
  });
  var IconFolderCheck, folder_check_default;
  var init_folder_check = __esm({
    "lib/folder-check.ts"() {
      IconFolderCheck = `<svg id="FolderCheck" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 36.64 34.71 49.5 45 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_check_default = IconFolderCheck;
    }
  });

  // lib/folder-edit2.ts
  var folder_edit2_exports = {};
  __export(folder_edit2_exports, {
    IconFolderEdit2: () => IconFolderEdit2,
    default: () => folder_edit2_default
  });
  var IconFolderEdit2, folder_edit2_default;
  var init_folder_edit2 = __esm({
    "lib/folder-edit2.ts"() {
      IconFolderEdit2 = `<svg id="FolderEdit2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-14c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M51.14,57.03l7.36,1.47-1.47-7.36c-.08-.39-.27-.74-.55-1.02l-14.07-14.07c-.78-.78-2.05-.78-2.83,0l-3.54,3.54c-.78.78-.78,2.05,0,2.83l14.07,14.07c.28.28.63.47,1.02.55Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="39.41" y1="45.77" x2="45.77" y2="39.41" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      folder_edit2_default = IconFolderEdit2;
    }
  });

  // lib/folder-edit.ts
  var folder_edit_exports = {};
  __export(folder_edit_exports, {
    IconFolderEdit: () => IconFolderEdit,
    default: () => folder_edit_default
  });
  var IconFolderEdit, folder_edit_default;
  var init_folder_edit = __esm({
    "lib/folder-edit.ts"() {
      IconFolderEdit = `<svg id="FolderEdit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M23.44,42.68l-1.47,7.36,7.36-1.47c.39-.08.74-.27,1.02-.55l14.07-14.07c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-14.07,14.07c-.28.28-.47.63-.55,1.02Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="34.69" y1="30.94" x2="41.06" y2="37.31" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      folder_edit_default = IconFolderEdit;
    }
  });

  // lib/folder-exclamation-mark2.ts
  var folder_exclamation_mark2_exports = {};
  __export(folder_exclamation_mark2_exports, {
    IconFolderExclamationMark2: () => IconFolderExclamationMark2,
    default: () => folder_exclamation_mark2_default
  });
  var IconFolderExclamationMark2, folder_exclamation_mark2_default;
  var init_folder_exclamation_mark2 = __esm({
    "lib/folder-exclamation-mark2.ts"() {
      IconFolderExclamationMark2 = `<svg id="FolderExclamationMark2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,36v-9.5c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="49.5" y1="40.5" x2="49.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="58.5" x2="49.5" y2="58.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      folder_exclamation_mark2_default = IconFolderExclamationMark2;
    }
  });

  // lib/folder-exclamation-mark.ts
  var folder_exclamation_mark_exports = {};
  __export(folder_exclamation_mark_exports, {
    IconFolderExclamationMark: () => IconFolderExclamationMark,
    default: () => folder_exclamation_mark_default
  });
  var IconFolderExclamationMark, folder_exclamation_mark_default;
  var init_folder_exclamation_mark = __esm({
    "lib/folder-exclamation-mark.ts"() {
      IconFolderExclamationMark = `<svg id="FolderExclamationMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="31.5" x2="36" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="49.5" x2="36" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      folder_exclamation_mark_default = IconFolderExclamationMark;
    }
  });

  // lib/folder-heart2.ts
  var folder_heart2_exports = {};
  __export(folder_heart2_exports, {
    IconFolderHeart2: () => IconFolderHeart2,
    default: () => folder_heart2_default
  });
  var IconFolderHeart2, folder_heart2_default;
  var init_folder_heart2 = __esm({
    "lib/folder-heart2.ts"() {
      IconFolderHeart2 = `<svg id="FolderHeart2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,40.5v-14c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,63c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_heart2_default = IconFolderHeart2;
    }
  });

  // lib/folder-heart.ts
  var folder_heart_exports = {};
  __export(folder_heart_exports, {
    IconFolderHeart: () => IconFolderHeart,
    default: () => folder_heart_default
  });
  var IconFolderHeart, folder_heart_default;
  var init_folder_heart = __esm({
    "lib/folder-heart.ts"() {
      IconFolderHeart = `<svg id="FolderHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,53c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_heart_default = IconFolderHeart;
    }
  });

  // lib/folder-info2.ts
  var folder_info2_exports = {};
  __export(folder_info2_exports, {
    IconFolderInfo2: () => IconFolderInfo2,
    default: () => folder_info2_default
  });
  var IconFolderInfo2, folder_info2_default;
  var init_folder_info2 = __esm({
    "lib/folder-info2.ts"() {
      IconFolderInfo2 = `<svg id="FolderInfo2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,36v-9.5c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="49.5 63 49.5 49.5 45 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="40.5" x2="49.5" y2="40.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      folder_info2_default = IconFolderInfo2;
    }
  });

  // lib/folder-info.ts
  var folder_info_exports = {};
  __export(folder_info_exports, {
    IconFolderInfo: () => IconFolderInfo,
    default: () => folder_info_default
  });
  var IconFolderInfo, folder_info_default;
  var init_folder_info = __esm({
    "lib/folder-info.ts"() {
      IconFolderInfo = `<svg id="FolderInfo" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="36 54 36 40.5 31.5 40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      folder_info_default = IconFolderInfo;
    }
  });

  // lib/folder-invisible2.ts
  var folder_invisible2_exports = {};
  __export(folder_invisible2_exports, {
    IconFolderInvisible2: () => IconFolderInvisible2,
    default: () => folder_invisible2_default
  });
  var IconFolderInvisible2, folder_invisible2_default;
  var init_folder_invisible2 = __esm({
    "lib/folder-invisible2.ts"() {
      IconFolderInvisible2 = `<svg id="FolderInvisible2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-14c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M67.5,54s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="67.5" y1="45" x2="40.5" y2="63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_invisible2_default = IconFolderInvisible2;
    }
  });

  // lib/folder-invisible.ts
  var folder_invisible_exports = {};
  __export(folder_invisible_exports, {
    IconFolderInvisible: () => IconFolderInvisible,
    default: () => folder_invisible_default
  });
  var IconFolderInvisible, folder_invisible_default;
  var init_folder_invisible = __esm({
    "lib/folder-invisible.ts"() {
      IconFolderInvisible = `<svg id="FolderInvisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,40.5s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="31.5" x2="22.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_invisible_default = IconFolderInvisible;
    }
  });

  // lib/folder-multiply2.ts
  var folder_multiply2_exports = {};
  __export(folder_multiply2_exports, {
    IconFolderMultiply2: () => IconFolderMultiply2,
    default: () => folder_multiply2_default
  });
  var IconFolderMultiply2, folder_multiply2_default;
  var init_folder_multiply2 = __esm({
    "lib/folder-multiply2.ts"() {
      IconFolderMultiply2 = `<svg id="FolderMultiply2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="45" y1="45" x2="57.73" y2="57.73" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="57.73" y1="45" x2="45" y2="57.73" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-14c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_multiply2_default = IconFolderMultiply2;
    }
  });

  // lib/folder-multiply.ts
  var folder_multiply_exports = {};
  __export(folder_multiply_exports, {
    IconFolderMultiply: () => IconFolderMultiply,
    default: () => folder_multiply_default
  });
  var IconFolderMultiply, folder_multiply_default;
  var init_folder_multiply = __esm({
    "lib/folder-multiply.ts"() {
      IconFolderMultiply = `<svg id="FolderMultiply" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="29.64" y1="36" x2="42.36" y2="48.73" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.36" y1="36" x2="29.64" y2="48.73" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_multiply_default = IconFolderMultiply;
    }
  });

  // lib/folder-question-mark2.ts
  var folder_question_mark2_exports = {};
  __export(folder_question_mark2_exports, {
    IconFolderQuestionMark2: () => IconFolderQuestionMark2,
    default: () => folder_question_mark2_default
  });
  var IconFolderQuestionMark2, folder_question_mark2_default;
  var init_folder_question_mark2 = __esm({
    "lib/folder-question-mark2.ts"() {
      IconFolderQuestionMark2 = `<svg id="FolderQuestionMark2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,36v-9.5c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="50" y1="63" x2="50" y2="63" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M44,46.5c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      folder_question_mark2_default = IconFolderQuestionMark2;
    }
  });

  // lib/folder-question-mark.ts
  var folder_question_mark_exports = {};
  __export(folder_question_mark_exports, {
    IconFolderQuestionMark: () => IconFolderQuestionMark,
    default: () => folder_question_mark_default
  });
  var IconFolderQuestionMark, folder_question_mark_default;
  var init_folder_question_mark = __esm({
    "lib/folder-question-mark.ts"() {
      IconFolderQuestionMark = `<svg id="FolderQuestionMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="52" x2="36" y2="52" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30,35.5c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      folder_question_mark_default = IconFolderQuestionMark;
    }
  });

  // lib/folder-search2.ts
  var folder_search2_exports = {};
  __export(folder_search2_exports, {
    IconFolderSearch2: () => IconFolderSearch2,
    default: () => folder_search2_default
  });
  var IconFolderSearch2, folder_search2_default;
  var init_folder_search2 = __esm({
    "lib/folder-search2.ts"() {
      IconFolderSearch2 = `<svg id="FolderSearch2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,36v-9.5c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="63" x2="55.86" y2="55.86" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="49.5" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_search2_default = IconFolderSearch2;
    }
  });

  // lib/folder-search.ts
  var folder_search_exports = {};
  __export(folder_search_exports, {
    IconFolderSearch: () => IconFolderSearch,
    default: () => folder_search_default
  });
  var IconFolderSearch, folder_search_default;
  var init_folder_search = __esm({
    "lib/folder-search.ts"() {
      IconFolderSearch = `<svg id="FolderSearch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="53" x2="42.36" y2="45.86" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="39.5" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_search_default = IconFolderSearch;
    }
  });

  // lib/folder-star2.ts
  var folder_star2_exports = {};
  __export(folder_star2_exports, {
    IconFolderStar2: () => IconFolderStar2,
    default: () => folder_star2_default
  });
  var IconFolderStar2, folder_star2_default;
  var init_folder_star2 = __esm({
    "lib/folder-star2.ts"() {
      IconFolderStar2 = `<svg id="FolderStar2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,40.5v-14c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M50.22,56.93l8.18,5.85c.39.28.91-.1.76-.56l-3.18-9.55,8.09-5.98c.39-.28.18-.9-.3-.89l-10.06.08-3.18-9.55c-.15-.45-.8-.45-.94,0l-3.04,9.59-10.06.08c-.48,0-.67.62-.28.9l8.18,5.85-3.04,9.59c-.14.46.38.83.76.55l8.09-5.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_star2_default = IconFolderStar2;
    }
  });

  // lib/folder-star.ts
  var folder_star_exports = {};
  __export(folder_star_exports, {
    IconFolderStar: () => IconFolderStar,
    default: () => folder_star_default
  });
  var IconFolderStar, folder_star_default;
  var init_folder_star = __esm({
    "lib/folder-star.ts"() {
      IconFolderStar = `<svg id="FolderStar" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,47.93l8.18,5.85c.39.28.91-.1.76-.56l-3.18-9.55,8.09-5.98c.39-.28.18-.9-.3-.89l-10.06.08-3.18-9.55c-.15-.45-.8-.45-.94,0l-3.04,9.59-10.06.08c-.48,0-.67.62-.28.9l8.18,5.85-3.04,9.59c-.14.46.38.83.76.55l8.09-5.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_star_default = IconFolderStar;
    }
  });

  // lib/folder-subtract2.ts
  var folder_subtract2_exports = {};
  __export(folder_subtract2_exports, {
    IconFolderSubtract2: () => IconFolderSubtract2,
    default: () => folder_subtract2_default
  });
  var IconFolderSubtract2, folder_subtract2_default;
  var init_folder_subtract2 = __esm({
    "lib/folder-subtract2.ts"() {
      IconFolderSubtract2 = `<svg id="FolderSubtract2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="40.5" y1="49.5" x2="58.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-14c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_subtract2_default = IconFolderSubtract2;
    }
  });

  // lib/folder-subtract.ts
  var folder_subtract_exports = {};
  __export(folder_subtract_exports, {
    IconFolderSubtract: () => IconFolderSubtract,
    default: () => folder_subtract_default
  });
  var IconFolderSubtract, folder_subtract_default;
  var init_folder_subtract = __esm({
    "lib/folder-subtract.ts"() {
      IconFolderSubtract = `<svg id="FolderSubtract" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="27" y1="40.5" x2="45" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_subtract_default = IconFolderSubtract;
    }
  });

  // lib/folder-visible2.ts
  var folder_visible2_exports = {};
  __export(folder_visible2_exports, {
    IconFolderVisible2: () => IconFolderVisible2,
    default: () => folder_visible2_default
  });
  var IconFolderVisible2, folder_visible2_default;
  var init_folder_visible2 = __esm({
    "lib/folder-visible2.ts"() {
      IconFolderVisible2 = `<svg id="FolderVisible2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-14c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M67.5,54s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="54" cy="54" r="4.5" style="stroke-width: 0px;"/></svg>`;
      folder_visible2_default = IconFolderVisible2;
    }
  });

  // lib/folder-visible.ts
  var folder_visible_exports = {};
  __export(folder_visible_exports, {
    IconFolderVisible: () => IconFolderVisible,
    default: () => folder_visible_default
  });
  var IconFolderVisible, folder_visible_default;
  var init_folder_visible = __esm({
    "lib/folder-visible.ts"() {
      IconFolderVisible = `<svg id="FolderVisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,40.5s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="40.5" r="4.5" style="stroke-width: 0px;"/></svg>`;
      folder_visible_default = IconFolderVisible;
    }
  });

  // lib/folder.ts
  var folder_exports = {};
  __export(folder_exports, {
    IconFolder: () => IconFolder,
    default: () => folder_default
  });
  var IconFolder, folder_default;
  var init_folder = __esm({
    "lib/folder.ts"() {
      IconFolder = `<svg id="Folder" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="31.5" x2="58.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,58.5h37c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4h-18.5l-3.39-6.79c-.68-1.36-2.06-2.21-3.58-2.21h-11.53c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      folder_default = IconFolder;
    }
  });

  // lib/girl.ts
  var girl_exports = {};
  __export(girl_exports, {
    IconGirl: () => IconGirl,
    default: () => girl_default
  });
  var IconGirl, girl_default;
  var init_girl = __esm({
    "lib/girl.ts"() {
      IconGirl = `<svg id="Girl" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.98,30.16s8.52,2.46,13.02-2.6c4.5,3.94,13.05,2.72,13.05,2.72h0c-1.53-5.78-6.79-10.03-13.05-10.03s-11.45,4.2-13.02,9.91h0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M25.71,15.48c-2.64-2.64-6.91-2.64-9.55,0-2.64,2.64-2.39,7.16-7.16,11.93,7.16,2.39,14.07.25,16.71-2.39,2.64-2.64,2.64-6.91,0-9.55Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M55.84,15.48c-2.64-2.64-6.91-2.64-9.55,0-2.64,2.64-2.64,6.91,0,9.55,2.64,2.64,9.55,4.77,16.71,2.39-4.77-4.77-4.52-9.3-7.16-11.93Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="33.75" r="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M51,61.88c0-4.97-6.72-9-15-9s-15,4.03-15,9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M25.71,15.48c-2.64-2.64-6.91-2.64-9.55,0-2.64,2.64-2.39,7.16-7.16,11.93,7.16,2.39,14.07.25,16.71-2.39,2.64-2.64,2.64-6.91,0-9.55Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M55.84,15.48c-2.64-2.64-6.91-2.64-9.55,0-2.64,2.64-2.64,6.91,0,9.55,2.64,2.64,9.55,4.77,16.71,2.39-4.77-4.77-4.52-9.3-7.16-11.93Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.98,30.16s8.52,2.46,13.02-2.6c4.5,3.94,13.05,2.72,13.05,2.72" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="36" x2="31.5" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="36" x2="40.5" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      girl_default = IconGirl;
    }
  });

  // lib/git-branch.ts
  var git_branch_exports = {};
  __export(git_branch_exports, {
    IconGitBranch: () => IconGitBranch,
    default: () => git_branch_default
  });
  var IconGitBranch, git_branch_default;
  var init_git_branch = __esm({
    "lib/git-branch.ts"() {
      IconGitBranch = `<svg id="GitBranch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="22.5" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="49.5" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="18" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="22.5" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="18" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="22.5" x2="22.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,45v-1c0-4.42,3.58-8,8-8h11c4.42,0,8-3.58,8-8v-5.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      git_branch_default = IconGitBranch;
    }
  });

  // lib/git-compare.ts
  var git_compare_exports = {};
  __export(git_compare_exports, {
    IconGitCompare: () => IconGitCompare,
    default: () => git_compare_default
  });
  var IconGitCompare, git_compare_default;
  var init_git_compare = __esm({
    "lib/git-compare.ts"() {
      IconGitCompare = `<svg id="GitCompare" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="51.75" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="18" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="51.75" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="42.75 11.25 36 18 42.75 24.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,18h7.75c4.42,0,8,3.58,8,8v23.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="18" cy="18" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 60.75 33.75 54 27 47.25" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M33.75,54h-7.75c-4.42,0-8-3.58-8-8v-23.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      git_compare_default = IconGitCompare;
    }
  });

  // lib/git-merge-queue.ts
  var git_merge_queue_exports = {};
  __export(git_merge_queue_exports, {
    IconGitMergeQueue: () => IconGitMergeQueue,
    default: () => git_merge_queue_default
  });
  var IconGitMergeQueue, git_merge_queue_default;
  var init_git_merge_queue = __esm({
    "lib/git-merge-queue.ts"() {
      IconGitMergeQueue = `<svg id="GitMergeQueue" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="22.5" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="49.5" cy="40.5" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="40.5" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="27" x2="22.5" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="13.5" x2="22.5" y2="13.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/><line x1="31.5" y1="22.5" x2="31.5" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/><line x1="40.5" y1="31.5" x2="40.5" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/></svg>`;
      git_merge_queue_default = IconGitMergeQueue;
    }
  });

  // lib/git-merge.ts
  var git_merge_exports = {};
  __export(git_merge_exports, {
    IconGitMerge: () => IconGitMerge,
    default: () => git_merge_default
  });
  var IconGitMerge, git_merge_default;
  var init_git_merge = __esm({
    "lib/git-merge.ts"() {
      IconGitMerge = `<svg id="GitMerge" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="22.5" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="49.5" cy="36" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="18" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="22.5" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="36" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="22.5" x2="22.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45,36h-9c-7.46,0-13.5-6.04-13.5-13.5h0" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      git_merge_default = IconGitMerge;
    }
  });

  // lib/git-pull-request-closed.ts
  var git_pull_request_closed_exports = {};
  __export(git_pull_request_closed_exports, {
    IconGitPullRequestClosed: () => IconGitPullRequestClosed,
    default: () => git_pull_request_closed_default
  });
  var IconGitPullRequestClosed, git_pull_request_closed_default;
  var init_git_pull_request_closed = __esm({
    "lib/git-pull-request-closed.ts"() {
      IconGitPullRequestClosed = `<svg id="GitPullRequestClosed" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="22.5" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="49.5" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="18" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="22.5" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="22.5" x2="22.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="31.5" x2="49.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="13.5" x2="56.25" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="56.25" y1="13.5" x2="42.75" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      git_pull_request_closed_default = IconGitPullRequestClosed;
    }
  });

  // lib/git-pull-request-draft.ts
  var git_pull_request_draft_exports = {};
  __export(git_pull_request_draft_exports, {
    IconGitPullRequestDraft: () => IconGitPullRequestDraft,
    default: () => git_pull_request_draft_default
  });
  var IconGitPullRequestDraft, git_pull_request_draft_default;
  var init_git_pull_request_draft = __esm({
    "lib/git-pull-request-draft.ts"() {
      IconGitPullRequestDraft = `<svg id="GitPullRequestDraft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="22.5" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="49.5" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="18" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="22.5" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="22.5" x2="22.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="40.5" x2="49.5" y2="40.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/><line x1="49.5" y1="27" x2="49.5" y2="27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/><line x1="49.5" y1="13.5" x2="49.5" y2="13.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/></svg>`;
      git_pull_request_draft_default = IconGitPullRequestDraft;
    }
  });

  // lib/git-pull-request.ts
  var git_pull_request_exports = {};
  __export(git_pull_request_exports, {
    IconGitPullRequest: () => IconGitPullRequest,
    default: () => git_pull_request_default
  });
  var IconGitPullRequest, git_pull_request_default;
  var init_git_pull_request = __esm({
    "lib/git-pull-request.ts"() {
      IconGitPullRequest = `<svg id="GitPullRequest" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="22.5" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="49.5" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="18" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="22.5" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="22.5" x2="22.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 11.25 33.75 18 40.5 24.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M33.75,18h7.75c4.42,0,8,3.58,8,8v23.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      git_pull_request_default = IconGitPullRequest;
    }
  });

  // lib/git-repo-fork.ts
  var git_repo_fork_exports = {};
  __export(git_repo_fork_exports, {
    IconGitRepoFork: () => IconGitRepoFork,
    default: () => git_repo_fork_default
  });
  var IconGitRepoFork, git_repo_fork_default;
  var init_git_repo_fork = __esm({
    "lib/git-repo-fork.ts"() {
      IconGitRepoFork = `<svg id="GitRepoFork" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="22.5" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="54" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="49.5" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="22.5" cy="18" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="54" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="18" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,22.5v5.5c0,4.42,3.58,8,8,8h11c4.42,0,8-3.58,8-8v-5.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      git_repo_fork_default = IconGitRepoFork;
    }
  });

  // lib/heart-broken-small.ts
  var heart_broken_small_exports = {};
  __export(heart_broken_small_exports, {
    IconHeartBrokenSmall: () => IconHeartBrokenSmall,
    default: () => heart_broken_small_default
  });
  var IconHeartBrokenSmall, heart_broken_small_default;
  var init_heart_broken_small = __esm({
    "lib/heart-broken-small.ts"() {
      IconHeartBrokenSmall = `<svg id="HeartBrokenSmall" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,49.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="36 31.5 38.25 38.25 33.75 40.5 36 49.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,49.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      heart_broken_small_default = IconHeartBrokenSmall;
    }
  });

  // lib/heart-fat.ts
  var heart_fat_exports = {};
  __export(heart_fat_exports, {
    IconHeartFat: () => IconHeartFat,
    default: () => heart_fat_default
  });
  var IconHeartFat, heart_fat_default;
  var init_heart_fat = __esm({
    "lib/heart-fat.ts"() {
      IconHeartFat = `<svg id="HeartFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,58.5C-10.77,34.02,12.62-3.19,36,21.77c23.38-24.97,46.77,12.24,0,36.73Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,58.5C-10.77,34.02,12.62-3.19,36,21.77c23.38-24.97,46.77,12.24,0,36.73Z" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      heart_fat_default = IconHeartFat;
    }
  });

  // lib/heart-l.ts
  var heart_l_exports = {};
  __export(heart_l_exports, {
    IconHeartL: () => IconHeartL,
    default: () => heart_l_default
  });
  var IconHeartL, heart_l_default;
  var init_heart_l = __esm({
    "lib/heart-l.ts"() {
      IconHeartL = `<svg id="HeartL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,58.5C-10.77,34.02,12.62-3.19,36,21.77c23.38-24.97,46.77,12.24,0,36.73Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,58.5C-10.77,34.02,12.62-3.19,36,21.77c23.38-24.97,46.77,12.24,0,36.73Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      heart_l_default = IconHeartL;
    }
  });

  // lib/heart-m.ts
  var heart_m_exports = {};
  __export(heart_m_exports, {
    IconHeartM: () => IconHeartM,
    default: () => heart_m_default
  });
  var IconHeartM, heart_m_default;
  var init_heart_m = __esm({
    "lib/heart-m.ts"() {
      IconHeartM = `<svg id="HeartM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,54C-1.41,34.41,17.29,4.64,36,24.62c18.71-19.97,37.41,9.79,0,29.38Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,54C-1.41,34.41,17.29,4.64,36,24.62c18.71-19.97,37.41,9.79,0,29.38Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      heart_m_default = IconHeartM;
    }
  });

  // lib/heart-small.ts
  var heart_small_exports = {};
  __export(heart_small_exports, {
    IconHeartSmall: () => IconHeartSmall,
    default: () => heart_small_default
  });
  var IconHeartSmall, heart_small_default;
  var init_heart_small = __esm({
    "lib/heart-small.ts"() {
      IconHeartSmall = `<svg id="HeartSmall" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,49.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,49.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      heart_small_default = IconHeartSmall;
    }
  });

  // lib/info-fat.ts
  var info_fat_exports = {};
  __export(info_fat_exports, {
    IconInfoFat: () => IconInfoFat,
    default: () => info_fat_default
  });
  var IconInfoFat, info_fat_default;
  var init_info_fat = __esm({
    "lib/info-fat.ts"() {
      IconInfoFat = `<svg id="InfoFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="36 58.5 36 31.5 27 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/><line x1="36" y1="18" x2="36" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      info_fat_default = IconInfoFat;
    }
  });

  // lib/info-l.ts
  var info_l_exports = {};
  __export(info_l_exports, {
    IconInfoL: () => IconInfoL,
    default: () => info_l_default
  });
  var IconInfoL, info_l_default;
  var init_info_l = __esm({
    "lib/info-l.ts"() {
      IconInfoL = `<svg id="InfoL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="36 58.5 36 31.5 31.5 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="18" x2="36" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      info_l_default = IconInfoL;
    }
  });

  // lib/info-m.ts
  var info_m_exports = {};
  __export(info_m_exports, {
    IconInfoM: () => IconInfoM,
    default: () => info_m_default
  });
  var IconInfoM, info_m_default;
  var init_info_m = __esm({
    "lib/info-m.ts"() {
      IconInfoM = `<svg id="InfoM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="36 54 36 31.5 31.5 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      info_m_default = IconInfoM;
    }
  });

  // lib/info-s.ts
  var info_s_exports = {};
  __export(info_s_exports, {
    IconInfoS: () => IconInfoS,
    default: () => info_s_default
  });
  var IconInfoS, info_s_default;
  var init_info_s = __esm({
    "lib/info-s.ts"() {
      IconInfoS = `<svg id="InfoS" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="36 49.5 36 31.5 31.5 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      info_s_default = IconInfoS;
    }
  });

  // lib/invisible-fat.ts
  var invisible_fat_exports = {};
  __export(invisible_fat_exports, {
    IconInvisibleFat: () => IconInvisibleFat,
    default: () => invisible_fat_default
  });
  var IconInvisibleFat, invisible_fat_default;
  var init_invisible_fat = __esm({
    "lib/invisible-fat.ts"() {
      IconInvisibleFat = `<svg id="InvisibleFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M63,36s-12.09,18-27,18-27-18-27-18c0,0,12.09-18,27-18s27,18,27,18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width: 8px;"/><path d="M63,36s-12.09,18-27,18-27-18-27-18c0,0,12.09-18,27-18s27,18,27,18Z" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/><line x1="58.5" y1="13.5" x2="13.5" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      invisible_fat_default = IconInvisibleFat;
    }
  });

  // lib/invisible-l.ts
  var invisible_l_exports = {};
  __export(invisible_l_exports, {
    IconInvisibleL: () => IconInvisibleL,
    default: () => invisible_l_default
  });
  var IconInvisibleL, invisible_l_default;
  var init_invisible_l = __esm({
    "lib/invisible-l.ts"() {
      IconInvisibleL = `<svg id="InvisibleL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M63,36s-12.09,18-27,18-27-18-27-18c0,0,12.09-18,27-18s27,18,27,18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,36s-12.09,18-27,18-27-18-27-18c0,0,12.09-18,27-18s27,18,27,18Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="13.5" x2="13.5" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      invisible_l_default = IconInvisibleL;
    }
  });

  // lib/invisible-m.ts
  var invisible_m_exports = {};
  __export(invisible_m_exports, {
    IconInvisibleM: () => IconInvisibleM,
    default: () => invisible_m_default
  });
  var IconInvisibleM, invisible_m_default;
  var init_invisible_m = __esm({
    "lib/invisible-m.ts"() {
      IconInvisibleM = `<svg id="InvisibleM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M56.25,36s-9.07,13.5-20.25,13.5-20.25-13.5-20.25-13.5c0,0,9.07-13.5,20.25-13.5s20.25,13.5,20.25,13.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M56.25,36s-9.07,13.5-20.25,13.5-20.25-13.5-20.25-13.5c0,0,9.07-13.5,20.25-13.5s20.25,13.5,20.25,13.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="18" x2="18" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      invisible_m_default = IconInvisibleM;
    }
  });

  // lib/invisible-s.ts
  var invisible_s_exports = {};
  __export(invisible_s_exports, {
    IconInvisibleS: () => IconInvisibleS,
    default: () => invisible_s_default
  });
  var IconInvisibleS, invisible_s_default;
  var init_invisible_s = __esm({
    "lib/invisible-s.ts"() {
      IconInvisibleS = `<svg id="InvisibleS" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M49.5,36s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,36s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="22.5" x2="22.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      invisible_s_default = IconInvisibleS;
    }
  });

  // lib/key-backspace.ts
  var key_backspace_exports = {};
  __export(key_backspace_exports, {
    IconKeyBackspace: () => IconKeyBackspace,
    default: () => key_backspace_default
  });
  var IconKeyBackspace, key_backspace_default;
  var init_key_backspace = __esm({
    "lib/key-backspace.ts"() {
      IconKeyBackspace = `<svg id="KeyBackspace" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M4.5,36l17.41-17.41c.38-.38.88-.59,1.41-.59h37.67c1.1,0,2,.9,2,2v32c0,1.1-.9,2-2,2H23.33c-.53,0-1.04-.21-1.41-.59L4.5,36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="27" x2="49.5" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="27" x2="31.5" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_backspace_default = IconKeyBackspace;
    }
  });

  // lib/key-delete.ts
  var key_delete_exports = {};
  __export(key_delete_exports, {
    IconKeyDelete: () => IconKeyDelete,
    default: () => key_delete_default
  });
  var IconKeyDelete, key_delete_default;
  var init_key_delete = __esm({
    "lib/key-delete.ts"() {
      IconKeyDelete = `<svg id="KeyDelete" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="18" width="35.17" height="36" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="26.17" y1="27" x2="44.17" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="44.17" y1="27" x2="26.17" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_delete_default = IconKeyDelete;
    }
  });

  // lib/key-down.ts
  var key_down_exports = {};
  __export(key_down_exports, {
    IconKeyDown: () => IconKeyDown,
    default: () => key_down_default
  });
  var IconKeyDown, key_down_default;
  var init_key_down = __esm({
    "lib/key-down.ts"() {
      IconKeyDown = `<svg id="KeyDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="49.5 40.5 36 54 22.5 40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="18" x2="36" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_down_default = IconKeyDown;
    }
  });

  // lib/key-eject.ts
  var key_eject_exports = {};
  __export(key_eject_exports, {
    IconKeyEject: () => IconKeyEject,
    default: () => key_eject_default
  });
  var IconKeyEject, key_eject_default;
  var init_key_eject = __esm({
    "lib/key-eject.ts"() {
      IconKeyEject = `<svg id="KeyEject" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,36h20.09c.89,0,1.34-1.08.71-1.71l-20.79-20.79-20.79,20.79c-.63.63-.18,1.71.71,1.71h20.09Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M14,45h44v7c0,1.1-.9,2-2,2H16c-1.1,0-2-.9-2-2v-7h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_eject_default = IconKeyEject;
    }
  });

  // lib/key-enter.ts
  var key_enter_exports = {};
  __export(key_enter_exports, {
    IconKeyEnter: () => IconKeyEnter,
    default: () => key_enter_default
  });
  var IconKeyEnter, key_enter_default;
  var init_key_enter = __esm({
    "lib/key-enter.ts"() {
      IconKeyEnter = `<svg id="KeyEnter" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="22.5 40.5 13.5 49.5 22.5 58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,49.5h41c2.21,0,4-1.79,4-4v-19c0-2.21-1.79-4-4-4h-9.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_enter_default = IconKeyEnter;
    }
  });

  // lib/key-function.ts
  var key_function_exports = {};
  __export(key_function_exports, {
    IconKeyFunction: () => IconKeyFunction,
    default: () => key_function_default
  });
  var IconKeyFunction, key_function_default;
  var init_key_function = __esm({
    "lib/key-function.ts"() {
      IconKeyFunction = `<svg id="KeyFunction" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M31.5,18h-1c-4.42,0-8,3.58-8,8v28" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="54" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,54v-13.5c0-4.97-4.03-9-9-9s-9,4.03-9,9" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="31.5" x2="27" y2="31.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_function_default = IconKeyFunction;
    }
  });

  // lib/key-mac-command.ts
  var key_mac_command_exports = {};
  __export(key_mac_command_exports, {
    IconKeyMacCommand: () => IconKeyMacCommand,
    default: () => key_mac_command_default
  });
  var IconKeyMacCommand, key_mac_command_default;
  var init_key_mac_command = __esm({
    "lib/key-mac-command.ts"() {
      IconKeyMacCommand = `<svg id="KeyMacCommand" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M18,9c-4.97,0-9,4.03-9,9s4.03,9,9,9h9v-9c0-4.97-4.03-9-9-9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,18c0-4.97-4.03-9-9-9s-9,4.03-9,9v9h9c4.97,0,9-4.03,9-9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,63c4.97,0,9-4.03,9-9s-4.03-9-9-9h-9v9c0,4.97,4.03,9,9,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M9,54c0,4.97,4.03,9,9,9s9-4.03,9-9v-9h-9c-4.97,0-9,4.03-9,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="27" y="27" width="18" height="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_mac_command_default = IconKeyMacCommand;
    }
  });

  // lib/key-option.ts
  var key_option_exports = {};
  __export(key_option_exports, {
    IconKeyOption: () => IconKeyOption,
    default: () => key_option_default
  });
  var IconKeyOption, key_option_default;
  var init_key_option = __esm({
    "lib/key-option.ts"() {
      IconKeyOption = `<svg id="KeyOption" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="4.5 27 18 27 31.5 49.5 63 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="27" x2="31.5" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_option_default = IconKeyOption;
    }
  });

  // lib/key-page-down.ts
  var key_page_down_exports = {};
  __export(key_page_down_exports, {
    IconKeyPageDown: () => IconKeyPageDown,
    default: () => key_page_down_default
  });
  var IconKeyPageDown, key_page_down_default;
  var init_key_page_down = __esm({
    "lib/key-page-down.ts"() {
      IconKeyPageDown = `<svg id="KeyPageDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="49.5 36 36 49.5 22.5 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="58.5" x2="22.5" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="13.5" x2="36" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_page_down_default = IconKeyPageDown;
    }
  });

  // lib/key-page-next.ts
  var key_page_next_exports = {};
  __export(key_page_next_exports, {
    IconKeyPageNext: () => IconKeyPageNext,
    default: () => key_page_next_default
  });
  var IconKeyPageNext, key_page_next_default;
  var init_key_page_next = __esm({
    "lib/key-page-next.ts"() {
      IconKeyPageNext = `<svg id="KeyPageNext" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="36 22.5 49.5 36 36 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="22.5" x2="58.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="36" x2="49.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_page_next_default = IconKeyPageNext;
    }
  });

  // lib/key-page-up.ts
  var key_page_up_exports = {};
  __export(key_page_up_exports, {
    IconKeyPageUp: () => IconKeyPageUp,
    default: () => key_page_up_default
  });
  var IconKeyPageUp, key_page_up_default;
  var init_key_page_up = __esm({
    "lib/key-page-up.ts"() {
      IconKeyPageUp = `<svg id="KeyPageUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="22.5 36 36 22.5 49.5 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="13.5" x2="49.5" y2="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="36" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_page_up_default = IconKeyPageUp;
    }
  });

  // lib/key-previous-up.ts
  var key_previous_up_exports = {};
  __export(key_previous_up_exports, {
    IconKeyPreviousUp: () => IconKeyPreviousUp,
    default: () => key_previous_up_default
  });
  var IconKeyPreviousUp, key_previous_up_default;
  var init_key_previous_up = __esm({
    "lib/key-previous-up.ts"() {
      IconKeyPreviousUp = `<svg id="KeyPreviousUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="22.5 49.5 36 36 49.5 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="27" x2="49.5" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_previous_up_default = IconKeyPreviousUp;
    }
  });

  // lib/key-shift.ts
  var key_shift_exports = {};
  __export(key_shift_exports, {
    IconKeyShift: () => IconKeyShift,
    default: () => key_shift_default
  });
  var IconKeyShift, key_shift_default;
  var init_key_shift = __esm({
    "lib/key-shift.ts"() {
      IconKeyShift = `<svg id="KeyShift" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M11.76,36h10.74v17c0,.55.45,1,1,1h25c.55,0,1-.45,1-1v-17h10.74c.94,0,1.36-1.17.64-1.77l-24.88-20.73-24.88,20.73c-.72.6-.3,1.77.64,1.77Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_shift_default = IconKeyShift;
    }
  });

  // lib/key-tab.ts
  var key_tab_exports = {};
  __export(key_tab_exports, {
    IconKeyTab: () => IconKeyTab,
    default: () => key_tab_default
  });
  var IconKeyTab, key_tab_default;
  var init_key_tab = __esm({
    "lib/key-tab.ts"() {
      IconKeyTab = `<svg id="KeyTab" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M11.76,31.5h10.74v9h27v-9h10.74c.94,0,1.36-1.17.64-1.77l-24.88-20.73L11.12,29.73c-.72.6-.3,1.77.64,1.77Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,49.5h27v7c0,1.1-.9,2-2,2h-23c-1.1,0-2-.9-2-2v-7h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_tab_default = IconKeyTab;
    }
  });

  // lib/key-up.ts
  var key_up_exports = {};
  __export(key_up_exports, {
    IconKeyUp: () => IconKeyUp,
    default: () => key_up_default
  });
  var IconKeyUp, key_up_default;
  var init_key_up = __esm({
    "lib/key-up.ts"() {
      IconKeyUp = `<svg id="KeyUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="22.5 31.5 36 18 49.5 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="54" x2="36" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      key_up_default = IconKeyUp;
    }
  });

  // lib/lightning-flash.ts
  var lightning_flash_exports = {};
  __export(lightning_flash_exports, {
    IconLightningFlash: () => IconLightningFlash,
    default: () => lightning_flash_default
  });
  var IconLightningFlash, lightning_flash_default;
  var init_lightning_flash = __esm({
    "lib/lightning-flash.ts"() {
      IconLightningFlash = `<svg id="LightningFlash" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.5,9h27l-4.5,22.5h7.48c.72,0,1.2.73.92,1.39l-10.98,25.63c-.43,1-1.92.69-1.92-.39v-17.63h-17c-.55,0-1-.45-1-1V9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M22.5,9h27l-4.5,22.5h7.48c.72,0,1.2.73.92,1.39l-10.98,25.63c-.43,1-1.92.69-1.92-.39v-17.63h-17c-.55,0-1-.45-1-1V9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      lightning_flash_default = IconLightningFlash;
    }
  });

  // lib/like.ts
  var like_exports = {};
  __export(like_exports, {
    IconLike: () => IconLike,
    default: () => like_default
  });
  var IconLike, like_default;
  var init_like = __esm({
    "lib/like.ts"() {
      IconLike = `<svg id="Like" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M42.12,54c1.72,0,3.25-1.1,3.79-2.74l6.33-19c.86-2.59-1.06-5.26-3.79-5.26h-13.82s5.49-9.16,5.49-9.16c1.19-1.99-.54-4.34-3.21-4.34h-.47c-1.13,0-2.2.44-2.88,1.2l-11.05,12.3h0v27h19.62Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M15.5,27h7v27h-7c-1.1,0-2-.9-2-2v-23c0-1.1.9-2,2-2Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M42.12,54c1.72,0,3.25-1.1,3.79-2.74l6.33-19c.86-2.59-1.06-5.26-3.79-5.26h-13.82s5.49-9.16,5.49-9.16c1.19-1.99-.54-4.34-3.21-4.34h-.47c-1.13,0-2.2.44-2.88,1.2l-11.05,12.3h0v27h19.62Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      like_default = IconLike;
    }
  });

  // lib/link.ts
  var link_exports = {};
  __export(link_exports, {
    IconLink: () => IconLink,
    default: () => link_default
  });
  var IconLink, link_default;
  var init_link = __esm({
    "lib/link.ts"() {
      IconLink = `<svg id="Link" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M32.82,39.18c5.27,5.27,10.64,2.09,15.91-3.18s8.45-10.64,3.18-15.91-10.64-2.09-15.91,3.18c-1.12,1.12-2.13,2.24-3,3.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M39.18,32.82c-5.27-5.27-10.64-2.09-15.91,3.18s-8.45,10.64-3.18,15.91,10.64,2.09,15.91-3.18c1.12-1.12,2.13-2.24,3-3.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      link_default = IconLink;
    }
  });

  // lib/loader-dots2.ts
  var loader_dots2_exports = {};
  __export(loader_dots2_exports, {
    IconLoaderDots2: () => IconLoaderDots2,
    default: () => loader_dots2_default
  });
  var IconLoaderDots2, loader_dots2_default;
  var init_loader_dots2 = __esm({
    "lib/loader-dots2.ts"() {
      IconLoaderDots2 = `<svg id="LoaderDots2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="22.5" x2="36" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-xl, calc(var(--icon-stroke-width, 5) * 3));"/><line x1="36" y1="54" x2="36" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="20.25" y1="38.25" x2="20.25" y2="38.25" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="51.75" y1="38.25" x2="51.75" y2="38.25" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="24.86" y1="27.11" x2="24.86" y2="27.11" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.14" y1="49.39" x2="47.14" y2="49.39" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="24.86" y1="49.39" x2="24.86" y2="49.39" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.14" y1="27.11" x2="47.14" y2="27.11" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/></svg>`;
      loader_dots2_default = IconLoaderDots2;
    }
  });

  // lib/loader-dots.ts
  var loader_dots_exports = {};
  __export(loader_dots_exports, {
    IconLoaderDots: () => IconLoaderDots,
    default: () => loader_dots_default
  });
  var IconLoaderDots, loader_dots_default;
  var init_loader_dots = __esm({
    "lib/loader-dots.ts"() {
      IconLoaderDots = `<svg id="LoaderDots" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="22.5" x2="36" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-xl, calc(var(--icon-stroke-width, 5) * 3));"/><line x1="36" y1="54" x2="36" y2="54" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="20.25" y1="38.25" x2="20.25" y2="38.25" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="51.75" y1="38.25" x2="51.75" y2="38.25" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="24.86" y1="27.11" x2="24.86" y2="27.11" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/><line x1="47.14" y1="49.39" x2="47.14" y2="49.39" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="24.86" y1="49.39" x2="24.86" y2="49.39" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.14" y1="27.11" x2="47.14" y2="27.11" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width: 8px;"/></svg>`;
      loader_dots_default = IconLoaderDots;
    }
  });

  // lib/location-marker.ts
  var location_marker_exports = {};
  __export(location_marker_exports, {
    IconLocationMarker: () => IconLocationMarker,
    default: () => location_marker_default
  });
  var IconLocationMarker, location_marker_default;
  var init_location_marker = __esm({
    "lib/location-marker.ts"() {
      IconLocationMarker = `<svg id="LocationMarker" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,9c-12.43,0-22.5,10.07-22.5,22.5,0,18,22.5,31.5,22.5,31.5,0,0,22.5-13.5,22.5-31.5,0-12.43-10.07-22.5-22.5-22.5ZM36,40.5c-4.97,0-9-4.03-9-9s4.03-9,9-9,9,4.03,9,9-4.03,9-9,9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,31.5c0,18-22.5,31.5-22.5,31.5,0,0-22.5-13.5-22.5-31.5,0-12.43,10.07-22.5,22.5-22.5s22.5,10.07,22.5,22.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="31.5" r="9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      location_marker_default = IconLocationMarker;
    }
  });

  // lib/location-pin.ts
  var location_pin_exports = {};
  __export(location_pin_exports, {
    IconLocationPin: () => IconLocationPin,
    default: () => location_pin_default
  });
  var IconLocationPin, location_pin_default;
  var init_location_pin = __esm({
    "lib/location-pin.ts"() {
      IconLocationPin = `<svg id="LocationPin" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="22.73" r="13.27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="63" x2="36" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="35.77" cy="22.73" r="13.27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      location_pin_default = IconLocationPin;
    }
  });

  // lib/male-simplified.ts
  var male_simplified_exports = {};
  __export(male_simplified_exports, {
    IconMaleSimplified: () => IconMaleSimplified,
    default: () => male_simplified_default
  });
  var IconMaleSimplified, male_simplified_default;
  var init_male_simplified = __esm({
    "lib/male-simplified.ts"() {
      IconMaleSimplified = `<svg id="MaleSimplified" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><circle cx="35.76" cy="22.5" r="9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M27,41.99c-4.61,10.09-4.3,18,9,18s14.2-8.21,9-18c-6.66-12.55-12.38-12.3-18,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><circle cx="35.76" cy="22.5" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M27,41.99c-4.61,10.09-4.3,18,9,18s14.2-8.21,9-18c-6.66-12.55-12.38-12.3-18,0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      male_simplified_default = IconMaleSimplified;
    }
  });

  // lib/moon.ts
  var moon_exports = {};
  __export(moon_exports, {
    IconMoon: () => IconMoon,
    default: () => moon_default
  });
  var IconMoon, moon_default;
  var init_moon = __esm({
    "lib/moon.ts"() {
      IconMoon = `<svg id="Moon" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,34.5c0-7.72,3.89-14.53,9.82-18.58.63-.43.57-1.39-.12-1.72-3.77-1.8-8.11-2.6-12.69-2-10.17,1.32-18.26,9.6-19.37,19.79-1.47,13.55,9.11,25.02,22.36,25.02,3.47,0,6.76-.79,9.69-2.2.69-.33.76-1.29.12-1.73-5.93-4.05-9.82-10.86-9.82-18.58Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,34.5c0-7.72,3.89-14.53,9.82-18.58.63-.43.57-1.39-.12-1.72-3.77-1.8-8.11-2.6-12.69-2-10.17,1.32-18.26,9.6-19.37,19.79-1.47,13.55,9.11,25.02,22.36,25.02,3.47,0,6.76-.79,9.69-2.2.69-.33.76-1.29.12-1.73-5.93-4.05-9.82-10.86-9.82-18.58Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      moon_default = IconMoon;
    }
  });

  // lib/moving-block.ts
  var moving_block_exports = {};
  __export(moving_block_exports, {
    IconMovingBlock: () => IconMovingBlock,
    default: () => moving_block_default
  });
  var IconMovingBlock, moving_block_default;
  var init_moving_block = __esm({
    "lib/moving-block.ts"() {
      IconMovingBlock = `<svg id="MovingBlock" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="32.27" y="23.27" width="25.46" height="25.46" rx="2" ry="2" transform="translate(-12.28 42.36) rotate(-45)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="32.27" y="23.27" width="25.46" height="25.46" rx="2" ry="2" transform="translate(-12.28 42.36) rotate(-45)" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="36" x2="18" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="49.5" x2="27" y2="49.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="22.5" x2="27" y2="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      moving_block_default = IconMovingBlock;
    }
  });

  // lib/multiply-fat.ts
  var multiply_fat_exports = {};
  __export(multiply_fat_exports, {
    IconMultiplyFat: () => IconMultiplyFat,
    default: () => multiply_fat_default
  });
  var IconMultiplyFat, multiply_fat_default;
  var init_multiply_fat = __esm({
    "lib/multiply-fat.ts"() {
      IconMultiplyFat = `<svg id="MultiplyFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="20.09" y1="20.09" x2="51.91" y2="51.91" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/><line x1="20.09" y1="51.91" x2="51.91" y2="20.09" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      multiply_fat_default = IconMultiplyFat;
    }
  });

  // lib/multiply-l.ts
  var multiply_l_exports = {};
  __export(multiply_l_exports, {
    IconMultiplyL: () => IconMultiplyL,
    default: () => multiply_l_default
  });
  var IconMultiplyL, multiply_l_default;
  var init_multiply_l = __esm({
    "lib/multiply-l.ts"() {
      IconMultiplyL = `<svg id="MultiplyL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="20.09" y1="20.09" x2="51.91" y2="51.91" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="20.09" y1="51.91" x2="51.91" y2="20.09" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      multiply_l_default = IconMultiplyL;
    }
  });

  // lib/multiply-m.ts
  var multiply_m_exports = {};
  __export(multiply_m_exports, {
    IconMultiplyM: () => IconMultiplyM,
    default: () => multiply_m_default
  });
  var IconMultiplyM, multiply_m_default;
  var init_multiply_m = __esm({
    "lib/multiply-m.ts"() {
      IconMultiplyM = `<svg id="MultiplyM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="23.27" y1="23.27" x2="48.73" y2="48.73" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="23.27" y1="48.73" x2="48.73" y2="23.27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      multiply_m_default = IconMultiplyM;
    }
  });

  // lib/multiply-s.ts
  var multiply_s_exports = {};
  __export(multiply_s_exports, {
    IconMultiplyS: () => IconMultiplyS,
    default: () => multiply_s_default
  });
  var IconMultiplyS, multiply_s_default;
  var init_multiply_s = __esm({
    "lib/multiply-s.ts"() {
      IconMultiplyS = `<svg id="MultiplyS" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="26.45" y1="26.45" x2="45.55" y2="45.55" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="26.45" y1="45.55" x2="45.55" y2="26.45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      multiply_s_default = IconMultiplyS;
    }
  });

  // lib/note-add2.ts
  var note_add2_exports = {};
  __export(note_add2_exports, {
    IconNoteAdd2: () => IconNoteAdd2,
    default: () => note_add2_default
  });
  var IconNoteAdd2, note_add2_default;
  var init_note_add2 = __esm({
    "lib/note-add2.ts"() {
      IconNoteAdd2 = `<svg id="NoteAdd2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="12.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="40.5" y1="49.5" x2="58.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="40.5" x2="49.5" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M58.5,40.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,40.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="5.5" x2="22.5" y2="19" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="5.5" x2="31.5" y2="19" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="5.5" x2="40.5" y2="19" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="5.5" x2="49.5" y2="19" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_add2_default = IconNoteAdd2;
    }
  });

  // lib/note-add.ts
  var note_add_exports = {};
  __export(note_add_exports, {
    IconNoteAdd: () => IconNoteAdd,
    default: () => note_add_default
  });
  var IconNoteAdd, note_add_default;
  var init_note_add = __esm({
    "lib/note-add.ts"() {
      IconNoteAdd = `<svg id="NoteAdd" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="12.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="27" y1="36" x2="45" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="12.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="5.5" x2="22.5" y2="19" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="5.5" x2="31.5" y2="19" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="5.5" x2="40.5" y2="19" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="5.5" x2="49.5" y2="19" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_add_default = IconNoteAdd;
    }
  });

  // lib/note-broken-heart2.ts
  var note_broken_heart2_exports = {};
  __export(note_broken_heart2_exports, {
    IconNoteBrokenHeart2: () => IconNoteBrokenHeart2,
    default: () => note_broken_heart2_default
  });
  var IconNoteBrokenHeart2, note_broken_heart2_default;
  var init_note_broken_heart2 = __esm({
    "lib/note-broken-heart2.ts"() {
      IconNoteBrokenHeart2 = `<svg id="NoteBrokenHeart2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="54 49.5 56.25 56.25 51.75 58.5 54 67.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,67.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_broken_heart2_default = IconNoteBrokenHeart2;
    }
  });

  // lib/note-broken-heart.ts
  var note_broken_heart_exports = {};
  __export(note_broken_heart_exports, {
    IconNoteBrokenHeart: () => IconNoteBrokenHeart,
    default: () => note_broken_heart_default
  });
  var IconNoteBrokenHeart, note_broken_heart_default;
  var init_note_broken_heart = __esm({
    "lib/note-broken-heart.ts"() {
      IconNoteBrokenHeart = `<svg id="NoteBrokenHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 31.5 38.25 38.25 33.75 40.5 36 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,49.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_broken_heart_default = IconNoteBrokenHeart;
    }
  });

  // lib/note-check2.ts
  var note_check2_exports = {};
  __export(note_check2_exports, {
    IconNoteCheck2: () => IconNoteCheck2,
    default: () => note_check2_default
  });
  var IconNoteCheck2, note_check2_default;
  var init_note_check2 = __esm({
    "lib/note-check2.ts"() {
      IconNoteCheck2 = `<svg id="NoteCheck2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.41" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="40.5 45.64 48.21 58.5 58.5 40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,36v-18.5c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_check2_default = IconNoteCheck2;
    }
  });

  // lib/note-check.ts
  var note_check_exports = {};
  __export(note_check_exports, {
    IconNoteCheck: () => IconNoteCheck,
    default: () => note_check_default
  });
  var IconNoteCheck, note_check_default;
  var init_note_check = __esm({
    "lib/note-check.ts"() {
      IconNoteCheck = `<svg id="NoteCheck" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.41" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.41" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.41" x2="22.5" y2="19.91" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.41" x2="31.5" y2="19.91" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.41" x2="40.5" y2="19.91" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.41" x2="49.5" y2="19.91" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 32.14 34.71 45 45 27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_check_default = IconNoteCheck;
    }
  });

  // lib/note-edit2.ts
  var note_edit2_exports = {};
  __export(note_edit2_exports, {
    IconNoteEdit2: () => IconNoteEdit2,
    default: () => note_edit2_default
  });
  var IconNoteEdit2, note_edit2_default;
  var init_note_edit2 = __esm({
    "lib/note-edit2.ts"() {
      IconNoteEdit2 = `<svg id="NoteEdit2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M51.14,57.03l7.36,1.47-1.47-7.36c-.08-.39-.27-.74-.55-1.02l-14.07-14.07c-.78-.78-2.05-.78-2.83,0l-3.54,3.54c-.78.78-.78,2.05,0,2.83l14.07,14.07c.28.28.63.47,1.02.55Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="39.41" y1="45.77" x2="45.77" y2="39.41" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      note_edit2_default = IconNoteEdit2;
    }
  });

  // lib/note-edit.ts
  var note_edit_exports = {};
  __export(note_edit_exports, {
    IconNoteEdit: () => IconNoteEdit,
    default: () => note_edit_default
  });
  var IconNoteEdit, note_edit_default;
  var init_note_edit = __esm({
    "lib/note-edit.ts"() {
      IconNoteEdit = `<svg id="NoteEdit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M23.97,42.14l-1.47,7.36,7.36-1.47c.39-.08.74-.27,1.02-.55l14.07-14.07c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-14.07,14.07c-.28.28-.47.63-.55,1.02Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="35.23" y1="30.41" x2="41.59" y2="36.77" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_edit_default = IconNoteEdit;
    }
  });

  // lib/note-exclamation-mark2.ts
  var note_exclamation_mark2_exports = {};
  __export(note_exclamation_mark2_exports, {
    IconNoteExclamationMark2: () => IconNoteExclamationMark2,
    default: () => note_exclamation_mark2_default
  });
  var IconNoteExclamationMark2, note_exclamation_mark2_default;
  var init_note_exclamation_mark2 = __esm({
    "lib/note-exclamation-mark2.ts"() {
      IconNoteExclamationMark2 = `<svg id="NoteExclamationMark2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M58.5,36v-18.5c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,36v-18.5c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="49.5" y1="40.5" x2="49.5" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="63" x2="49.5" y2="63" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      note_exclamation_mark2_default = IconNoteExclamationMark2;
    }
  });

  // lib/note-exclamation-mark.ts
  var note_exclamation_mark_exports = {};
  __export(note_exclamation_mark_exports, {
    IconNoteExclamationMark: () => IconNoteExclamationMark,
    default: () => note_exclamation_mark_default
  });
  var IconNoteExclamationMark, note_exclamation_mark_default;
  var init_note_exclamation_mark = __esm({
    "lib/note-exclamation-mark.ts"() {
      IconNoteExclamationMark = `<svg id="NoteExclamationMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="27" x2="36" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="49.5" x2="36" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      note_exclamation_mark_default = IconNoteExclamationMark;
    }
  });

  // lib/note-heart2.ts
  var note_heart2_exports = {};
  __export(note_heart2_exports, {
    IconNoteHeart2: () => IconNoteHeart2,
    default: () => note_heart2_default
  });
  var IconNoteHeart2, note_heart2_default;
  var init_note_heart2 = __esm({
    "lib/note-heart2.ts"() {
      IconNoteHeart2 = `<svg id="NoteHeart2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,67.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_heart2_default = IconNoteHeart2;
    }
  });

  // lib/note-heart.ts
  var note_heart_exports = {};
  __export(note_heart_exports, {
    IconNoteHeart: () => IconNoteHeart,
    default: () => note_heart_default
  });
  var IconNoteHeart, note_heart_default;
  var init_note_heart = __esm({
    "lib/note-heart.ts"() {
      IconNoteHeart = `<svg id="NoteHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,49.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_heart_default = IconNoteHeart;
    }
  });

  // lib/note-info2.ts
  var note_info2_exports = {};
  __export(note_info2_exports, {
    IconNoteInfo2: () => IconNoteInfo2,
    default: () => note_info2_default
  });
  var IconNoteInfo2, note_info2_default;
  var init_note_info2 = __esm({
    "lib/note-info2.ts"() {
      IconNoteInfo2 = `<svg id="NoteInfo2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M58.5,36v-18.5c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,36v-18.5c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="49.5 63 49.5 49.5 45 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="40.5" x2="49.5" y2="40.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      note_info2_default = IconNoteInfo2;
    }
  });

  // lib/note-info.ts
  var note_info_exports = {};
  __export(note_info_exports, {
    IconNoteInfo: () => IconNoteInfo,
    default: () => note_info_default
  });
  var IconNoteInfo, note_info_default;
  var init_note_info = __esm({
    "lib/note-info.ts"() {
      IconNoteInfo = `<svg id="NoteInfo" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="36 49.5 36 36 31.5 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="27" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      note_info_default = IconNoteInfo;
    }
  });

  // lib/note-invisible2.ts
  var note_invisible2_exports = {};
  __export(note_invisible2_exports, {
    IconNoteInvisible2: () => IconNoteInvisible2,
    default: () => note_invisible2_default
  });
  var IconNoteInvisible2, note_invisible2_default;
  var init_note_invisible2 = __esm({
    "lib/note-invisible2.ts"() {
      IconNoteInvisible2 = `<svg id="NoteInvisible2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M67.5,54s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="67.5" y1="45" x2="40.5" y2="63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_invisible2_default = IconNoteInvisible2;
    }
  });

  // lib/note-invisible.ts
  var note_invisible_exports = {};
  __export(note_invisible_exports, {
    IconNoteInvisible: () => IconNoteInvisible,
    default: () => note_invisible_default
  });
  var IconNoteInvisible, note_invisible_default;
  var init_note_invisible = __esm({
    "lib/note-invisible.ts"() {
      IconNoteInvisible = `<svg id="NoteInvisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,40.5s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="31.5" x2="22.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_invisible_default = IconNoteInvisible;
    }
  });

  // lib/note-multiply2.ts
  var note_multiply2_exports = {};
  __export(note_multiply2_exports, {
    IconNoteMultiply2: () => IconNoteMultiply2,
    default: () => note_multiply2_default
  });
  var IconNoteMultiply2, note_multiply2_default;
  var init_note_multiply2 = __esm({
    "lib/note-multiply2.ts"() {
      IconNoteMultiply2 = `<svg id="NoteMultiply2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="45" y1="45" x2="57.73" y2="57.73" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="57.73" y1="45" x2="45" y2="57.73" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_multiply2_default = IconNoteMultiply2;
    }
  });

  // lib/note-multiply.ts
  var note_multiply_exports = {};
  __export(note_multiply_exports, {
    IconNoteMultiply: () => IconNoteMultiply,
    default: () => note_multiply_default
  });
  var IconNoteMultiply, note_multiply_default;
  var init_note_multiply = __esm({
    "lib/note-multiply.ts"() {
      IconNoteMultiply = `<svg id="NoteMultiply" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="29.64" y1="29.64" x2="42.36" y2="42.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.36" y1="29.64" x2="29.64" y2="42.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_multiply_default = IconNoteMultiply;
    }
  });

  // lib/note-question-mark2.ts
  var note_question_mark2_exports = {};
  __export(note_question_mark2_exports, {
    IconNoteQuestionMark2: () => IconNoteQuestionMark2,
    default: () => note_question_mark2_default
  });
  var IconNoteQuestionMark2, note_question_mark2_default;
  var init_note_question_mark2 = __esm({
    "lib/note-question-mark2.ts"() {
      IconNoteQuestionMark2 = `<svg id="NoteQuestionMark2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M58.5,36v-18.5c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,36v-18.5c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="48" y1="63" x2="48" y2="63" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M42,46.5c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_question_mark2_default = IconNoteQuestionMark2;
    }
  });

  // lib/note-question-mark.ts
  var note_question_mark_exports = {};
  __export(note_question_mark_exports, {
    IconNoteQuestionMark: () => IconNoteQuestionMark,
    default: () => note_question_mark_default
  });
  var IconNoteQuestionMark, note_question_mark_default;
  var init_note_question_mark = __esm({
    "lib/note-question-mark.ts"() {
      IconNoteQuestionMark = `<svg id="NoteQuestionMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="49.5" x2="36" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30,33c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_question_mark_default = IconNoteQuestionMark;
    }
  });

  // lib/note-search2.ts
  var note_search2_exports = {};
  __export(note_search2_exports, {
    IconNoteSearch2: () => IconNoteSearch2,
    default: () => note_search2_default
  });
  var IconNoteSearch2, note_search2_default;
  var init_note_search2 = __esm({
    "lib/note-search2.ts"() {
      IconNoteSearch2 = `<svg id="NoteSearch2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M58.5,36v-18.5c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,36v-18.5c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="63" x2="55.86" y2="55.86" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="49.5" cy="49.5" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_search2_default = IconNoteSearch2;
    }
  });

  // lib/note-search.ts
  var note_search_exports = {};
  __export(note_search_exports, {
    IconNoteSearch: () => IconNoteSearch,
    default: () => note_search_default
  });
  var IconNoteSearch, note_search_default;
  var init_note_search = __esm({
    "lib/note-search.ts"() {
      IconNoteSearch = `<svg id="NoteSearch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="49.5" x2="42.36" y2="42.36" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_search_default = IconNoteSearch;
    }
  });

  // lib/note-star2.ts
  var note_star2_exports = {};
  __export(note_star2_exports, {
    IconNoteStar2: () => IconNoteStar2,
    default: () => note_star2_default
  });
  var IconNoteStar2, note_star2_default;
  var init_note_star2 = __esm({
    "lib/note-star2.ts"() {
      IconNoteStar2 = `<svg id="NoteStar2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M50.22,56.93l8.18,5.85c.39.28.91-.1.76-.56l-3.18-9.55,8.09-5.98c.39-.28.18-.9-.3-.89l-10.06.08-3.18-9.55c-.15-.45-.8-.45-.94,0l-3.04,9.59-10.06.08c-.48,0-.67.62-.28.9l8.18,5.85-3.04,9.59c-.14.46.38.83.76.55l8.09-5.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_star2_default = IconNoteStar2;
    }
  });

  // lib/note-star.ts
  var note_star_exports = {};
  __export(note_star_exports, {
    IconNoteStar: () => IconNoteStar,
    default: () => note_star_default
  });
  var IconNoteStar, note_star_default;
  var init_note_star = __esm({
    "lib/note-star.ts"() {
      IconNoteStar = `<svg id="NoteStar" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,45l8.18,5.85c.39.28.91-.1.76-.56l-3.18-9.55,8.09-5.98c.39-.28.18-.9-.3-.89l-10.06.08-3.18-9.55c-.15-.45-.8-.45-.94,0l-3.04,9.59-10.06.08c-.48,0-.67.62-.28.9l8.18,5.85-3.04,9.59c-.14.46.38.83.76.55l8.09-5.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_star_default = IconNoteStar;
    }
  });

  // lib/note-subtract2.ts
  var note_subtract2_exports = {};
  __export(note_subtract2_exports, {
    IconNoteSubtract2: () => IconNoteSubtract2,
    default: () => note_subtract2_default
  });
  var IconNoteSubtract2, note_subtract2_default;
  var init_note_subtract2 = __esm({
    "lib/note-subtract2.ts"() {
      IconNoteSubtract2 = `<svg id="NoteSubtract2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.82" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="40.5" y1="49.5" x2="58.5" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h23" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_subtract2_default = IconNoteSubtract2;
    }
  });

  // lib/note-subtract.ts
  var note_subtract_exports = {};
  __export(note_subtract_exports, {
    IconNoteSubtract: () => IconNoteSubtract,
    default: () => note_subtract_default
  });
  var IconNoteSubtract, note_subtract_default;
  var init_note_subtract = __esm({
    "lib/note-subtract.ts"() {
      IconNoteSubtract = `<svg id="NoteSubtract" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.82" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="27" y1="36" x2="45" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.82" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.82" x2="22.5" y2="20.32" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.82" x2="31.5" y2="20.32" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.82" x2="40.5" y2="20.32" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.82" x2="49.5" y2="20.32" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_subtract_default = IconNoteSubtract;
    }
  });

  // lib/note-visible2.ts
  var note_visible2_exports = {};
  __export(note_visible2_exports, {
    IconNoteVisible2: () => IconNoteVisible2,
    default: () => note_visible2_default
  });
  var IconNoteVisible2, note_visible2_default;
  var init_note_visible2 = __esm({
    "lib/note-visible2.ts"() {
      IconNoteVisible2 = `<svg id="NoteVisible2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,41.5v-24c0-2.21-1.79-4-4-4H17.5c-2.21,0-4,1.79-4,4v37c0,2.21,1.79,4,4,4h18.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M67.5,54s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="54" cy="54" r="4.5" style="stroke-width: 0px;"/></svg>`;
      note_visible2_default = IconNoteVisible2;
    }
  });

  // lib/note-visible.ts
  var note_visible_exports = {};
  __export(note_visible_exports, {
    IconNoteVisible: () => IconNoteVisible,
    default: () => note_visible_default
  });
  var IconNoteVisible, note_visible_default;
  var init_note_visible = __esm({
    "lib/note-visible.ts"() {
      IconNoteVisible = `<svg id="NoteVisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,40.5s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="40.5" r="4.5" style="stroke-width: 0px;"/></svg>`;
      note_visible_default = IconNoteVisible;
    }
  });

  // lib/note.ts
  var note_exports = {};
  __export(note_exports, {
    IconNote: () => IconNote,
    default: () => note_default
  });
  var IconNote, note_default;
  var init_note = __esm({
    "lib/note.ts"() {
      IconNote = `<svg id="Note" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="6.5" x2="22.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="6.5" x2="31.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="6.5" x2="40.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.5" x2="49.5" y2="20" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      note_default = IconNote;
    }
  });

  // lib/on-target.ts
  var on_target_exports = {};
  __export(on_target_exports, {
    IconOnTarget: () => IconOnTarget,
    default: () => on_target_default
  });
  var IconOnTarget, on_target_default;
  var init_on_target = __esm({
    "lib/on-target.ts"() {
      IconOnTarget = `<svg id="OnTarget" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M58.5,36c0,6.21-2.52,11.84-6.59,15.91-4.07,4.07-9.7,6.59-15.91,6.59s-11.84-2.52-15.91-6.59c-4.07-4.07-6.59-9.7-6.59-15.91s2.52-11.84,6.59-15.91,9.7-6.59,15.91-6.59" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,36c0,3.73-1.51,7.1-3.95,9.55s-5.82,3.95-9.55,3.95-7.1-1.51-9.55-3.95c-2.44-2.44-3.95-5.82-3.95-9.55s1.51-7.1,3.95-9.55c2.44-2.44,5.82-3.95,9.55-3.95" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,36c0,1.24-.5,2.37-1.32,3.18-.81.81-1.94,1.32-3.18,1.32s-2.37-.5-3.18-1.32-1.32-1.94-1.32-3.18.5-2.37,1.32-3.18,1.94-1.32,3.18-1.32" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="40.5 22.5 40.5 31.5 49.5 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="13.5" x2="40.5" y2="31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      on_target_default = IconOnTarget;
    }
  });

  // lib/paragraph.ts
  var paragraph_exports = {};
  __export(paragraph_exports, {
    IconParagraph: () => IconParagraph,
    default: () => paragraph_default
  });
  var IconParagraph, paragraph_default;
  var init_paragraph = __esm({
    "lib/paragraph.ts"() {
      IconParagraph = `<svg id="Paragraph" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="49.5" y1="58.5" x2="49.5" y2="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="58.5" x2="40.5" y2="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.5,45h-10.12c-8.7,0-15.75-7.05-15.75-15.75s7.05-15.75,15.75-15.75h23.62" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      paragraph_default = IconParagraph;
    }
  });

  // lib/performance2.ts
  var performance2_exports = {};
  __export(performance2_exports, {
    IconPerformance2: () => IconPerformance2,
    default: () => performance2_default
  });
  var IconPerformance2, performance2_default;
  var init_performance2 = __esm({
    "lib/performance2.ts"() {
      IconPerformance2 = `<svg id="Performance2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M59.38,54c2.3-3.97,3.62-8.58,3.62-13.5,0-14.91-12.09-27-27-27s-27,12.09-27,27c0,4.92,1.32,9.53,3.62,13.5h46.76Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.2,38.4l-4.2-29.4-4.2,29.4c-.19,1.32.26,2.66,1.2,3.6h0c1.66,1.66,4.34,1.66,6,0h0c.94-.94,1.39-2.28,1.2-3.6Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M27.6,14.83c-10.8,3.53-18.6,13.69-18.6,25.67,0,4.92,1.32,9.53,3.62,13.5h46.76c2.3-3.97,3.62-8.58,3.62-13.5,0-11.98-7.8-22.14-18.6-25.67" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.2,38.4l-4.2-29.4-4.2,29.4c-.19,1.32.26,2.66,1.2,3.6h0c1.66,1.66,4.34,1.66,6,0h0c.94-.94,1.39-2.28,1.2-3.6Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="67.5" y1="40.5" x2="58.5" y2="40.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="40.5" x2="4.5" y2="40.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.73" y1="18.23" x2="20.09" y2="24.59" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.27" y1="18.23" x2="51.91" y2="24.59" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      performance2_default = IconPerformance2;
    }
  });

  // lib/performance.ts
  var performance_exports = {};
  __export(performance_exports, {
    IconPerformance: () => IconPerformance,
    default: () => performance_default
  });
  var IconPerformance, performance_default;
  var init_performance = __esm({
    "lib/performance.ts"() {
      IconPerformance = `<svg id="Performance" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M59.38,54c2.3-3.97,3.62-8.58,3.62-13.5,0-14.91-12.09-27-27-27s-27,12.09-27,27c0,4.92,1.32,9.53,3.62,13.5h46.76Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.2,38.4l-4.2-29.4-4.2,29.4c-.19,1.32.26,2.66,1.2,3.6h0c1.66,1.66,4.34,1.66,6,0h0c.94-.94,1.39-2.28,1.2-3.6Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M27.6,14.83c-10.8,3.53-18.6,13.69-18.6,25.67,0,4.92,1.32,9.53,3.62,13.5h46.76c2.3-3.97,3.62-8.58,3.62-13.5,0-11.98-7.8-22.14-18.6-25.67" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.2,38.4l-4.2-29.4-4.2,29.4c-.19,1.32.26,2.66,1.2,3.6h0c1.66,1.66,4.34,1.66,6,0h0c.94-.94,1.39-2.28,1.2-3.6Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      performance_default = IconPerformance;
    }
  });

  // lib/pin-tilted.ts
  var pin_tilted_exports = {};
  __export(pin_tilted_exports, {
    IconPinTilted: () => IconPinTilted,
    default: () => pin_tilted_default
  });
  var IconPinTilted, pin_tilted_default;
  var init_pin_tilted = __esm({
    "lib/pin-tilted.ts"() {
      IconPinTilted = `<svg id="PinTilted" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M43.73,37.82l12.73-12.73-9.55-9.55-12.73,12.73c-5.55-1.97-11.97-.75-16.41,3.69l22.27,22.27c4.44-4.44,5.66-10.87,3.69-16.41Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="29.41" y1="42.59" x2="13.5" y2="58.5" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="42.14" y1="10.77" x2="61.23" y2="29.86" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M43.73,37.82l12.73-12.73-9.55-9.55-12.73,12.73c-5.55-1.97-11.97-.75-16.41,3.69l22.27,22.27c4.44-4.44,5.66-10.87,3.69-16.41Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      pin_tilted_default = IconPinTilted;
    }
  });

  // lib/pin.ts
  var pin_exports = {};
  __export(pin_exports, {
    IconPin: () => IconPin,
    default: () => pin_default
  });
  var IconPin, pin_default;
  var init_pin = __esm({
    "lib/pin.ts"() {
      IconPin = `<svg id="Pin" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M42.75,31.5V13.5h-13.5v18c-5.32,2.53-9,7.93-9,14.21h31.5c0-6.28-3.68-11.68-9-14.21Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="36" y1="45" x2="36" y2="67.5" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="22.5" y1="13.5" x2="49.5" y2="13.5" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M42.75,31.5V13.5h-13.5v18c-5.32,2.53-9,7.93-9,14.21h31.5c0-6.28-3.68-11.68-9-14.21Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      pin_default = IconPin;
    }
  });

  // lib/planner.ts
  var planner_exports = {};
  __export(planner_exports, {
    IconPlanner: () => IconPlanner,
    default: () => planner_default
  });
  var IconPlanner, planner_default;
  var init_planner = __esm({
    "lib/planner.ts"() {
      IconPlanner = `<svg id="Planner" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 72 72"><defs><clipPath id="clippath"><rect x="9" y="13.5" width="54" height="49.5" rx="4" ry="4" style="fill: none; stroke-width: 0px;"/></clipPath></defs><g style="clip-path: url(#clippath);"><g><rect x="4.5" y="22.5" width="18" height="9" rx="1" ry="1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="18" y="40.5" width="13.5" height="9" rx="1" ry="1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="-4.5" y="40.5" width="13.5" height="9" rx="1" ry="1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="22.5" width="13.5" height="9" rx="1" ry="1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="40.5" y="54" width="27" height="9" rx="1" ry="1" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="4.5" y="22.5" width="18" height="9" rx="1" ry="1" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="40.5" width="13.5" height="9" rx="1" ry="1" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="72" y="40.5" width="13.5" height="9" rx="1" ry="1" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="-4.5" y="40.5" width="13.5" height="9" rx="1" ry="1" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="40.5" y="22.5" width="13.5" height="9" rx="1" ry="1" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="40.5" y="54" width="27" height="9" rx="1" ry="1" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></g><rect x="9" y="13.5" width="54" height="49.5" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="9" x2="18" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="9" x2="27" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="9" x2="45" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54" y1="9" x2="54" y2="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      planner_default = IconPlanner;
    }
  });

  // lib/pointer-arrow-line.ts
  var pointer_arrow_line_exports = {};
  __export(pointer_arrow_line_exports, {
    IconPointerArrowLine: () => IconPointerArrowLine,
    default: () => pointer_arrow_line_default
  });
  var IconPointerArrowLine, pointer_arrow_line_default;
  var init_pointer_arrow_line = __esm({
    "lib/pointer-arrow-line.ts"() {
      IconPointerArrowLine = `<svg id="PointerArrowLine" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="13.5 13.5 36 63 45 45 63 36 13.5 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="45" y1="45" x2="13.5" y2="13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="45" x2="63" y2="36" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="45" y1="45" x2="63" y2="36" style="fill: red; stroke-width: 0px;"/><polygon points="13.5 13.5 36 63 45 45 63 36 13.5 13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      pointer_arrow_line_default = IconPointerArrowLine;
    }
  });

  // lib/pointer-arrow.ts
  var pointer_arrow_exports = {};
  __export(pointer_arrow_exports, {
    IconPointerArrow: () => IconPointerArrow,
    default: () => pointer_arrow_default
  });
  var IconPointerArrow, pointer_arrow_default;
  var init_pointer_arrow = __esm({
    "lib/pointer-arrow.ts"() {
      IconPointerArrow = `<svg id="PointerArrow" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="9 13.5 31.5 63 40.5 45 58.5 36 9 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="9 13.5 31.5 63 40.5 45 58.5 36 9 13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      pointer_arrow_default = IconPointerArrow;
    }
  });

  // lib/pointer-cross.ts
  var pointer_cross_exports = {};
  __export(pointer_cross_exports, {
    IconPointerCross: () => IconPointerCross,
    default: () => pointer_cross_default
  });
  var IconPointerCross, pointer_cross_default;
  var init_pointer_cross = __esm({
    "lib/pointer-cross.ts"() {
      IconPointerCross = `<svg id="PointerCross" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="9" x2="36" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="40.5" x2="36" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="36" x2="31.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="36" x2="63" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      pointer_cross_default = IconPointerCross;
    }
  });

  // lib/pointer-hand.ts
  var pointer_hand_exports = {};
  __export(pointer_hand_exports, {
    IconPointerHand: () => IconPointerHand,
    default: () => pointer_hand_default
  });
  var IconPointerHand, pointer_hand_default;
  var init_pointer_hand = __esm({
    "lib/pointer-hand.ts"() {
      IconPointerHand = `<svg id="PointerHand" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54,36c-2.49,0-4.5,2.01-4.5,4.5h0v-4.5c0-2.49-2.01-4.5-4.5-4.5s-4.5,2.01-4.5,4.5v4.5-9c0-2.49-2.01-4.5-4.5-4.5s-4.5,2.01-4.5,4.5v9V13.5c0-2.49-2.01-4.5-4.5-4.5s-4.5,2.01-4.5,4.5v31.5l-9-9-4.5,4.15s4.5,13.85,18,27.35h22.5s9-9,9-22.5v-4.5c0-2.49-2.01-4.5-4.5-4.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M54,36c-2.49,0-4.5,2.01-4.5,4.5h0v-4.5c0-2.49-2.01-4.5-4.5-4.5s-4.5,2.01-4.5,4.5v4.5-9c0-2.49-2.01-4.5-4.5-4.5s-4.5,2.01-4.5,4.5v9V13.5c0-2.49-2.01-4.5-4.5-4.5s-4.5,2.01-4.5,4.5v31.5l-9-9-4.5,4.15s4.5,13.85,18,27.35h22.5s9-9,9-22.5v-4.5c0-2.49-2.01-4.5-4.5-4.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      pointer_hand_default = IconPointerHand;
    }
  });

  // lib/pointer-left.ts
  var pointer_left_exports = {};
  __export(pointer_left_exports, {
    IconPointerLeft: () => IconPointerLeft,
    default: () => pointer_left_default
  });
  var IconPointerLeft, pointer_left_default;
  var init_pointer_left = __esm({
    "lib/pointer-left.ts"() {
      IconPointerLeft = `<svg id="PointerLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="13.5 13.5 31.5 58.5 39 43.5 54 58.5 58.5 54 43.5 39 58.5 31.5 13.5 13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="13.5 13.5 31.5 58.5 39 43.5 54 58.5 58.5 54 43.5 39 58.5 31.5 13.5 13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      pointer_left_default = IconPointerLeft;
    }
  });

  // lib/pointer-mouse.ts
  var pointer_mouse_exports = {};
  __export(pointer_mouse_exports, {
    IconPointerMouse: () => IconPointerMouse,
    default: () => pointer_mouse_default
  });
  var IconPointerMouse, pointer_mouse_default;
  var init_pointer_mouse = __esm({
    "lib/pointer-mouse.ts"() {
      IconPointerMouse = `<svg id="PointerMouse" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,18c-8.13,0-14.73,6.59-14.73,14.73v15.55c0,8.13,6.59,14.73,14.73,14.73s14.73-6.59,14.73-14.73v-15.55c0-8.13-6.59-14.73-14.73-14.73Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="22.5" y1="36" x2="49.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="4.5" x2="36" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,18c-8.13,0-14.73,6.59-14.73,14.73v15.55c0,8.13,6.59,14.73,14.73,14.73s14.73-6.59,14.73-14.73v-15.55c0-8.13-6.59-14.73-14.73-14.73Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      pointer_mouse_default = IconPointerMouse;
    }
  });

  // lib/pointer-pen.ts
  var pointer_pen_exports = {};
  __export(pointer_pen_exports, {
    IconPointerPen: () => IconPointerPen,
    default: () => pointer_pen_default
  });
  var IconPointerPen, pointer_pen_default;
  var init_pointer_pen = __esm({
    "lib/pointer-pen.ts"() {
      IconPointerPen = `<svg id="PointerPen" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,9l-15.55,27.21c-1.5,2.63-1.39,5.89.29,8.41l6.26,9.39h18l6.26-9.39c1.68-2.52,1.79-5.78.29-8.41l-15.55-27.21Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="36" x2="36" y2="9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,9l-15.55,27.21c-1.5,2.63-1.39,5.89.29,8.41l6.26,9.39h18l6.26-9.39c1.68-2.52,1.79-5.78.29-8.41l-15.55-27.21Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M27,54h18v7c0,1.1-.9,2-2,2h-14c-1.1,0-2-.9-2-2v-7h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      pointer_pen_default = IconPointerPen;
    }
  });

  // lib/pointer-target.ts
  var pointer_target_exports = {};
  __export(pointer_target_exports, {
    IconPointerTarget: () => IconPointerTarget,
    default: () => pointer_target_default
  });
  var IconPointerTarget, pointer_target_default;
  var init_pointer_target = __esm({
    "lib/pointer-target.ts"() {
      IconPointerTarget = `<svg id="PointerTarget" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="36" r="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="4.5" x2="36" y2="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="49.5" x2="36" y2="67.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="4.5" y1="36" x2="22.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="36" x2="67.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="40.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="36" x2="40.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      pointer_target_default = IconPointerTarget;
    }
  });

  // lib/pointer-text.ts
  var pointer_text_exports = {};
  __export(pointer_text_exports, {
    IconPointerText: () => IconPointerText,
    default: () => pointer_text_default
  });
  var IconPointerText, pointer_text_default;
  var init_pointer_text = __esm({
    "lib/pointer-text.ts"() {
      IconPointerText = `<svg id="PointerText" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,18c0-4.97-4.03-9-9-9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M45,9c-4.97,0-9,4.03-9,9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,54c0,4.97,4.03,9,9,9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M27,63c4.97,0,9-4.03,9-9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="18" x2="36" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="36" x2="40.5" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      pointer_text_default = IconPointerText;
    }
  });

  // lib/question-mark-fat.ts
  var question_mark_fat_exports = {};
  __export(question_mark_fat_exports, {
    IconQuestionMarkFat: () => IconQuestionMarkFat,
    default: () => question_mark_fat_default
  });
  var IconQuestionMarkFat, question_mark_fat_default;
  var init_question_mark_fat = __esm({
    "lib/question-mark-fat.ts"() {
      IconQuestionMarkFat = `<svg id="QuestionMarkFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="54" x2="36" y2="54" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width: 8px;"/><path d="M25.5,24c0-5.8,4.7-10.5,10.5-10.5s10.5,4.7,10.5,10.5c0,10.5-10.5,10.5-10.5,21" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      question_mark_fat_default = IconQuestionMarkFat;
    }
  });

  // lib/question-mark-l.ts
  var question_mark_l_exports = {};
  __export(question_mark_l_exports, {
    IconQuestionMarkL: () => IconQuestionMarkL,
    default: () => question_mark_l_default
  });
  var IconQuestionMarkL, question_mark_l_default;
  var init_question_mark_l = __esm({
    "lib/question-mark-l.ts"() {
      IconQuestionMarkL = `<svg id="QuestionMarkL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="54" x2="36" y2="54" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M25.5,24c0-5.8,4.7-10.5,10.5-10.5s10.5,4.7,10.5,10.5c0,10.5-10.5,10.5-10.5,21" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      question_mark_l_default = IconQuestionMarkL;
    }
  });

  // lib/question-mark-m.ts
  var question_mark_m_exports = {};
  __export(question_mark_m_exports, {
    IconQuestionMarkM: () => IconQuestionMarkM,
    default: () => question_mark_m_default
  });
  var IconQuestionMarkM, question_mark_m_default;
  var init_question_mark_m = __esm({
    "lib/question-mark-m.ts"() {
      IconQuestionMarkM = `<svg id="QuestionMarkM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="54" x2="36" y2="54" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M28.5,30c0-4.14,3.36-7.5,7.5-7.5s7.5,3.36,7.5,7.5c0,7.5-7.5,7.5-7.5,15" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      question_mark_m_default = IconQuestionMarkM;
    }
  });

  // lib/question-mark-s.ts
  var question_mark_s_exports = {};
  __export(question_mark_s_exports, {
    IconQuestionMarkS: () => IconQuestionMarkS,
    default: () => question_mark_s_default
  });
  var IconQuestionMarkS, question_mark_s_default;
  var init_question_mark_s = __esm({
    "lib/question-mark-s.ts"() {
      IconQuestionMarkS = `<svg id="QuestionMarkS" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="49.5" x2="36" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30,33c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      question_mark_s_default = IconQuestionMarkS;
    }
  });

  // lib/remove-lines.ts
  var remove_lines_exports = {};
  __export(remove_lines_exports, {
    IconRemoveLines: () => IconRemoveLines,
    default: () => remove_lines_default
  });
  var IconRemoveLines, remove_lines_default;
  var init_remove_lines = __esm({
    "lib/remove-lines.ts"() {
      IconRemoveLines = `<svg id="RemoveLines" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="54" x2="40.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="30" x2="13.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="42" x2="40.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.64" y1="55.86" x2="60.36" y2="43.14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="47.64" y1="43.14" x2="60.36" y2="55.86" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      remove_lines_default = IconRemoveLines;
    }
  });

  // lib/search-fat.ts
  var search_fat_exports = {};
  __export(search_fat_exports, {
    IconSearchFat: () => IconSearchFat,
    default: () => search_fat_default
  });
  var IconSearchFat, search_fat_default;
  var init_search_fat = __esm({
    "lib/search-fat.ts"() {
      IconSearchFat = `<svg id="SearchFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="58.5" y1="58.5" x2="44.23" y2="44.23" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width: 8px;"/><circle cx="31.5" cy="31.5" r="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="31.5" cy="31.5" r="18" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      search_fat_default = IconSearchFat;
    }
  });

  // lib/search-l.ts
  var search_l_exports = {};
  __export(search_l_exports, {
    IconSearchL: () => IconSearchL,
    default: () => search_l_default
  });
  var IconSearchL, search_l_default;
  var init_search_l = __esm({
    "lib/search-l.ts"() {
      IconSearchL = `<svg id="SearchL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="58.5" y1="58.5" x2="44.23" y2="44.23" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="31.5" cy="31.5" r="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="31.5" cy="31.5" r="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      search_l_default = IconSearchL;
    }
  });

  // lib/search-m.ts
  var search_m_exports = {};
  __export(search_m_exports, {
    IconSearchM: () => IconSearchM,
    default: () => search_m_default
  });
  var IconSearchM, search_m_default;
  var init_search_m = __esm({
    "lib/search-m.ts"() {
      IconSearchM = `<svg id="SearchM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="54" y1="54" x2="42.58" y2="42.58" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="32.4" cy="32.4" r="14.4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="32.4" cy="32.4" r="14.4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      search_m_default = IconSearchM;
    }
  });

  // lib/search-small.ts
  var search_small_exports = {};
  __export(search_small_exports, {
    IconSearchSmall: () => IconSearchSmall,
    default: () => search_small_default
  });
  var IconSearchSmall, search_small_default;
  var init_search_small = __esm({
    "lib/search-small.ts"() {
      IconSearchSmall = `<svg id="SearchSmall" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="49.5" y1="49.5" x2="40.94" y2="40.94" style="fill: white; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="33.3" cy="33.3" r="10.8" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="33.3" cy="33.3" r="10.8" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      search_small_default = IconSearchSmall;
    }
  });

  // lib/section.ts
  var section_exports = {};
  __export(section_exports, {
    IconSection: () => IconSection,
    default: () => section_default
  });
  var IconSection, section_default;
  var init_section = __esm({
    "lib/section.ts"() {
      IconSection = `<svg id="Section" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M54.5,13.5h-14v2.5c0,1.1-.9,2-2,2H13.5v36.5c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V17.5c0-2.21-1.79-4-4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M40.5,13.5h14c2.21,0,4,1.79,4,4v37c0,2.21-1.79,4-4,4H17.5c-2.21,0-4-1.79-4-4V18" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="9" y="9" width="31.5" height="9" rx="2" ry="2" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      section_default = IconSection;
    }
  });

  // lib/settings2.ts
  var settings2_exports = {};
  __export(settings2_exports, {
    IconSettings2: () => IconSettings2,
    default: () => settings2_default
  });
  var IconSettings2, settings2_default;
  var init_settings2 = __esm({
    "lib/settings2.ts"() {
      IconSettings2 = `<svg id="Settings2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="24.75" cy="22.5" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="47.25" cy="49.5" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="40.5" y1="49.5" x2="9" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="22.5" x2="31.5" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="22.5" x2="9" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="49.5" x2="54" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="24.75" cy="22.5" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="47.25" cy="49.5" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      settings2_default = IconSettings2;
    }
  });

  // lib/settings3.ts
  var settings3_exports = {};
  __export(settings3_exports, {
    IconSettings3: () => IconSettings3,
    default: () => settings3_default
  });
  var IconSettings3, settings3_default;
  var init_settings3 = __esm({
    "lib/settings3.ts"() {
      IconSettings3 = `<svg id="Settings3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="29.25" cy="22.5" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="42.75" cy="49.5" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="31.5" y1="49.5" x2="9" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="22.5" x2="40.5" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="22.5" x2="9" y2="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="49.5" x2="54" y2="49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="29.25" cy="22.5" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="42.75" cy="49.5" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      settings3_default = IconSettings3;
    }
  });

  // lib/settings4.ts
  var settings4_exports = {};
  __export(settings4_exports, {
    IconSettings4: () => IconSettings4,
    default: () => settings4_default
  });
  var IconSettings4, settings4_default;
  var init_settings4 = __esm({
    "lib/settings4.ts"() {
      IconSettings4 = `<svg id="Settings4" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="24.75" cy="18" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="47.25" cy="36" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="33.75" cy="54" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="36" x2="9" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="18" x2="36" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="18" x2="9" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="54" x2="45" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="54" x2="9" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="24.75" cy="18" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="47.25" cy="36" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="33.75" cy="54" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      settings4_default = IconSettings4;
    }
  });

  // lib/settings5.ts
  var settings5_exports = {};
  __export(settings5_exports, {
    IconSettings5: () => IconSettings5,
    default: () => settings5_default
  });
  var IconSettings5, settings5_default;
  var init_settings5 = __esm({
    "lib/settings5.ts"() {
      IconSettings5 = `<svg id="Settings5" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="9" y1="54" x2="63" y2="54" style="fill: none;  stroke-dasharray: 0 0 32 22; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><circle cx="51.75" cy="54" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="51.75" cy="54" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="9" y1="36" x2="63" y2="36" style="fill: none;  stroke-dasharray: 0 0 32 22; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><circle cx="51.75" cy="36" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="51.75" cy="36" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="9" y1="18" x2="63" y2="18" style="fill: none;  stroke-dasharray: 0 0 32 22; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><circle cx="51.75" cy="18" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="51.75" cy="18" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      settings5_default = IconSettings5;
    }
  });

  // lib/settings.ts
  var settings_exports = {};
  __export(settings_exports, {
    IconSettings: () => IconSettings,
    default: () => settings_default
  });
  var IconSettings, settings_default;
  var init_settings = __esm({
    "lib/settings.ts"() {
      IconSettings = `<svg id="Settings" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="20.25" cy="18" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="51.75" cy="36" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="33.75" cy="54" r="6.75" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="45" y1="36" x2="9" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="18" x2="27" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="18" x2="9" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="63" y1="54" x2="40.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="54" x2="9" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="20.25" cy="18" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="51.75" cy="36" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="33.75" cy="54" r="6.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      settings_default = IconSettings;
    }
  });

  // lib/simple-sun.ts
  var simple_sun_exports = {};
  __export(simple_sun_exports, {
    IconSimpleSun: () => IconSimpleSun,
    default: () => simple_sun_default
  });
  var IconSimpleSun, simple_sun_default;
  var init_simple_sun = __esm({
    "lib/simple-sun.ts"() {
      IconSimpleSun = `<svg id="SimpleSun" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="49.5" x2="36" y2="67.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="4.5" x2="36" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="36" x2="67.5" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="4.5" y1="36" x2="22.5" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45.55" y1="45.55" x2="58.27" y2="58.27" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.73" y1="13.73" x2="26.45" y2="26.45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45.55" y1="26.45" x2="58.27" y2="13.73" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.73" y1="58.27" x2="26.45" y2="45.55" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      simple_sun_default = IconSimpleSun;
    }
  });

  // lib/speech-balloon2.ts
  var speech_balloon2_exports = {};
  __export(speech_balloon2_exports, {
    IconSpeechBalloon2: () => IconSpeechBalloon2,
    default: () => speech_balloon2_default
  });
  var IconSpeechBalloon2, speech_balloon2_default;
  var init_speech_balloon2 = __esm({
    "lib/speech-balloon2.ts"() {
      IconSpeechBalloon2 = `<svg id="SpeechBalloon2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M63,30.6c0-14.91-12.09-21.6-27-21.6S9,15.69,9,30.6s12.09,21.6,27,21.6c1.63,0,3.22-.08,4.77-.25l9.74,9.74c.86.86,2.34.25,2.34-.97v-12.32c6.18-3.43,10.15-9.27,10.15-17.81Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M63,30.6c0-14.91-12.09-21.6-27-21.6S9,15.69,9,30.6s12.09,21.6,27,21.6c1.63,0,3.22-.08,4.77-.25l9.74,9.74c.86.86,2.34.25,2.34-.97v-12.32c6.18-3.43,10.15-9.27,10.15-17.81Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      speech_balloon2_default = IconSpeechBalloon2;
    }
  });

  // lib/speech-balloon-square2.ts
  var speech_balloon_square2_exports = {};
  __export(speech_balloon_square2_exports, {
    IconSpeechBalloonSquare2: () => IconSpeechBalloonSquare2,
    default: () => speech_balloon_square2_default
  });
  var IconSpeechBalloonSquare2, speech_balloon_square2_default;
  var init_speech_balloon_square2 = __esm({
    "lib/speech-balloon-square2.ts"() {
      IconSpeechBalloonSquare2 = `<svg id="SpeechBalloonSquare2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54.5,13.5H17.5c-2.21,0-4,1.79-4,4v28c0,2.21,1.79,4,4,4h23l9,9v-9h5c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M54.5,13.5H17.5c-2.21,0-4,1.79-4,4v28c0,2.21,1.79,4,4,4h23l9,9v-9h5c2.21,0,4-1.79,4-4v-28c0-2.21-1.79-4-4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      speech_balloon_square2_default = IconSpeechBalloonSquare2;
    }
  });

  // lib/speech-balloon-square-copy.ts
  var speech_balloon_square_copy_exports = {};
  __export(speech_balloon_square_copy_exports, {
    IconSpeechBalloonSquareCopy: () => IconSpeechBalloonSquareCopy,
    default: () => speech_balloon_square_copy_default
  });
  var IconSpeechBalloonSquareCopy, speech_balloon_square_copy_default;
  var init_speech_balloon_square_copy = __esm({
    "lib/speech-balloon-square-copy.ts"() {
      IconSpeechBalloonSquareCopy = `<svg id="SpeechBalloonSquareCopy" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54.5,22.5h-28c-2.21,0-4,1.79-4,4v19c0,2.21,1.79,4,4,4h14s9,9,9,9v-9h5c2.21,0,4-1.79,4-4v-19c0-2.21-1.79-4-4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M23.67,48.33c.72.72,1.72,1.17,2.83,1.17h14s9,9,9,9v-9h5c2.21,0,4-1.79,4-4v-19c0-2.21-1.79-4-4-4h-5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,13.5h28c2.21,0,4,1.79,4,4v19c0,2.21-1.79,4-4,4h-14s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-19c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,13.5h28c2.21,0,4,1.79,4,4v19c0,2.21-1.79,4-4,4h-14s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-19c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      speech_balloon_square_copy_default = IconSpeechBalloonSquareCopy;
    }
  });

  // lib/speech-balloon-square.ts
  var speech_balloon_square_exports = {};
  __export(speech_balloon_square_exports, {
    IconSpeechBalloonSquare: () => IconSpeechBalloonSquare,
    default: () => speech_balloon_square_default
  });
  var IconSpeechBalloonSquare, speech_balloon_square_default;
  var init_speech_balloon_square = __esm({
    "lib/speech-balloon-square.ts"() {
      IconSpeechBalloonSquare = `<svg id="SpeechBalloonSquare" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      speech_balloon_square_default = IconSpeechBalloonSquare;
    }
  });

  // lib/speech-balloon.ts
  var speech_balloon_exports = {};
  __export(speech_balloon_exports, {
    IconSpeechBalloon: () => IconSpeechBalloon,
    default: () => speech_balloon_default
  });
  var IconSpeechBalloon, speech_balloon_default;
  var init_speech_balloon = __esm({
    "lib/speech-balloon.ts"() {
      IconSpeechBalloon = `<svg id="SpeechBalloon" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M9,31.5c0-14.91,12.09-21.6,27-21.6,14.91,0,27,6.69,27,21.6s-12.09,21.6-27,21.6c-1.63,0-3.22-.08-4.77-.25l-9.74,9.74c-.86.86-2.34.25-2.34-.97v-12.32c-6.18-3.43-10.15-9.27-10.15-17.81Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M9,31.5c0-14.91,12.09-21.6,27-21.6,14.91,0,27,6.69,27,21.6s-12.09,21.6-27,21.6c-1.63,0-3.22-.08-4.77-.25l-9.74,9.74c-.86.86-2.34.25-2.34-.97v-12.32c-6.18-3.43-10.15-9.27-10.15-17.81Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      speech_balloon_default = IconSpeechBalloon;
    }
  });

  // lib/speech-balloons.ts
  var speech_balloons_exports = {};
  __export(speech_balloons_exports, {
    IconSpeechBalloons: () => IconSpeechBalloons,
    default: () => speech_balloons_default
  });
  var IconSpeechBalloons, speech_balloons_default;
  var init_speech_balloons = __esm({
    "lib/speech-balloons.ts"() {
      IconSpeechBalloons = `<svg id="SpeechBalloons" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M63,40.5c0-11.18-9.07-16.2-20.25-16.2s-20.25,5.02-20.25,16.2,9.07,16.2,20.25,16.2c2.98,0,5.8-.37,8.35-1.1l5.7,5.7c.63.63,1.71.18,1.71-.71v-8.98c2.81-2.62,4.5-6.29,4.5-11.11Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M49.16,24.92c-1.71-8.74-9.97-12.71-19.91-12.71-11.18,0-20.25,5.02-20.25,16.2,0,4.82,1.69,8.49,4.5,11.11v8.98c0,.89,1.08,1.34,1.71.71l5.7-5.7c.63.18,1.28.34,1.94.48" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,40.5c0-11.18-9.07-16.2-20.25-16.2s-20.25,5.02-20.25,16.2,9.07,16.2,20.25,16.2c2.98,0,5.8-.37,8.35-1.1l5.7,5.7c.63.63,1.71.18,1.71-.71v-8.98c2.81-2.62,4.5-6.29,4.5-11.11Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      speech_balloons_default = IconSpeechBalloons;
    }
  });

  // lib/squared-add.ts
  var squared_add_exports = {};
  __export(squared_add_exports, {
    IconSquaredAdd: () => IconSquaredAdd,
    default: () => squared_add_default
  });
  var IconSquaredAdd, squared_add_default;
  var init_squared_add = __esm({
    "lib/squared-add.ts"() {
      IconSquaredAdd = `<svg id="SquaredAdd" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="36" x2="45" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      squared_add_default = IconSquaredAdd;
    }
  });

  // lib/squared-broken-heart.ts
  var squared_broken_heart_exports = {};
  __export(squared_broken_heart_exports, {
    IconSquaredBrokenHeart: () => IconSquaredBrokenHeart,
    default: () => squared_broken_heart_default
  });
  var IconSquaredBrokenHeart, squared_broken_heart_default;
  var init_squared_broken_heart = __esm({
    "lib/squared-broken-heart.ts"() {
      IconSquaredBrokenHeart = `<svg id="SquaredBrokenHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="36 31.5 38.25 38.25 33.75 40.5 36 49.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,49.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      squared_broken_heart_default = IconSquaredBrokenHeart;
    }
  });

  // lib/squared-check.ts
  var squared_check_exports = {};
  __export(squared_check_exports, {
    IconSquaredCheck: () => IconSquaredCheck,
    default: () => squared_check_default
  });
  var IconSquaredCheck, squared_check_default;
  var init_squared_check = __esm({
    "lib/squared-check.ts"() {
      IconSquaredCheck = `<svg id="SquaredCheck" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 32.14 34.71 45 45 27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      squared_check_default = IconSquaredCheck;
    }
  });

  // lib/squared-edit.ts
  var squared_edit_exports = {};
  __export(squared_edit_exports, {
    IconSquaredEdit: () => IconSquaredEdit,
    default: () => squared_edit_default
  });
  var IconSquaredEdit, squared_edit_default;
  var init_squared_edit = __esm({
    "lib/squared-edit.ts"() {
      IconSquaredEdit = `<svg id="SquaredEdit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M23.97,42.14l-1.47,7.36,7.36-1.47c.39-.08.74-.27,1.02-.55l14.07-14.07c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-14.07,14.07c-.28.28-.47.63-.55,1.02Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="35.23" y1="30.41" x2="41.59" y2="36.77" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      squared_edit_default = IconSquaredEdit;
    }
  });

  // lib/squared-exclamation-mark.ts
  var squared_exclamation_mark_exports = {};
  __export(squared_exclamation_mark_exports, {
    IconSquaredExclamationMark: () => IconSquaredExclamationMark,
    default: () => squared_exclamation_mark_default
  });
  var IconSquaredExclamationMark, squared_exclamation_mark_default;
  var init_squared_exclamation_mark = __esm({
    "lib/squared-exclamation-mark.ts"() {
      IconSquaredExclamationMark = `<svg id="SquaredExclamationMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="24.75" x2="36" y2="42.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="47.25" x2="36" y2="47.25" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      squared_exclamation_mark_default = IconSquaredExclamationMark;
    }
  });

  // lib/squared-heart.ts
  var squared_heart_exports = {};
  __export(squared_heart_exports, {
    IconSquaredHeart: () => IconSquaredHeart,
    default: () => squared_heart_default
  });
  var IconSquaredHeart, squared_heart_default;
  var init_squared_heart = __esm({
    "lib/squared-heart.ts"() {
      IconSquaredHeart = `<svg id="SquaredHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,49.5c-23.38-12.24-11.69-30.85,0-18.36,11.69-12.48,23.38,6.12,0,18.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      squared_heart_default = IconSquaredHeart;
    }
  });

  // lib/squared-info.ts
  var squared_info_exports = {};
  __export(squared_info_exports, {
    IconSquaredInfo: () => IconSquaredInfo,
    default: () => squared_info_default
  });
  var IconSquaredInfo, squared_info_default;
  var init_squared_info = __esm({
    "lib/squared-info.ts"() {
      IconSquaredInfo = `<svg id="SquaredInfo" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="36 49.5 36 36 31.5 36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="27" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      squared_info_default = IconSquaredInfo;
    }
  });

  // lib/squared-invisible.ts
  var squared_invisible_exports = {};
  __export(squared_invisible_exports, {
    IconSquaredInvisible: () => IconSquaredInvisible,
    default: () => squared_invisible_default
  });
  var IconSquaredInvisible, squared_invisible_default;
  var init_squared_invisible = __esm({
    "lib/squared-invisible.ts"() {
      IconSquaredInvisible = `<svg id="SquaredInvisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,36s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="27" x2="22.5" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      squared_invisible_default = IconSquaredInvisible;
    }
  });

  // lib/squared-multiply.ts
  var squared_multiply_exports = {};
  __export(squared_multiply_exports, {
    IconSquaredMultiply: () => IconSquaredMultiply,
    default: () => squared_multiply_default
  });
  var IconSquaredMultiply, squared_multiply_default;
  var init_squared_multiply = __esm({
    "lib/squared-multiply.ts"() {
      IconSquaredMultiply = `<svg id="SquaredMultiply" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.64" y1="29.64" x2="42.36" y2="42.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.36" y1="29.64" x2="29.64" y2="42.36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      squared_multiply_default = IconSquaredMultiply;
    }
  });

  // lib/squared-question-mark.ts
  var squared_question_mark_exports = {};
  __export(squared_question_mark_exports, {
    IconSquaredQuestionMark: () => IconSquaredQuestionMark,
    default: () => squared_question_mark_default
  });
  var IconSquaredQuestionMark, squared_question_mark_default;
  var init_squared_question_mark = __esm({
    "lib/squared-question-mark.ts"() {
      IconSquaredQuestionMark = `<svg id="SquaredQuestionMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="47.25" x2="36" y2="47.25" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30,30.75c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      squared_question_mark_default = IconSquaredQuestionMark;
    }
  });

  // lib/squared-search.ts
  var squared_search_exports = {};
  __export(squared_search_exports, {
    IconSquaredSearch: () => IconSquaredSearch,
    default: () => squared_search_default
  });
  var IconSquaredSearch, squared_search_default;
  var init_squared_search = __esm({
    "lib/squared-search.ts"() {
      IconSquaredSearch = `<svg id="SquaredSearch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="49.5" y1="49.5" x2="42.36" y2="42.36" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      squared_search_default = IconSquaredSearch;
    }
  });

  // lib/squared-star.ts
  var squared_star_exports = {};
  __export(squared_star_exports, {
    IconSquaredStar: () => IconSquaredStar,
    default: () => squared_star_default
  });
  var IconSquaredStar, squared_star_default;
  var init_squared_star = __esm({
    "lib/squared-star.ts"() {
      IconSquaredStar = `<svg id="SquaredStar" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,43.43l8.18,5.85c.39.28.91-.1.76-.56l-3.18-9.55,8.09-5.98c.39-.28.18-.9-.3-.89l-10.06.08-3.18-9.55c-.15-.45-.8-.45-.94,0l-3.04,9.59-10.06.08c-.48,0-.67.62-.28.9l8.18,5.85-3.04,9.59c-.14.46.38.83.76.55l8.09-5.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      squared_star_default = IconSquaredStar;
    }
  });

  // lib/squared-subtract.ts
  var squared_subtract_exports = {};
  __export(squared_subtract_exports, {
    IconSquaredSubtract: () => IconSquaredSubtract,
    default: () => squared_subtract_default
  });
  var IconSquaredSubtract, squared_subtract_default;
  var init_squared_subtract = __esm({
    "lib/squared-subtract.ts"() {
      IconSquaredSubtract = `<svg id="SquaredSubtract" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="36" x2="45" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      squared_subtract_default = IconSquaredSubtract;
    }
  });

  // lib/squared-visible.ts
  var squared_visible_exports = {};
  __export(squared_visible_exports, {
    IconSquaredVisible: () => IconSquaredVisible,
    default: () => squared_visible_default
  });
  var IconSquaredVisible, squared_visible_default;
  var init_squared_visible = __esm({
    "lib/squared-visible.ts"() {
      IconSquaredVisible = `<svg id="SquaredVisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,36s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="4.5" style="stroke-width: 0px;"/></svg>`;
      squared_visible_default = IconSquaredVisible;
    }
  });

  // lib/squared.ts
  var squared_exports = {};
  __export(squared_exports, {
    IconSquared: () => IconSquared,
    default: () => squared_default
  });
  var IconSquared, squared_default;
  var init_squared = __esm({
    "lib/squared.ts"() {
      IconSquared = `<svg id="Squared" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="13.5" width="45" height="45" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      squared_default = IconSquared;
    }
  });

  // lib/stamp.ts
  var stamp_exports = {};
  __export(stamp_exports, {
    IconStamp: () => IconStamp,
    default: () => stamp_default
  });
  var IconStamp, stamp_default;
  var init_stamp = __esm({
    "lib/stamp.ts"() {
      IconStamp = `<svg id="Stamp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M30.37,39.91c-.16,1.75-.55,3.49-1.25,5.09h13.74c-.06-.14-.13-.28-.2-.41-2-4.51-1.42-9.87,1.67-13.71,1.47-1.83,2.35-4.16,2.35-6.69,0-6.32-5.48-11.35-11.94-10.62-4.77.54-8.67,4.33-9.33,9.09-.42,3,.42,5.81,2.06,7.97,2.03,2.68,3.19,5.94,2.89,9.28Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="18 54 18 49.5 29.12 45 42.86 45 54 49.5 54 54 18 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30.37,39.91c-.16,1.75-.55,3.49-1.25,5.09h13.74c-.06-.14-.13-.28-.2-.41-2-4.51-1.42-9.87,1.67-13.71,1.47-1.83,2.35-4.16,2.35-6.69,0-6.32-5.48-11.35-11.94-10.62-4.77.54-8.67,4.33-9.33,9.09-.42,3,.42,5.81,2.06,7.97,2.03,2.68,3.19,5.94,2.89,9.28Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="63" x2="58.5" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      stamp_default = IconStamp;
    }
  });

  // lib/star-fat.ts
  var star_fat_exports = {};
  __export(star_fat_exports, {
    IconStarFat: () => IconStarFat,
    default: () => star_fat_default
  });
  var IconStarFat, star_fat_default;
  var init_star_fat = __esm({
    "lib/star-fat.ts"() {
      IconStarFat = `<svg id="StarFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M36.16,51.03l16.56,11.84c.79.56,1.84-.21,1.53-1.13l-6.44-19.32,16.38-12.09c.78-.58.37-1.81-.6-1.8l-20.36.15-6.44-19.32c-.31-.92-1.61-.91-1.9.01l-6.14,19.41-20.36.15c-.97,0-1.36,1.25-.57,1.81l16.56,11.84-6.14,19.41c-.29.92.77,1.68,1.55,1.11l16.38-12.09Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M36.16,51.03l16.56,11.84c.79.56,1.84-.21,1.53-1.13l-6.44-19.32,16.38-12.09c.78-.58.37-1.81-.6-1.8l-20.36.15-6.44-19.32c-.31-.92-1.61-.91-1.9.01l-6.14,19.41-20.36.15c-.97,0-1.36,1.25-.57,1.81l16.56,11.84-6.14,19.41c-.29.92.77,1.68,1.55,1.11l16.38-12.09Z" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      star_fat_default = IconStarFat;
    }
  });

  // lib/star-l.ts
  var star_l_exports = {};
  __export(star_l_exports, {
    IconStarL: () => IconStarL,
    default: () => star_l_default
  });
  var IconStarL, star_l_default;
  var init_star_l = __esm({
    "lib/star-l.ts"() {
      IconStarL = `<svg id="StarL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M36.16,51.03l16.56,11.84c.79.56,1.84-.21,1.53-1.13l-6.44-19.32,16.38-12.09c.78-.58.37-1.81-.6-1.8l-20.36.15-6.44-19.32c-.31-.92-1.61-.91-1.9.01l-6.14,19.41-20.36.15c-.97,0-1.36,1.25-.57,1.81l16.56,11.84-6.14,19.41c-.29.92.77,1.68,1.55,1.11l16.38-12.09Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M36.16,51.03l16.56,11.84c.79.56,1.84-.21,1.53-1.13l-6.44-19.32,16.38-12.09c.78-.58.37-1.81-.6-1.8l-20.36.15-6.44-19.32c-.31-.92-1.61-.91-1.9.01l-6.14,19.41-20.36.15c-.97,0-1.36,1.25-.57,1.81l16.56,11.84-6.14,19.41c-.29.92.77,1.68,1.55,1.11l16.38-12.09Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      star_l_default = IconStarL;
    }
  });

  // lib/star-m.ts
  var star_m_exports = {};
  __export(star_m_exports, {
    IconStarM: () => IconStarM,
    default: () => star_m_default
  });
  var IconStarM, star_m_default;
  var init_star_m = __esm({
    "lib/star-m.ts"() {
      IconStarM = `<svg id="StarM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M36.13,47.82l13.03,9.31c.62.44,1.44-.17,1.2-.89l-5.06-15.19,12.88-9.51c.61-.45.29-1.43-.47-1.42l-16.01.12-5.06-15.19c-.24-.72-1.27-.72-1.5.01l-4.83,15.27-16.01.12c-.76,0-1.07.98-.45,1.43l13.03,9.31-4.83,15.27c-.23.73.6,1.32,1.22.87l12.89-9.51Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M36.13,47.82l13.03,9.31c.62.44,1.44-.17,1.2-.89l-5.06-15.19,12.88-9.51c.61-.45.29-1.43-.47-1.42l-16.01.12-5.06-15.19c-.24-.72-1.27-.72-1.5.01l-4.83,15.27-16.01.12c-.76,0-1.07.98-.45,1.43l13.03,9.31-4.83,15.27c-.23.73.6,1.32,1.22.87l12.89-9.51Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      star_m_default = IconStarM;
    }
  });

  // lib/star-small.ts
  var star_small_exports = {};
  __export(star_small_exports, {
    IconStarSmall: () => IconStarSmall,
    default: () => star_small_default
  });
  var IconStarSmall, star_small_default;
  var init_star_small = __esm({
    "lib/star-small.ts"() {
      IconStarSmall = `<svg id="StarSmall" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M36.1,45.46l10.42,7.45c.5.35,1.16-.13.96-.71l-4.05-12.15,10.31-7.61c.49-.36.23-1.14-.38-1.14l-12.81.1-4.05-12.15c-.19-.58-1.01-.57-1.2,0l-3.87,12.21-12.81.1c-.61,0-.86.79-.36,1.14l10.42,7.45-3.87,12.21c-.18.58.48,1.06.97.7l10.31-7.61Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M36.1,45.46l10.42,7.45c.5.35,1.16-.13.96-.71l-4.05-12.15,10.31-7.61c.49-.36.23-1.14-.38-1.14l-12.81.1-4.05-12.15c-.19-.58-1.01-.57-1.2,0l-3.87,12.21-12.81.1c-.61,0-.86.79-.36,1.14l10.42,7.45-3.87,12.21c-.18.58.48,1.06.97.7l10.31-7.61Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      star_small_default = IconStarSmall;
    }
  });

  // lib/sticker.ts
  var sticker_exports = {};
  __export(sticker_exports, {
    IconSticker: () => IconSticker,
    default: () => sticker_default
  });
  var IconSticker, sticker_default;
  var init_sticker = __esm({
    "lib/sticker.ts"() {
      IconSticker = `<svg id="Sticker" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M58.5,40.5h-14c-2.21,0-4,1.79-4,4v14l18-18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.5,58.5v-14c0-2.21,1.79-4,4-4h14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M38.84,58.5h-21.34c-2.21,0-4-1.79-4-4V17.5c0-2.21,1.79-4,4-4h37c2.21,0,4,1.79,4,4v21.34c0,1.06-.42,2.08-1.17,2.83l-15.66,15.66c-.75.75-1.77,1.17-2.83,1.17Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      sticker_default = IconSticker;
    }
  });

  // lib/stopwatch.ts
  var stopwatch_exports = {};
  __export(stopwatch_exports, {
    IconStopwatch: () => IconStopwatch,
    default: () => stopwatch_default
  });
  var IconStopwatch, stopwatch_default;
  var init_stopwatch = __esm({
    "lib/stopwatch.ts"() {
      IconStopwatch = `<svg id="Stopwatch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="40.5" r="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="40.5" r="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="13.5" x2="40.5" y2="13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="54 22.5 36 22.5 36 13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="40.5" style="fill: none; transform: rotate(calc((360 / 60 * var(--handle)) * 1deg)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      stopwatch_default = IconStopwatch;
    }
  });

  // lib/subtract-fat.ts
  var subtract_fat_exports = {};
  __export(subtract_fat_exports, {
    IconSubtractFat: () => IconSubtractFat,
    default: () => subtract_fat_default
  });
  var IconSubtractFat, subtract_fat_default;
  var init_subtract_fat = __esm({
    "lib/subtract-fat.ts"() {
      IconSubtractFat = `<svg id="SubtractFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      subtract_fat_default = IconSubtractFat;
    }
  });

  // lib/subtract-l.ts
  var subtract_l_exports = {};
  __export(subtract_l_exports, {
    IconSubtractL: () => IconSubtractL,
    default: () => subtract_l_default
  });
  var IconSubtractL, subtract_l_default;
  var init_subtract_l = __esm({
    "lib/subtract-l.ts"() {
      IconSubtractL = `<svg id="SubtractL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      subtract_l_default = IconSubtractL;
    }
  });

  // lib/subtract-m.ts
  var subtract_m_exports = {};
  __export(subtract_m_exports, {
    IconSubtractM: () => IconSubtractM,
    default: () => subtract_m_default
  });
  var IconSubtractM, subtract_m_default;
  var init_subtract_m = __esm({
    "lib/subtract-m.ts"() {
      IconSubtractM = `<svg id="SubtractM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="18" y1="36" x2="54" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      subtract_m_default = IconSubtractM;
    }
  });

  // lib/subtract-s.ts
  var subtract_s_exports = {};
  __export(subtract_s_exports, {
    IconSubtractS: () => IconSubtractS,
    default: () => subtract_s_default
  });
  var IconSubtractS, subtract_s_default;
  var init_subtract_s = __esm({
    "lib/subtract-s.ts"() {
      IconSubtractS = `<svg id="SubtractS" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="22.5" y1="36" x2="49.5" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      subtract_s_default = IconSubtractS;
    }
  });

  // lib/sun2.ts
  var sun2_exports = {};
  __export(sun2_exports, {
    IconSun2: () => IconSun2,
    default: () => sun2_default
  });
  var IconSun2, sun2_default;
  var init_sun2 = __esm({
    "lib/sun2.ts"() {
      IconSun2 = `<svg id="Sun2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="36" r="13.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="4.5" x2="36" y2="13.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="58.5" x2="36" y2="67.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="4.5" y1="36" x2="13.5" y2="36" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="36" x2="67.5" y2="36" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.73" y1="13.73" x2="20.09" y2="20.09" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="51.91" y1="51.91" x2="58.27" y2="58.27" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.73" y1="58.27" x2="20.09" y2="51.91" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="51.91" y1="20.09" x2="58.27" y2="13.73" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      sun2_default = IconSun2;
    }
  });

  // lib/sun.ts
  var sun_exports = {};
  __export(sun_exports, {
    IconSun: () => IconSun,
    default: () => sun_default
  });
  var IconSun, sun_default;
  var init_sun = __esm({
    "lib/sun.ts"() {
      IconSun = `<svg id="Sun" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="36" r="18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="5.14" x2="36" y2="10.29" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="61.71" x2="36" y2="66.86" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="5.14" y1="36" x2="10.29" y2="36" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="61.71" y1="36" x2="66.86" y2="36" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="14.18" y1="14.18" x2="17.82" y2="17.82" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54.18" y1="54.18" x2="57.82" y2="57.82" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="14.18" y1="57.82" x2="17.82" y2="54.18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="54.18" y1="17.82" x2="57.82" y2="14.18" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      sun_default = IconSun;
    }
  });

  // lib/tables.ts
  var tables_exports = {};
  __export(tables_exports, {
    IconTables: () => IconTables,
    default: () => tables_default
  });
  var IconTables, tables_default;
  var init_tables = __esm({
    "lib/tables.ts"() {
      IconTables = `<svg id="Tables" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="13.5" width="45" height="45" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="27" x2="58.5" y2="27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="29.25" y1="27" x2="29.25" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="27" x2="42.75" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      tables_default = IconTables;
    }
  });

  // lib/talk-add.ts
  var talk_add_exports = {};
  __export(talk_add_exports, {
    IconTalkAdd: () => IconTalkAdd,
    default: () => talk_add_default
  });
  var IconTalkAdd, talk_add_default;
  var init_talk_add = __esm({
    "lib/talk-add.ts"() {
      IconTalkAdd = `<svg id="TalkAdd" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="27" y1="31.5" x2="45" y2="31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_add_default = IconTalkAdd;
    }
  });

  // lib/talk-check.ts
  var talk_check_exports = {};
  __export(talk_check_exports, {
    IconTalkCheck: () => IconTalkCheck,
    default: () => talk_check_default
  });
  var IconTalkCheck, talk_check_default;
  var init_talk_check = __esm({
    "lib/talk-check.ts"() {
      IconTalkCheck = `<svg id="TalkCheck" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="28.36 26.64 36.08 39.5 46.36 21.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_check_default = IconTalkCheck;
    }
  });

  // lib/talk-delete.ts
  var talk_delete_exports = {};
  __export(talk_delete_exports, {
    IconTalkDelete: () => IconTalkDelete,
    default: () => talk_delete_default
  });
  var IconTalkDelete, talk_delete_default;
  var init_talk_delete = __esm({
    "lib/talk-delete.ts"() {
      IconTalkDelete = `<svg id="TalkDelete" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="29.64" y1="25.27" x2="42.36" y2="38" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.36" y1="25.27" x2="29.64" y2="38" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_delete_default = IconTalkDelete;
    }
  });

  // lib/talk-edit.ts
  var talk_edit_exports = {};
  __export(talk_edit_exports, {
    IconTalkEdit: () => IconTalkEdit,
    default: () => talk_edit_default
  });
  var IconTalkEdit, talk_edit_default;
  var init_talk_edit = __esm({
    "lib/talk-edit.ts"() {
      IconTalkEdit = `<svg id="TalkEdit" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M23.44,33.68l-1.47,7.36,7.36-1.47c.39-.08.74-.27,1.02-.55l14.07-14.07c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-14.07,14.07c-.28.28-.47.63-.55,1.02Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="34.69" y1="21.94" x2="41.06" y2="28.31" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      talk_edit_default = IconTalkEdit;
    }
  });

  // lib/talk-exclamation-mark.ts
  var talk_exclamation_mark_exports = {};
  __export(talk_exclamation_mark_exports, {
    IconTalkExclamationMark: () => IconTalkExclamationMark,
    default: () => talk_exclamation_mark_default
  });
  var IconTalkExclamationMark, talk_exclamation_mark_default;
  var init_talk_exclamation_mark = __esm({
    "lib/talk-exclamation-mark.ts"() {
      IconTalkExclamationMark = `<svg id="TalkExclamationMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="22.5" x2="36" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="40.5" x2="36" y2="40.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      talk_exclamation_mark_default = IconTalkExclamationMark;
    }
  });

  // lib/talk-heart-broken.ts
  var talk_heart_broken_exports = {};
  __export(talk_heart_broken_exports, {
    IconTalkHeartBroken: () => IconTalkHeartBroken,
    default: () => talk_heart_broken_default
  });
  var IconTalkHeartBroken, talk_heart_broken_default;
  var init_talk_heart_broken = __esm({
    "lib/talk-heart-broken.ts"() {
      IconTalkHeartBroken = `<svg id="TalkHeartBroken" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="36 26.3 37.9 32.01 34.1 33.91 36 41.52" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,41.52c-19.76-10.35-9.88-26.07,0-15.52,9.88-10.55,19.76,5.17,0,15.52Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_heart_broken_default = IconTalkHeartBroken;
    }
  });

  // lib/talk-heart.ts
  var talk_heart_exports = {};
  __export(talk_heart_exports, {
    IconTalkHeart: () => IconTalkHeart,
    default: () => talk_heart_default
  });
  var IconTalkHeart, talk_heart_default;
  var init_talk_heart = __esm({
    "lib/talk-heart.ts"() {
      IconTalkHeart = `<svg id="TalkHeart" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,40.47c-18.67-9.78-9.34-24.63,0-14.67,9.34-9.97,18.67,4.89,0,14.67Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_heart_default = IconTalkHeart;
    }
  });

  // lib/talk-info.ts
  var talk_info_exports = {};
  __export(talk_info_exports, {
    IconTalkInfo: () => IconTalkInfo,
    default: () => talk_info_default
  });
  var IconTalkInfo, talk_info_default;
  var init_talk_info = __esm({
    "lib/talk-info.ts"() {
      IconTalkInfo = `<svg id="TalkInfo" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="36 45 36 31.5 31.5 31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="22.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      talk_info_default = IconTalkInfo;
    }
  });

  // lib/talk-invisible.ts
  var talk_invisible_exports = {};
  __export(talk_invisible_exports, {
    IconTalkInvisible: () => IconTalkInvisible,
    default: () => talk_invisible_default
  });
  var IconTalkInvisible, talk_invisible_default;
  var init_talk_invisible = __esm({
    "lib/talk-invisible.ts"() {
      IconTalkInvisible = `<svg id="TalkInvisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M49.5,31.5s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="22.5" x2="22.5" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_invisible_default = IconTalkInvisible;
    }
  });

  // lib/talk-question-mark.ts
  var talk_question_mark_exports = {};
  __export(talk_question_mark_exports, {
    IconTalkQuestionMark: () => IconTalkQuestionMark,
    default: () => talk_question_mark_default
  });
  var IconTalkQuestionMark, talk_question_mark_default;
  var init_talk_question_mark = __esm({
    "lib/talk-question-mark.ts"() {
      IconTalkQuestionMark = `<svg id="TalkQuestionMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="42.75" x2="36" y2="42.75" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30,26.25c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      talk_question_mark_default = IconTalkQuestionMark;
    }
  });

  // lib/talk-search.ts
  var talk_search_exports = {};
  __export(talk_search_exports, {
    IconTalkSearch: () => IconTalkSearch,
    default: () => talk_search_default
  });
  var IconTalkSearch, talk_search_default;
  var init_talk_search = __esm({
    "lib/talk-search.ts"() {
      IconTalkSearch = `<svg id="TalkSearch" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><g><line x1="47.25" y1="42.75" x2="40.11" y2="35.61" style="fill: white;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="33.75" cy="29.25" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_search_default = IconTalkSearch;
    }
  });

  // lib/talk-star.ts
  var talk_star_exports = {};
  __export(talk_star_exports, {
    IconTalkStar: () => IconTalkStar,
    default: () => talk_star_default
  });
  var IconTalkStar, talk_star_default;
  var init_talk_star = __esm({
    "lib/talk-star.ts"() {
      IconTalkStar = `<svg id="TalkStar" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36.14,37.22l6.34,4.54c.3.22.7-.08.59-.43l-2.47-7.4,6.27-4.63c.3-.22.14-.69-.23-.69l-7.8.06-2.47-7.4c-.12-.35-.62-.35-.73,0l-2.35,7.43-7.8.06c-.37,0-.52.48-.22.69l6.34,4.54-2.35,7.43c-.11.35.29.64.59.42l6.27-4.63Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_star_default = IconTalkStar;
    }
  });

  // lib/talk-subtract.ts
  var talk_subtract_exports = {};
  __export(talk_subtract_exports, {
    IconTalkSubtract: () => IconTalkSubtract,
    default: () => talk_subtract_default
  });
  var IconTalkSubtract, talk_subtract_default;
  var init_talk_subtract = __esm({
    "lib/talk-subtract.ts"() {
      IconTalkSubtract = `<svg id="TalkSubtract" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="27" y1="31.5" x2="45" y2="31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_subtract_default = IconTalkSubtract;
    }
  });

  // lib/talk-visible.ts
  var talk_visible_exports = {};
  __export(talk_visible_exports, {
    IconTalkVisible: () => IconTalkVisible,
    default: () => talk_visible_default
  });
  var IconTalkVisible, talk_visible_default;
  var init_talk_visible = __esm({
    "lib/talk-visible.ts"() {
      IconTalkVisible = `<svg id="TalkVisible" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M49.5,31.5s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="31.5" r="4.5" style="stroke-width: 0px;"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_visible_default = IconTalkVisible;
    }
  });

  // lib/talk.ts
  var talk_exports = {};
  __export(talk_exports, {
    IconTalk: () => IconTalk,
    default: () => talk_default
  });
  var IconTalk, talk_default;
  var init_talk = __esm({
    "lib/talk.ts"() {
      IconTalk = `<svg id="Talk" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M17.5,13.5h37c2.21,0,4,1.79,4,4v28c0,2.21-1.79,4-4,4h-23s-9,9-9,9v-9s-5,0-5,0c-2.21,0-4-1.79-4-4v-28c0-2.21,1.79-4,4-4Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      talk_default = IconTalk;
    }
  });

  // lib/target.ts
  var target_exports = {};
  __export(target_exports, {
    IconTarget: () => IconTarget,
    default: () => target_default
  });
  var IconTarget, target_default;
  var init_target = __esm({
    "lib/target.ts"() {
      IconTarget = `<svg id="Target" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="36" r="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      target_default = IconTarget;
    }
  });

  // lib/text-align-center.ts
  var text_align_center_exports = {};
  __export(text_align_center_exports, {
    IconTextAlignCenter: () => IconTextAlignCenter,
    default: () => text_align_center_default
  });
  var IconTextAlignCenter, text_align_center_default;
  var init_text_align_center = __esm({
    "lib/text-align-center.ts"() {
      IconTextAlignCenter = `<svg id="TextAlignCenter" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="54" x2="54" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="30" x2="22.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="42" x2="58.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_align_center_default = IconTextAlignCenter;
    }
  });

  // lib/text-align-justify-centered.ts
  var text_align_justify_centered_exports = {};
  __export(text_align_justify_centered_exports, {
    IconTextAlignJustifyCentered: () => IconTextAlignJustifyCentered,
    default: () => text_align_justify_centered_default
  });
  var IconTextAlignJustifyCentered, text_align_justify_centered_default;
  var init_text_align_justify_centered = __esm({
    "lib/text-align-justify-centered.ts"() {
      IconTextAlignJustifyCentered = `<svg id="TextAlignJustifyCentered" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="54" x2="49.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="30" x2="13.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="42" x2="58.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_align_justify_centered_default = IconTextAlignJustifyCentered;
    }
  });

  // lib/text-align-justify-left.ts
  var text_align_justify_left_exports = {};
  __export(text_align_justify_left_exports, {
    IconTextAlignJustifyLeft: () => IconTextAlignJustifyLeft,
    default: () => text_align_justify_left_default
  });
  var IconTextAlignJustifyLeft, text_align_justify_left_default;
  var init_text_align_justify_left = __esm({
    "lib/text-align-justify-left.ts"() {
      IconTextAlignJustifyLeft = `<svg id="TextAlignJustifyLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="54" x2="40.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="30" x2="13.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="42" x2="58.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_align_justify_left_default = IconTextAlignJustifyLeft;
    }
  });

  // lib/text-align-justify-right.ts
  var text_align_justify_right_exports = {};
  __export(text_align_justify_right_exports, {
    IconTextAlignJustifyRight: () => IconTextAlignJustifyRight,
    default: () => text_align_justify_right_default
  });
  var IconTextAlignJustifyRight, text_align_justify_right_default;
  var init_text_align_justify_right = __esm({
    "lib/text-align-justify-right.ts"() {
      IconTextAlignJustifyRight = `<svg id="TextAlignJustifyRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="54" x2="58.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="30" x2="13.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="42" x2="58.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_align_justify_right_default = IconTextAlignJustifyRight;
    }
  });

  // lib/text-align-justify.ts
  var text_align_justify_exports = {};
  __export(text_align_justify_exports, {
    IconTextAlignJustify: () => IconTextAlignJustify,
    default: () => text_align_justify_default
  });
  var IconTextAlignJustify, text_align_justify_default;
  var init_text_align_justify = __esm({
    "lib/text-align-justify.ts"() {
      IconTextAlignJustify = `<svg id="TextAlignJustify" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="54" x2="58.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="30" x2="13.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="42" x2="58.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_align_justify_default = IconTextAlignJustify;
    }
  });

  // lib/text-align-left.ts
  var text_align_left_exports = {};
  __export(text_align_left_exports, {
    IconTextAlignLeft: () => IconTextAlignLeft,
    default: () => text_align_left_default
  });
  var IconTextAlignLeft, text_align_left_default;
  var init_text_align_left = __esm({
    "lib/text-align-left.ts"() {
      IconTextAlignLeft = `<svg id="TextAlignLeft" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="54" x2="49.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="30" x2="13.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="42" x2="58.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_align_left_default = IconTextAlignLeft;
    }
  });

  // lib/text-align-right-order-desc.ts
  var text_align_right_order_desc_exports = {};
  __export(text_align_right_order_desc_exports, {
    IconTextAlignRightOrderDesc: () => IconTextAlignRightOrderDesc,
    default: () => text_align_right_order_desc_default
  });
  var IconTextAlignRightOrderDesc, text_align_right_order_desc_default;
  var init_text_align_right_order_desc = __esm({
    "lib/text-align-right-order-desc.ts"() {
      IconTextAlignRightOrderDesc = `<svg id="TextAlignRightOrderDesc" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="54" x2="58.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="30" x2="22.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="42" x2="58.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_align_right_order_desc_default = IconTextAlignRightOrderDesc;
    }
  });

  // lib/text-align-right.ts
  var text_align_right_exports = {};
  __export(text_align_right_exports, {
    IconTextAlignRight: () => IconTextAlignRight,
    default: () => text_align_right_default
  });
  var IconTextAlignRight, text_align_right_default;
  var init_text_align_right = __esm({
    "lib/text-align-right.ts"() {
      IconTextAlignRight = `<svg id="TextAlignRight" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="54" x2="58.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="30" x2="31.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="42" x2="58.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_align_right_default = IconTextAlignRight;
    }
  });

  // lib/text-bold.ts
  var text_bold_exports = {};
  __export(text_bold_exports, {
    IconTextBold: () => IconTextBold,
    default: () => text_bold_default
  });
  var IconTextBold, text_bold_default;
  var init_text_bold = __esm({
    "lib/text-bold.ts"() {
      IconTextBold = `<svg id="TextBold" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M22.5,36h18c4.97,0,9-4.03,9-9s-4.03-9-9-9h-18v36h18c4.97,0,9-4.03,9-9s-4.03-9-9-9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/></svg>`;
      text_bold_default = IconTextBold;
    }
  });

  // lib/text-detail-list.ts
  var text_detail_list_exports = {};
  __export(text_detail_list_exports, {
    IconTextDetailList: () => IconTextDetailList,
    default: () => text_detail_list_default
  });
  var IconTextDetailList, text_detail_list_default;
  var init_text_detail_list = __esm({
    "lib/text-detail-list.ts"() {
      IconTextDetailList = `<svg id="TextDetailList" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="14.62 24.21 21.37 17.46 14.62 10.71" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="17.46" x2="58.5" y2="17.46" style="fill: none;  stroke-linejoin: round; stroke-width: 8px;"/><line x1="13.5" y1="53.46" x2="58.5" y2="53.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="29.46" x2="27" y2="29.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="41.46" x2="58.5" y2="41.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_detail_list_default = IconTextDetailList;
    }
  });

  // lib/text-indent.ts
  var text_indent_exports = {};
  __export(text_indent_exports, {
    IconTextIndent: () => IconTextIndent,
    default: () => text_indent_default
  });
  var IconTextIndent, text_indent_default;
  var init_text_indent = __esm({
    "lib/text-indent.ts"() {
      IconTextIndent = `<svg id="TextIndent" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="13.5 31.5 13.5 40.5 19 36 13.5 31.5" style="fill: var(--icon-line-color, currentColor);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="17.46" x2="58.5" y2="17.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="53.46" x2="58.5" y2="53.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="29.46" x2="27" y2="29.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="41.46" x2="58.5" y2="41.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_indent_default = IconTextIndent;
    }
  });

  // lib/text-italic.ts
  var text_italic_exports = {};
  __export(text_italic_exports, {
    IconTextItalic: () => IconTextItalic,
    default: () => text_italic_default
  });
  var IconTextItalic, text_italic_default;
  var init_text_italic = __esm({
    "lib/text-italic.ts"() {
      IconTextItalic = `<svg id="TextItalic" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="18" x2="49.5" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="54" x2="40.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="18" x2="33.75" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_italic_default = IconTextItalic;
    }
  });

  // lib/text-line-through.ts
  var text_line_through_exports = {};
  __export(text_line_through_exports, {
    IconTextLineThrough: () => IconTextLineThrough,
    default: () => text_line_through_default
  });
  var IconTextLineThrough, text_line_through_default;
  var init_text_line_through = __esm({
    "lib/text-line-through.ts"() {
      IconTextLineThrough = `<svg id="TextLineThrough" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M25.14,34.14c-1.63-1.63-2.64-3.88-2.64-6.36s1.01-4.74,2.64-6.36c1.63-1.63,3.88-2.64,6.36-2.64h9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M46.86,34.14c1.63,1.63,2.64,3.88,2.64,6.36s-1.01,4.74-2.64,6.36c-1.63,1.63-3.88,2.64-6.36,2.64h-9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="34.14" x2="58.5" y2="34.14" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_line_through_default = IconTextLineThrough;
    }
  });

  // lib/text-order-asc123.ts
  var text_order_asc123_exports = {};
  __export(text_order_asc123_exports, {
    IconTextOrderAsc123: () => IconTextOrderAsc123,
    default: () => text_order_asc123_default
  });
  var IconTextOrderAsc123, text_order_asc123_default;
  var init_text_order_asc123 = __esm({
    "lib/text-order-asc123.ts"() {
      IconTextOrderAsc123 = `<svg id="TextOrderAsc123" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="54" x2="31.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="30" x2="13.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="42" x2="40.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_order_asc123_default = IconTextOrderAsc123;
    }
  });

  // lib/text-order-asc127.ts
  var text_order_asc127_exports = {};
  __export(text_order_asc127_exports, {
    IconTextOrderAsc127: () => IconTextOrderAsc127,
    default: () => text_order_asc127_default
  });
  var IconTextOrderAsc127, text_order_asc127_default;
  var init_text_order_asc127 = __esm({
    "lib/text-order-asc127.ts"() {
      IconTextOrderAsc127 = `<svg id="TextOrderAsc127" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="18" y1="13.5" x2="18" y2="54" style="fill: none;  stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 54 18 58.5 22.5 54" style="fill: none;  stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="18" x2="54" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="54" x2="40.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="30" x2="31.5" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="42" x2="45" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_order_asc127_default = IconTextOrderAsc127;
    }
  });

  // lib/text-order-desc-copy2.ts
  var text_order_desc_copy2_exports = {};
  __export(text_order_desc_copy2_exports, {
    IconTextOrderDescCopy2: () => IconTextOrderDescCopy2,
    default: () => text_order_desc_copy2_default
  });
  var IconTextOrderDescCopy2, text_order_desc_copy2_default;
  var init_text_order_desc_copy2 = __esm({
    "lib/text-order-desc-copy2.ts"() {
      IconTextOrderDescCopy2 = `<svg id="TextOrderDescCopy2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="31.5" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="54" x2="58.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="18" cy="18" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="18" cy="36" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="18" cy="54" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_order_desc_copy2_default = IconTextOrderDescCopy2;
    }
  });

  // lib/text-order-desc-copy3.ts
  var text_order_desc_copy3_exports = {};
  __export(text_order_desc_copy3_exports, {
    IconTextOrderDescCopy3: () => IconTextOrderDescCopy3,
    default: () => text_order_desc_copy3_default
  });
  var IconTextOrderDescCopy3, text_order_desc_copy3_default;
  var init_text_order_desc_copy3 = __esm({
    "lib/text-order-desc-copy3.ts"() {
      IconTextOrderDescCopy3 = `<svg id="TextOrderDescCopy3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="31.5" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="54" x2="58.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="19" y1="13.5" x2="19" y2="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M16,31.5h3.22c2.13,0,3.2,2.58,1.69,4.09l-4.91,4.91h6.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M15.95,49.5h4.81c1.55,0,2.32,1.87,1.23,2.96l-1.54,1.54,1.54,1.54c1.09,1.09.32,2.96-1.23,2.96h-4.81" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_order_desc_copy3_default = IconTextOrderDescCopy3;
    }
  });

  // lib/text-order-desc-copy.ts
  var text_order_desc_copy_exports = {};
  __export(text_order_desc_copy_exports, {
    IconTextOrderDescCopy: () => IconTextOrderDescCopy,
    default: () => text_order_desc_copy_default
  });
  var IconTextOrderDescCopy, text_order_desc_copy_default;
  var init_text_order_desc_copy = __esm({
    "lib/text-order-desc-copy.ts"() {
      IconTextOrderDescCopy = `<svg id="TextOrderDescCopy" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="31.5" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="54" x2="58.5" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="18" cy="54" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 36 18 40.5 27 31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 18 18 22.5 27 13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_order_desc_copy_default = IconTextOrderDescCopy;
    }
  });

  // lib/text-order-desc.ts
  var text_order_desc_exports = {};
  __export(text_order_desc_exports, {
    IconTextOrderDesc: () => IconTextOrderDesc,
    default: () => text_order_desc_default
  });
  var IconTextOrderDesc, text_order_desc_default;
  var init_text_order_desc = __esm({
    "lib/text-order-desc.ts"() {
      IconTextOrderDesc = `<svg id="TextOrderDesc" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="18" y1="58.5" x2="18" y2="18" style="fill: none;  stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 18 18 13.5 13.5 18" style="fill: none;  stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="54" x2="54" y2="54" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="18" x2="40.5" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="42" x2="31.5" y2="42" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="30" x2="45" y2="30" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_order_desc_default = IconTextOrderDesc;
    }
  });

  // lib/text-outdent.ts
  var text_outdent_exports = {};
  __export(text_outdent_exports, {
    IconTextOutdent: () => IconTextOutdent,
    default: () => text_outdent_default
  });
  var IconTextOutdent, text_outdent_default;
  var init_text_outdent = __esm({
    "lib/text-outdent.ts"() {
      IconTextOutdent = `<svg id="TextOutdent" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="19 40.5 19 31.5 13.5 36 19 40.5" style="fill: var(--icon-line-color, currentColor);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="17.46" x2="58.5" y2="17.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="53.46" x2="58.5" y2="53.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="29.46" x2="27" y2="29.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="41.46" x2="58.5" y2="41.46" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_outdent_default = IconTextOutdent;
    }
  });

  // lib/text-underline.ts
  var text_underline_exports = {};
  __export(text_underline_exports, {
    IconTextUnderline: () => IconTextUnderline,
    default: () => text_underline_default
  });
  var IconTextUnderline, text_underline_default;
  var init_text_underline = __esm({
    "lib/text-underline.ts"() {
      IconTextUnderline = `<svg id="TextUnderline" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M49.5,18v13.5c0,7.46-6.04,13.5-13.5,13.5s-13.5-6.04-13.5-13.5v-13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="54" x2="49.5" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      text_underline_default = IconTextUnderline;
    }
  });

  // lib/thermometer-cold.ts
  var thermometer_cold_exports = {};
  __export(thermometer_cold_exports, {
    IconThermometerCold: () => IconThermometerCold,
    default: () => thermometer_cold_default
  });
  var IconThermometerCold, thermometer_cold_default;
  var init_thermometer_cold = __esm({
    "lib/thermometer-cold.ts"() {
      IconThermometerCold = `<svg id="ThermometerCold" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="51.75" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="40.5" x2="36" y2="47.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M42.75,42.77V15.75c0-3.73-3.02-6.75-6.75-6.75s-6.75,3.02-6.75,6.75v27.02c-2.73,2.05-4.5,5.31-4.5,8.98,0,6.21,5.04,11.25,11.25,11.25s11.25-5.04,11.25-11.25c0-3.68-1.77-6.93-4.5-8.98Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M42.75,42.77V15.75c0-3.73-3.02-6.75-6.75-6.75s-6.75,3.02-6.75,6.75v27.02c-2.73,2.05-4.5,5.31-4.5,8.98,0,6.21,5.04,11.25,11.25,11.25s11.25-5.04,11.25-11.25c0-3.68-1.77-6.93-4.5-8.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      thermometer_cold_default = IconThermometerCold;
    }
  });

  // lib/thermometer-hot.ts
  var thermometer_hot_exports = {};
  __export(thermometer_hot_exports, {
    IconThermometerHot: () => IconThermometerHot,
    default: () => thermometer_hot_default
  });
  var IconThermometerHot, thermometer_hot_default;
  var init_thermometer_hot = __esm({
    "lib/thermometer-hot.ts"() {
      IconThermometerHot = `<svg id="ThermometerHot" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M42.75,42.77V15.75c0-3.73-3.02-6.75-6.75-6.75s-6.75,3.02-6.75,6.75v27.02c-2.73,2.05-4.5,5.31-4.5,8.98,0,6.21,5.04,11.25,11.25,11.25s11.25-5.04,11.25-11.25c0-3.68-1.77-6.93-4.5-8.98Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M42.75,42.77V15.75c0-3.73-3.02-6.75-6.75-6.75s-6.75,3.02-6.75,6.75v27.02c-2.73,2.05-4.5,5.31-4.5,8.98,0,6.21,5.04,11.25,11.25,11.25s11.25-5.04,11.25-11.25c0-3.68-1.77-6.93-4.5-8.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="51.75" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="18" x2="36" y2="47.25" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      thermometer_hot_default = IconThermometerHot;
    }
  });

  // lib/thermometer.ts
  var thermometer_exports = {};
  __export(thermometer_exports, {
    IconThermometer: () => IconThermometer,
    default: () => thermometer_default
  });
  var IconThermometer, thermometer_default;
  var init_thermometer = __esm({
    "lib/thermometer.ts"() {
      IconThermometer = `<svg id="Thermometer" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="51.75" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="27" x2="36" y2="47.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M42.75,42.77V15.75c0-3.73-3.02-6.75-6.75-6.75s-6.75,3.02-6.75,6.75v27.02c-2.73,2.05-4.5,5.31-4.5,8.98,0,6.21,5.04,11.25,11.25,11.25s11.25-5.04,11.25-11.25c0-3.68-1.77-6.93-4.5-8.98Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M42.75,42.77V15.75c0-3.73-3.02-6.75-6.75-6.75s-6.75,3.02-6.75,6.75v27.02c-2.73,2.05-4.5,5.31-4.5,8.98,0,6.21,5.04,11.25,11.25,11.25s11.25-5.04,11.25-11.25c0-3.68-1.77-6.93-4.5-8.98Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      thermometer_default = IconThermometer;
    }
  });

  // lib/timer.ts
  var timer_exports = {};
  __export(timer_exports, {
    IconTimer: () => IconTimer,
    default: () => timer_default
  });
  var IconTimer, timer_default;
  var init_timer = __esm({
    "lib/timer.ts"() {
      IconTimer = `<svg id="Timer" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="22.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="36" r="22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="22.5" x2="36" y2="36" style="fill: none; transform: rotate(calc((360 / 60 * var(--handle)) * 1deg)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      timer_default = IconTimer;
    }
  });

  // lib/trash2.ts
  var trash2_exports = {};
  __export(trash2_exports, {
    IconTrash2: () => IconTrash2,
    default: () => trash2_default
  });
  var IconTrash2, trash2_default;
  var init_trash2 = __esm({
    "lib/trash2.ts"() {
      IconTrash2 = `<svg id="Trash2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="29.25 18 29.25 9 42.75 9 42.75 18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,18v36.5c0,2.21,1.79,4,4,4h28c2.21,0,4-1.79,4-4V18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M18,18v36.5c0,2.21,1.79,4,4,4h28c2.21,0,4-1.79,4-4V18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      trash2_default = IconTrash2;
    }
  });

  // lib/trash.ts
  var trash_exports = {};
  __export(trash_exports, {
    IconTrash: () => IconTrash,
    default: () => trash_default
  });
  var IconTrash, trash_default;
  var init_trash = __esm({
    "lib/trash.ts"() {
      IconTrash = `<svg id="Trash" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="29.25 18 29.25 9 42.75 9 42.75 18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,18v38.5c0,1.1.9,2,2,2h32c1.1,0,2-.9,2-2V18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M18,18v38.5c0,1.1.9,2,2,2h32c1.1,0,2-.9,2-2V18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="51.81" x2="36" y2="29.31" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="51.81" x2="27" y2="29.31" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="51.81" x2="45" y2="29.31" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="18" x2="58.5" y2="18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      trash_default = IconTrash;
    }
  });

  // lib/triangled-exclamation-mark.ts
  var triangled_exclamation_mark_exports = {};
  __export(triangled_exclamation_mark_exports, {
    IconTriangledExclamationMark: () => IconTriangledExclamationMark,
    default: () => triangled_exclamation_mark_default
  });
  var IconTriangledExclamationMark, triangled_exclamation_mark_default;
  var init_triangled_exclamation_mark = __esm({
    "lib/triangled-exclamation-mark.ts"() {
      IconTriangledExclamationMark = `<svg id="TriangledExclamationMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M34.29,16.36L10.82,55.47c-.8,1.33.16,3.03,1.71,3.03h46.94c1.55,0,2.51-1.7,1.71-3.03l-23.47-39.11c-.78-1.29-2.65-1.29-3.43,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M34.29,16.36L10.82,55.47c-.8,1.33.16,3.03,1.71,3.03h46.94c1.55,0,2.51-1.7,1.71-3.03l-23.47-39.11c-.78-1.29-2.65-1.29-3.43,0Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="27" x2="36" y2="45" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="49.5" x2="36" y2="49.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      triangled_exclamation_mark_default = IconTriangledExclamationMark;
    }
  });

  // lib/triangled-info.ts
  var triangled_info_exports = {};
  __export(triangled_info_exports, {
    IconTriangledInfo: () => IconTriangledInfo,
    default: () => triangled_info_default
  });
  var IconTriangledInfo, triangled_info_default;
  var init_triangled_info = __esm({
    "lib/triangled-info.ts"() {
      IconTriangledInfo = `<svg id="TriangledInfo" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M34.29,16.36L10.82,55.47c-.8,1.33.16,3.03,1.71,3.03h46.94c1.55,0,2.51-1.7,1.71-3.03l-23.47-39.11c-.78-1.29-2.65-1.29-3.43,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M34.29,16.36L10.82,55.47c-.8,1.33.16,3.03,1.71,3.03h46.94c1.55,0,2.51-1.7,1.71-3.03l-23.47-39.11c-.78-1.29-2.65-1.29-3.43,0Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><polyline points="36 54 36 40.5 31.5 40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="31.5" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      triangled_info_default = IconTriangledInfo;
    }
  });

  // lib/triangled-question-mark.ts
  var triangled_question_mark_exports = {};
  __export(triangled_question_mark_exports, {
    IconTriangledQuestionMark: () => IconTriangledQuestionMark,
    default: () => triangled_question_mark_default
  });
  var IconTriangledQuestionMark, triangled_question_mark_default;
  var init_triangled_question_mark = __esm({
    "lib/triangled-question-mark.ts"() {
      IconTriangledQuestionMark = `<svg id="TriangledQuestionMark" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M34.29,16.36L10.82,55.47c-.8,1.33.16,3.03,1.71,3.03h46.94c1.55,0,2.51-1.7,1.71-3.03l-23.47-39.11c-.78-1.29-2.65-1.29-3.43,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M34.29,16.36L10.82,55.47c-.8,1.33.16,3.03,1.71,3.03h46.94c1.55,0,2.51-1.7,1.71-3.03l-23.47-39.11c-.78-1.29-2.65-1.29-3.43,0Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><line x1="36" y1="53" x2="36" y2="53" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30,36.5c0-3.31,2.69-6,6-6s6,2.69,6,6c0,6-6,6-6,12" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      triangled_question_mark_default = IconTriangledQuestionMark;
    }
  });

  // lib/triangled.ts
  var triangled_exports = {};
  __export(triangled_exports, {
    IconTriangled: () => IconTriangled,
    default: () => triangled_default
  });
  var IconTriangled, triangled_default;
  var init_triangled = __esm({
    "lib/triangled.ts"() {
      IconTriangled = `<svg id="Triangled" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M34.29,16.36L10.82,55.47c-.8,1.33.16,3.03,1.71,3.03h46.94c1.55,0,2.51-1.7,1.71-3.03l-23.47-39.11c-.78-1.29-2.65-1.29-3.43,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M34.29,16.36L10.82,55.47c-.8,1.33.16,3.03,1.71,3.03h46.94c1.55,0,2.51-1.7,1.71-3.03l-23.47-39.11c-.78-1.29-2.65-1.29-3.43,0Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      triangled_default = IconTriangled;
    }
  });

  // lib/user-add.ts
  var user_add_exports = {};
  __export(user_add_exports, {
    IconUserAdd: () => IconUserAdd,
    default: () => user_add_default
  });
  var IconUserAdd, user_add_default;
  var init_user_add = __esm({
    "lib/user-add.ts"() {
      IconUserAdd = `<svg id="UserAdd" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><circle cx="36" cy="22.5" r="11.25" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M55.29,53.04c0,7.71-19.29,7.71-19.29,7.71,0,0-19.29,0-19.29-7.71,0-10.65,8.63-19.29,19.29-19.29s19.29,8.63,19.29,19.29Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><circle cx="36" cy="22.5" r="11.25" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M55.29,53.04c0,7.71-19.29,7.71-19.29,7.71,0,0-19.29,0-19.29-7.71,0-10.65,8.63-19.29,19.29-19.29s19.29,8.63,19.29,19.29Z" style="fill: none;  stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="36" y1="40.5" x2="36" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.25" y1="47.25" x2="42.75" y2="47.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      user_add_default = IconUserAdd;
    }
  });

  // lib/user-delete.ts
  var user_delete_exports = {};
  __export(user_delete_exports, {
    IconUserDelete: () => IconUserDelete,
    default: () => user_delete_default
  });
  var IconUserDelete, user_delete_default;
  var init_user_delete = __esm({
    "lib/user-delete.ts"() {
      IconUserDelete = `<svg id="UserDelete" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><circle cx="36" cy="22.5" r="11.25" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M55.29,53.04c0,7.71-19.29,7.71-19.29,7.71,0,0-19.29,0-19.29-7.71,0-10.65,8.63-19.29,19.29-19.29s19.29,8.63,19.29,19.29Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><circle cx="36" cy="22.5" r="11.25" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M55.29,53.04c0,7.71-19.29,7.71-19.29,7.71,0,0-19.29,0-19.29-7.71,0-10.65,8.63-19.29,19.29-19.29s19.29,8.63,19.29,19.29Z" style="fill: none;  stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="31.5" y1="42.75" x2="40.5" y2="51.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="51.75" x2="40.5" y2="42.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      user_delete_default = IconUserDelete;
    }
  });

  // lib/user-group.ts
  var user_group_exports = {};
  __export(user_group_exports, {
    IconUserGroup: () => IconUserGroup,
    default: () => user_group_default
  });
  var IconUserGroup, user_group_default;
  var init_user_group = __esm({
    "lib/user-group.ts"() {
      IconUserGroup = `<svg id="UserGroup" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M26.89,13.75c-.68-.16-1.38-.25-2.11-.25-5.08,0-9.2,4.12-9.2,9.2s4.12,9.2,9.2,9.2c2.13,0,4.08-.73,5.64-1.94" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M41.7,29.97c1.56,1.21,3.51,1.94,5.64,1.94,5.08,0,9.2-4.12,9.2-9.2s-4.12-9.2-9.2-9.2c-.73,0-1.43.09-2.11.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M29.55,32.65c-1.51-.48-3.11-.74-4.77-.74-8.71,0-15.78,7.06-15.78,15.78,0,3.35,4.44,4.92,8.61,5.66" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54.5,53.35c4.17-.74,8.61-2.31,8.61-5.66,0-8.71-7.06-15.78-15.78-15.78-1.66,0-3.27.26-4.77.74" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36.06" cy="20.25" r="11.25" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M55.34,50.79c0,7.71-19.29,7.71-19.29,7.71,0,0-19.29,0-19.29-7.71,0-10.65,8.63-19.29,19.29-19.29s19.29,8.63,19.29,19.29Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36.06" cy="20.25" r="11.25" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M55.34,50.79c0,7.71-19.29,7.71-19.29,7.71,0,0-19.29,0-19.29-7.71,0-10.65,8.63-19.29,19.29-19.29s19.29,8.63,19.29,19.29Z" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      user_group_default = IconUserGroup;
    }
  });

  // lib/user.ts
  var user_exports = {};
  __export(user_exports, {
    IconUser: () => IconUser,
    default: () => user_default
  });
  var IconUser, user_default;
  var init_user = __esm({
    "lib/user.ts"() {
      IconUser = `<svg id="User" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><circle cx="36" cy="22.5" r="11.25" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M55.29,53.04c0,7.71-19.29,7.71-19.29,7.71,0,0-19.29,0-19.29-7.71,0-10.65,8.63-19.29,19.29-19.29s19.29,8.63,19.29,19.29Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><circle cx="36" cy="22.5" r="11.25" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M55.29,53.04c0,7.71-19.29,7.71-19.29,7.71,0,0-19.29,0-19.29-7.71,0-10.65,8.63-19.29,19.29-19.29s19.29,8.63,19.29,19.29Z" style="fill: none;  stroke-linecap: square; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      user_default = IconUser;
    }
  });

  // lib/users.ts
  var users_exports = {};
  __export(users_exports, {
    IconUsers: () => IconUsers,
    default: () => users_default
  });
  var IconUsers, users_default;
  var init_users = __esm({
    "lib/users.ts"() {
      IconUsers = `<svg id="Users" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><circle cx="28.34" cy="20.25" r="11.25" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M47.63,50.79c0,7.71-19.29,7.71-19.29,7.71,0,0-19.29,0-19.29-7.71,0-10.65,8.63-19.29,19.29-19.29s19.29,8.63,19.29,19.29Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M35.21,29.14c1.67,1.7,4,2.76,6.57,2.76,5.08,0,9.2-4.12,9.2-9.2s-4.12-9.2-9.2-9.2c-1.38,0-2.69.31-3.87.86" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M46.5,53.7c4.65-.53,11.06-1.98,11.06-6.01,0-8.71-7.06-15.78-15.78-15.78-2.08,0-4.05.41-5.87,1.14" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="28.34" cy="20.25" r="11.25" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M47.63,50.79c0,7.71-19.29,7.71-19.29,7.71,0,0-19.29,0-19.29-7.71,0-10.65,8.63-19.29,19.29-19.29s19.29,8.63,19.29,19.29Z" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      users_default = IconUsers;
    }
  });

  // lib/visible-fat.ts
  var visible_fat_exports = {};
  __export(visible_fat_exports, {
    IconVisibleFat: () => IconVisibleFat,
    default: () => visible_fat_default
  });
  var IconVisibleFat, visible_fat_default;
  var init_visible_fat = __esm({
    "lib/visible-fat.ts"() {
      IconVisibleFat = `<svg id="VisibleFat" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M63,36s-12.09,18-27,18-27-18-27-18c0,0,12.09-18,27-18s27,18,27,18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width: 8px;"/><path d="M63,36s-12.09,18-27,18-27-18-27-18c0,0,12.09-18,27-18s27,18,27,18Z" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/><circle cx="36" cy="36" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width: 8px;"/></svg>`;
      visible_fat_default = IconVisibleFat;
    }
  });

  // lib/visible-l.ts
  var visible_l_exports = {};
  __export(visible_l_exports, {
    IconVisibleL: () => IconVisibleL,
    default: () => visible_l_default
  });
  var IconVisibleL, visible_l_default;
  var init_visible_l = __esm({
    "lib/visible-l.ts"() {
      IconVisibleL = `<svg id="VisibleL" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M63,36s-12.09,18-27,18-27-18-27-18c0,0,12.09-18,27-18s27,18,27,18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,36s-12.09,18-27,18-27-18-27-18c0,0,12.09-18,27-18s27,18,27,18Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      visible_l_default = IconVisibleL;
    }
  });

  // lib/visible-m.ts
  var visible_m_exports = {};
  __export(visible_m_exports, {
    IconVisibleM: () => IconVisibleM,
    default: () => visible_m_default
  });
  var IconVisibleM, visible_m_default;
  var init_visible_m = __esm({
    "lib/visible-m.ts"() {
      IconVisibleM = `<svg id="VisibleM" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M56.25,36s-9.07,13.5-20.25,13.5-20.25-13.5-20.25-13.5c0,0,9.07-13.5,20.25-13.5s20.25,13.5,20.25,13.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M56.25,36s-9.07,13.5-20.25,13.5-20.25-13.5-20.25-13.5c0,0,9.07-13.5,20.25-13.5s20.25,13.5,20.25,13.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="6.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      visible_m_default = IconVisibleM;
    }
  });

  // lib/visible-s.ts
  var visible_s_exports = {};
  __export(visible_s_exports, {
    IconVisibleS: () => IconVisibleS,
    default: () => visible_s_default
  });
  var IconVisibleS, visible_s_default;
  var init_visible_s = __esm({
    "lib/visible-s.ts"() {
      IconVisibleS = `<svg id="VisibleS" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M49.5,36s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,36s-6.04,9-13.5,9-13.5-9-13.5-9c0,0,6.04-9,13.5-9s13.5,9,13.5,9Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="4.5" style="stroke-width: 0px;"/></svg>`;
      visible_s_default = IconVisibleS;
    }
  });

  // lib/wheelchair-action.ts
  var wheelchair_action_exports = {};
  __export(wheelchair_action_exports, {
    IconWheelchairAction: () => IconWheelchairAction,
    default: () => wheelchair_action_default
  });
  var IconWheelchairAction, wheelchair_action_default;
  var init_wheelchair_action = __esm({
    "lib/wheelchair-action.ts"() {
      IconWheelchairAction = `<svg id="WheelchairAction" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72.05"><circle cx="54" cy="17.95" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="27" cy="44.95" r="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,58.45v-11.5c0-1.1-.9-2-2-2h-7" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M27,44.95l17.68-17.68c.78-.78.78-2.05,0-2.83l-3.54-3.54c-.78-.78-2.05-.78-2.83,0l-4.95,4.95" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="54" cy="17.95" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      wheelchair_action_default = IconWheelchairAction;
    }
  });

  // lib/wheelchair.ts
  var wheelchair_exports = {};
  __export(wheelchair_exports, {
    IconWheelchair: () => IconWheelchair,
    default: () => wheelchair_default
  });
  var IconWheelchair, wheelchair_default;
  var init_wheelchair = __esm({
    "lib/wheelchair.ts"() {
      IconWheelchair = `<svg id="Wheelchair" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72.05"><circle cx="27" cy="18" r="4.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="27" cy="18" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M49.5,54v-11.5c0-1.1-.9-2-2-2h-14.56c-.86,0-1.63-.55-1.9-1.37l-4.04-12.13" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="31.5" x2="27" y2="31.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M28.92,31.75c-2.55.49-4.99,1.73-6.97,3.71-5.27,5.27-5.27,13.82,0,19.09s13.82,5.27,19.09,0" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M41.05,54.55c3.8-3.8,4.86-9.3,3.19-14.05" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      wheelchair_default = IconWheelchair;
    }
  });

  // lib/airplane-arrivals.ts
  var airplane_arrivals_exports = {};
  __export(airplane_arrivals_exports, {
    IconAirplaneArrivals: () => IconAirplaneArrivals,
    default: () => airplane_arrivals_default
  });
  var IconAirplaneArrivals, airplane_arrivals_default;
  var init_airplane_arrivals = __esm({
    "lib/airplane-arrivals.ts"() {
      IconAirplaneArrivals = `<svg id="AirplaneArrivals" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M58.52,38.94L19.2,22.66l-4.35-6.49c-.11-.16-.27-.29-.45-.37l-2.38-.99c-.69-.29-1.43.25-1.38.99l-.04.46c-.64,7.21,3.47,14,10.16,16.77l4.56,1.89-9.54,14.24c-.35.52-.13,1.24.45,1.48l2.59,1.07c.28.12.6.1.87-.05l19.77-10.89,15.8,6.54c2.43,1.01,5.24-.27,6.03-2.85.69-2.25-.59-4.64-2.76-5.54Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M36.61,10.79c-.08-.29-.3-.53-.58-.65l-2.59-1.07c-.58-.24-1.24.11-1.36.73l-2.78,14.04,12.6,5.22-5.29-18.27Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="31.5" y1="63.2" x2="63" y2="63.2" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M16.23,50.65l2.59,1.07c.28.12.6.1.87-.05l19.77-10.89,15.8,6.54c2.43,1.01,5.24-.27,6.03-2.85.69-2.25-.59-4.64-2.76-5.54L19.2,22.66l-4.35-6.49c-.11-.16-.27-.29-.45-.37l-2.38-.99c-.69-.29-1.43.25-1.38.99l-.04.46c-.64,7.21,3.47,14,10.16,16.77l4.56,1.89-9.54,14.24c-.35.52-.13,1.24.45,1.48Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36.04,10.15l-2.59-1.07c-.58-.24-1.24.11-1.36.73l-2.78,14.04,12.6,5.22-5.29-18.27c-.08-.29-.3-.53-.58-.65Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      airplane_arrivals_default = IconAirplaneArrivals;
    }
  });

  // lib/airplane-departures.ts
  var airplane_departures_exports = {};
  __export(airplane_departures_exports, {
    IconAirplaneDepartures: () => IconAirplaneDepartures,
    default: () => airplane_departures_default
  });
  var IconAirplaneDepartures, airplane_departures_default;
  var init_airplane_departures = __esm({
    "lib/airplane-departures.ts"() {
      IconAirplaneDepartures = `<svg id="AirplaneDepartures" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M63.95,17.7c-1.1-2.08-3.7-2.86-5.87-1.96l-39.32,16.29-7.66-1.52c-.19-.04-.39-.02-.58.06l-2.38.99c-.69.28-.83,1.19-.27,1.68l.3.36c4.64,5.55,12.35,7.45,19.04,4.68l4.56-1.89,3.33,16.81c.12.62.78.97,1.36.73l2.59-1.07c.28-.12.49-.35.58-.65l6.28-21.68,15.8-6.54c2.43-1.01,3.51-3.9,2.25-6.28Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M26.75,25.72l12.6-5.22-16.66-9.18c-.27-.15-.58-.16-.87-.05l-2.59,1.07c-.58.24-.8.96-.45,1.48l7.96,11.89Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><line x1="9" y1="63" x2="40.5" y2="63" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M8.17,33.59c4.64,5.55,12.35,7.45,19.04,4.68l4.56-1.89,3.33,16.81c.12.62.78.97,1.36.73l2.59-1.07c.28-.12.49-.35.58-.65l6.28-21.68,15.8-6.54c2.43-1.01,3.51-3.9,2.25-6.28-1.1-2.08-3.7-2.86-5.87-1.96l-39.32,16.29-7.66-1.52c-.19-.04-.39-.02-.58.06l-2.38.99c-.69.28-.83,1.19-.27,1.68l.3.36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M26.75,25.72l12.6-5.22-16.66-9.18c-.27-.15-.58-.16-.87-.05l-2.59,1.07c-.58.24-.8.96-.45,1.48l7.96,11.89Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      airplane_departures_default = IconAirplaneDepartures;
    }
  });

  // lib/airplane.ts
  var airplane_exports = {};
  __export(airplane_exports, {
    IconAirplane: () => IconAirplane,
    default: () => airplane_default
  });
  var IconAirplane, airplane_default;
  var init_airplane = __esm({
    "lib/airplane.ts"() {
      IconAirplane = `<svg id="Airplane" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M56.46,15.54c-1.76-1.76-6.36,0-9.55,3.18l-8.91,8.91-22.43-2.49c-.3-.03-.6.07-.82.29l-1.98,1.98c-.45.45-.37,1.19.15,1.54l14.29,9.53c-1.19,1.38-3.4,4.22-5.36,7.1l-10.36,2.43c-.19.04-.37.13-.51.27l-1.12,1.12c-.53.53-.31,1.42.39,1.66l8.01,2.67,2.67,8.01c.24.71,1.13.92,1.66.39l1.12-1.12c.14-.14.23-.32.27-.51l2.43-10.36c2.88-1.96,5.72-4.17,7.1-5.36l9.53,14.29c.35.52,1.09.6,1.54.15l1.98-1.98c.21-.21.32-.52.29-.82l-2.49-22.43,8.91-8.91c3.18-3.18,4.94-7.79,3.18-9.55Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M56.46,15.54c-1.76-1.76-6.36,0-9.55,3.18l-8.91,8.91-22.43-2.49c-.3-.03-.6.07-.82.29l-1.98,1.98c-.45.45-.37,1.19.15,1.54l14.29,9.53c-1.19,1.38-3.4,4.22-5.36,7.1l-10.36,2.43c-.19.04-.37.13-.51.27l-1.12,1.12c-.53.53-.31,1.42.39,1.66l8.01,2.67,2.67,8.01c.24.71,1.13.92,1.66.39l1.12-1.12c.14-.14.23-.32.27-.51l2.43-10.36c2.88-1.96,5.72-4.17,7.1-5.36l9.53,14.29c.35.52,1.09.6,1.54.15l1.98-1.98c.21-.21.32-.52.29-.82l-2.49-22.43,8.91-8.91c3.18-3.18,4.94-7.79,3.18-9.55Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      airplane_default = IconAirplane;
    }
  });

  // lib/airport-connect-flights.ts
  var airport_connect_flights_exports = {};
  __export(airport_connect_flights_exports, {
    IconAirportConnectFlights: () => IconAirportConnectFlights,
    default: () => airport_connect_flights_default
  });
  var IconAirportConnectFlights, airport_connect_flights_default;
  var init_airport_connect_flights = __esm({
    "lib/airport-connect-flights.ts"() {
      IconAirportConnectFlights = `<svg id="AirportConnectFlights" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="27" y1="36" x2="27" y2="36" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-s, calc(var(--icon-stroke-width, 5) * 0.5));"/><line x1="31.5" y1="36" x2="31.5" y2="36" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-s, calc(var(--icon-stroke-width, 5) * 0.5));"/><line x1="36" y1="36" x2="36" y2="36" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-s, calc(var(--icon-stroke-width, 5) * 0.5));"/><line x1="40.5" y1="36" x2="40.5" y2="36" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-s, calc(var(--icon-stroke-width, 5) * 0.5));"/><line x1="45" y1="36" x2="45" y2="36" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-s, calc(var(--icon-stroke-width, 5) * 0.5));"/><g ><path d="M5.32,55.36l14.68-2.94v-12.4l-15.24,12.2c-.16.13-.26.33-.26.54v1.93c0,.43.4.76.82.68Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M34.68,55.36l-14.68-2.94v-12.4l15.24,12.2c.16.13.26.33.26.54v1.93c0,.43-.4.76-.82.68Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M13.8,66.81v-1.09c0-.14.04-.27.12-.38l6.09-9.82,6.09,9.82c.08.11.12.25.12.38v1.09c0,.51-.54.85-1,.62l-5.2-2.6-5.2,2.6c-.46.23-1-.1-1-.62Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M23.1,33.82v18.6c0,1.71-1.39,12.4-3.1,12.4h0c-1.71,0-3.1-10.69-3.1-12.4v-18.6c0-3.1,1.39-6.2,3.1-6.2h0c1.71,0,3.1,3.1,3.1,6.2Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g ><path d="M37.32,32.24l14.68-2.94v-12.4l-15.24,12.2c-.16.13-.26.33-.26.54v1.93c0,.43.4.76.82.68Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M66.68,32.24l-14.68-2.94v-12.4l15.24,12.2c.16.13.26.33.26.54v1.93c0,.43-.4.76-.82.68Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M45.8,43.69v-1.09c0-.14.04-.27.12-.38l6.09-9.82,6.09,9.82c.08.11.12.25.12.38v1.09c0,.51-.54.85-1,.62l-5.2-2.6-5.2,2.6c-.46.23-1-.1-1-.62Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M55.1,10.7v18.6c0,1.71-1.39,12.4-3.1,12.4h0c-1.71,0-3.1-10.69-3.1-12.4V10.7c0-3.1,1.39-6.2,3.1-6.2h0c1.71,0,3.1,3.1,3.1,6.2Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M23.1,42.5v-8.68c0-3.1-1.39-6.2-3.1-6.2s-3.1,3.1-3.1,6.2v8.68l-12.14,9.71c-.16.13-.26.33-.26.54v1.93c0,.43.4.76.82.68l11.61-2.32c.09,1.25.4,3.72.85,6.07l-3.86,6.23c-.08.11-.12.25-.12.38v1.09c0,.51.54.85,1,.62l5.2-2.6,5.2,2.6c.46.23,1-.1,1-.62v-1.09c0-.14-.04-.27-.12-.38l-3.86-6.23c.45-2.35.76-4.82.85-6.07l11.61,2.32c.43.09.82-.24.82-.68v-1.93c0-.21-.1-.41-.26-.54l-12.14-9.71Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M67.24,29.1l-12.14-9.72v-8.68c0-3.1-1.39-6.2-3.1-6.2h0c-1.71,0-3.1,3.1-3.1,6.2v8.68l-12.14,9.72c-.16.13-.26.33-.26.54v1.93c0,.43.4.76.82.68l11.61-2.32c.09,1.25.4,3.72.85,6.07l-3.86,6.23c-.08.11-.12.25-.12.38v1.09c0,.51.54.85,1,.62l5.2-2.6,5.2,2.6c.46.23,1-.1,1-.62v-1.09c0-.14-.04-.27-.12-.38l-3.86-6.23c.45-2.35.76-4.82.85-6.07l11.61,2.32c.43.09.82-.24.82-.68v-1.93c0-.21-.1-.41-.26-.54Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g></svg>`;
      airport_connect_flights_default = IconAirportConnectFlights;
    }
  });

  // lib/airport-transfer2.ts
  var airport_transfer2_exports = {};
  __export(airport_transfer2_exports, {
    IconAirportTransfer2: () => IconAirportTransfer2,
    default: () => airport_transfer2_default
  });
  var IconAirportTransfer2, airport_transfer2_default;
  var init_airport_transfer2 = __esm({
    "lib/airport-transfer2.ts"() {
      IconAirportTransfer2 = `<svg id="AirportTransfer2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="46.86 16.14 40.5 22.5 46.86 28.86" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M19.74,57.7l5.49-8.2,7.56,3.13-11.28,6.21c-.12.07-.27.07-.39.02l-1.18-.49c-.26-.11-.36-.43-.2-.67Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M40.41,55.57c.31-1.02-.27-2.11-1.26-2.52l-17.87-7.4-1.97-2.95c-.05-.07-.12-.13-.2-.17l-1.08-.45c-.31-.13-.65.11-.63.45l-.02.21c-.29,3.28,1.58,6.36,4.62,7.62l15.67,6.49c1.1.46,2.38-.12,2.74-1.3Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M25.89,46.19l5.72,2.37-2.41-8.3c-.04-.13-.14-.24-.26-.29l-1.18-.49c-.26-.11-.56.05-.62.33l-1.26,6.38Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><g><path d="M22.35,31.13l1.92-9.68-7.56-3.13,3.58,12.37c.04.13.14.24.26.29l1.18.49c.26.11.56-.05.62-.33Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M9.24,15.01c.5-.94,1.68-1.3,2.67-.89l17.87,7.4,3.48-.69c.09-.02.18,0,.26.03l1.08.45c.31.13.38.54.12.76l-.14.16c-2.11,2.52-5.61,3.38-8.65,2.13l-15.67-6.49c-1.1-.46-1.59-1.77-1.02-2.85Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M26.14,18.65l-5.72-2.37,7.57-4.17c.12-.07.27-.07.39-.02l1.18.49c.26.11.36.43.2.67l-3.62,5.4Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><path d="M45,58.5c9.94,0,18-8.06,18-18s-8.06-18-18-18h-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      airport_transfer2_default = IconAirportTransfer2;
    }
  });

  // lib/airport-transfer.ts
  var airport_transfer_exports = {};
  __export(airport_transfer_exports, {
    IconAirportTransfer: () => IconAirportTransfer,
    default: () => airport_transfer_default
  });
  var IconAirportTransfer, airport_transfer_default;
  var init_airport_transfer = __esm({
    "lib/airport-transfer.ts"() {
      IconAirportTransfer = `<svg id="AirportTransfer" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="49.27 54 58.27 54 58.27 45" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="36" x2="58.27" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.73 18 40.73 18 40.73 27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="36" x2="40.73" y2="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><path d="M11.38,53.2l5.49-8.2,7.56,3.13-11.28,6.21c-.12.07-.27.07-.39.02l-1.18-.49c-.26-.11-.36-.43-.2-.67Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M32.06,51.07c.31-1.02-.27-2.11-1.26-2.52l-17.87-7.4-1.97-2.95c-.05-.07-.12-.13-.2-.17l-1.08-.45c-.31-.13-.65.11-.63.45l-.02.21c-.29,3.28,1.58,6.36,4.62,7.62l15.67,6.49c1.1.46,2.38-.12,2.74-1.3Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M17.53,41.69l5.72,2.37-2.41-8.3c-.04-.13-.14-.24-.26-.29l-1.18-.49c-.26-.11-.56.05-.62.33l-1.26,6.38Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><g><path d="M22.35,26.63l1.92-9.68-7.56-3.13,3.58,12.37c.04.13.14.24.26.29l1.18.49c.26.11.56-.05.62-.33Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M9.24,10.51c.5-.94,1.68-1.3,2.67-.89l17.87,7.4,3.48-.69c.09-.02.18,0,.26.03l1.08.45c.31.13.38.54.12.76l-.14.16c-2.11,2.52-5.61,3.38-8.65,2.13l-15.67-6.49c-1.1-.46-1.59-1.77-1.02-2.85Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M26.14,14.15l-5.72-2.37,7.57-4.17c.12-.07.27-.07.39-.02l1.18.49c.26.11.36.43.2.67l-3.62,5.4Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></g><line x1="31.5" y1="63" x2="63" y2="63" style="fill: var(--icon-line-color, currentColor);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      airport_transfer_default = IconAirportTransfer;
    }
  });

  // lib/anchor.ts
  var anchor_exports = {};
  __export(anchor_exports, {
    IconAnchor: () => IconAnchor,
    default: () => anchor_default
  });
  var IconAnchor, anchor_default;
  var init_anchor = __esm({
    "lib/anchor.ts"() {
      IconAnchor = `<svg id="Anchor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="36" y1="58.5" x2="36" y2="22.5" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="31.5" x2="40.5" y2="31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,40.5c0,8.7-8.06,15.75-18,15.75s-18-7.05-18-15.75" style="fill: none;  stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="18" r="4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="13.5 40.5 18 36 22.5 40.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 40.5 54 36 58.5 40.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: square; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      anchor_default = IconAnchor;
    }
  });

  // lib/bicycle-surfboard.ts
  var bicycle_surfboard_exports = {};
  __export(bicycle_surfboard_exports, {
    IconBicycleSurfboard: () => IconBicycleSurfboard,
    default: () => bicycle_surfboard_default
  });
  var IconBicycleSurfboard, bicycle_surfboard_default;
  var init_bicycle_surfboard = __esm({
    "lib/bicycle-surfboard.ts"() {
      IconBicycleSurfboard = `<svg id="BicycleSurfboard" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M57.38,11.87c-1.04-1.82-2.18-2.87-3.38-2.87s-2.33,1.05-3.38,2.85v49.68c1.04.94,2.18,1.47,3.38,1.47s2.3-.59,3.38-1.63V11.87Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="18" cy="18" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="18" cy="54" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="38.06" y1="45.9" x2="18" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,18l18.75,9.44c1.44.73,2.41,2.14,2.57,3.75l.38,3.82" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="38.06" y1="39.4" x2="38.06" y2="50.4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="32 25.08 18 36 18 54 32 42 32 25.08" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M63,44.31c0,9.69-4.5,18.69-9,18.69-4.97,0-9-9-9-19.62,0-16.38,4.03-34.38,9-34.38s9,18,9,35.31Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M57.38,11.87c-1.04-1.82-2.18-2.87-3.38-2.87s-2.33,1.05-3.38,2.85v49.68c1.04.94,2.18,1.47,3.38,1.47s2.3-.59,3.38-1.63V11.87Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-s, calc(var(--icon-stroke-width, 5) * 0.5));"/></svg>`;
      bicycle_surfboard_default = IconBicycleSurfboard;
    }
  });

  // lib/bicycle.ts
  var bicycle_exports = {};
  __export(bicycle_exports, {
    IconBicycle: () => IconBicycle,
    default: () => bicycle_default
  });
  var IconBicycle, bicycle_default;
  var init_bicycle = __esm({
    "lib/bicycle.ts"() {
      IconBicycle = `<svg id="Bicycle" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="18" cy="43.75" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="54" cy="43.75" r="9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45.9" y1="23.69" x2="36" y2="43.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,43.75l9.44-18.75c.73-1.44,2.14-2.41,3.75-2.57l3.82-.38" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="39.4" y1="23.69" x2="50.4" y2="23.69" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="25.08 29.75 36 43.75 54 43.75 42 29.75 25.08 29.75" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      bicycle_default = IconBicycle;
    }
  });

  // lib/briefcase-cross.ts
  var briefcase_cross_exports = {};
  __export(briefcase_cross_exports, {
    IconBriefcaseCross: () => IconBriefcaseCross,
    default: () => briefcase_cross_default
  });
  var IconBriefcaseCross, briefcase_cross_default;
  var init_briefcase_cross = __esm({
    "lib/briefcase-cross.ts"() {
      IconBriefcaseCross = `<svg id="BriefcaseCross" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M54.5,18H17.5c-2.21,0-4,1.79-4,4v36c0,2.21,1.79,4,4,4h37c2.21,0,4-1.79,4-4V22c0-2.21-1.79-4-4-4ZM49.5,44.5h-9v9h-9v-9h-9v-9h9v-9h9v9h9v9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="18.5" width="45" height="44" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M29.25,18v-5c0-2.21,1.79-4,4-4h5.5c2.21,0,4,1.79,4,4v5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="31.5 27 40.5 27 40.5 36 49.5 36 49.5 45 40.5 45 40.5 54 31.5 54 31.5 45 22.5 45 22.5 36 31.5 36 31.5 27" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      briefcase_cross_default = IconBriefcaseCross;
    }
  });

  // lib/car.ts
  var car_exports = {};
  __export(car_exports, {
    IconCar: () => IconCar,
    default: () => car_default
  });
  var IconCar, car_default;
  var init_car = __esm({
    "lib/car.ts"() {
      IconCar = `<svg id="Car" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="38.5" width="45" height="13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M13.5,38.5l7.85-15.78c.68-1.36,2.06-2.22,3.58-2.22h22.14c1.52,0,2.91.86,3.58,2.22l7.85,15.78v13.5H13.5v-13.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="38.5" x2="58.5" y2="38.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,52h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M52.5,52h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,52h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M52.5,52h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><line x1="18" y1="45.5" x2="27" y2="45.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="45.5" x2="54" y2="45.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="34" x2="15.74" y2="34" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="56.26" y1="34" x2="63" y2="34" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      car_default = IconCar;
    }
  });

  // lib/cross-circled.ts
  var cross_circled_exports = {};
  __export(cross_circled_exports, {
    IconCrossCircled: () => IconCrossCircled,
    default: () => cross_circled_default
  });
  var IconCrossCircled, cross_circled_default;
  var init_cross_circled = __esm({
    "lib/cross-circled.ts"() {
      IconCrossCircled = `<svg id="CrossCircled" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,9c-14.91,0-27,12.09-27,27s12.09,27,27,27,27-12.09,27-27-12.09-27-27-27ZM49.5,40.5h-9v9h-9v-9h-9v-9h9v-9h9v9h9v9Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="31.5 22.5 40.5 22.5 40.5 31.5 49.5 31.5 49.5 40.5 40.5 40.5 40.5 49.5 31.5 49.5 31.5 40.5 22.5 40.5 22.5 31.5 31.5 31.5 31.5 22.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cross_circled_default = IconCrossCircled;
    }
  });

  // lib/cross.ts
  var cross_exports = {};
  __export(cross_exports, {
    IconCross: () => IconCross,
    default: () => cross_default
  });
  var IconCross, cross_default;
  var init_cross = __esm({
    "lib/cross.ts"() {
      IconCross = `<svg id="Cross" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="27 9 45 9 45 27 63 27 63 45 45 45 45 63 27 63 27 45 9 45 9 27 27 27 27 9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="27 9 45 9 45 27 63 27 63 45 45 45 45 63 27 63 27 45 9 45 9 27 27 27 27 9" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cross_default = IconCross;
    }
  });

  // lib/cruiseship.ts
  var cruiseship_exports = {};
  __export(cruiseship_exports, {
    IconCruiseship: () => IconCruiseship,
    default: () => cruiseship_default
  });
  var IconCruiseship, cruiseship_default;
  var init_cruiseship = __esm({
    "lib/cruiseship.ts"() {
      IconCruiseship = `<svg id="Cruiseship" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M31.62,30.85c2.84-.95,5.91-.96,8.75-.03l10.88,3.53c.73.24,1.44-.4,1.29-1.15l-2.48-12.4c-.09-.47-.5-.8-.98-.8h-26.16c-.48,0-.89.34-.98.8l-2.51,12.53c-.15.75.57,1.39,1.3,1.14l10.89-3.63Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M43.28,14.55l-1.67-3.34c-.68-1.36-2.06-2.21-3.58-2.21h-4.06c-1.51,0-2.9.86-3.58,2.21l-1.67,3.34c-.33.66.15,1.45.89,1.45h12.76c.74,0,1.23-.78.89-1.45Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><path d="M39.14,34.62c-2.03-.66-4.22-.65-6.25.02l-18.43,6.15c-.48.16-.76.65-.66,1.14l2.45,12.24c3.09.82,6.18,4.32,9.26,4.32,3.5,0,7-4.5,10.5-4.5s7,4.5,10.5,4.5c3.09,0,6.18-3.5,9.26-4.32l2.48-12.42c.1-.5-.19-.99-.67-1.15l-18.44-5.99Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><path d="M31.62,30.85c2.84-.95,5.91-.96,8.75-.03l10.88,3.53c.73.24,1.44-.4,1.29-1.15l-2.48-12.4c-.09-.47-.5-.8-.98-.8h-26.16c-.48,0-.89.34-.98.8l-2.51,12.53c-.15.75.57,1.39,1.3,1.14l10.89-3.63Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M43.28,14.55l-1.67-3.34c-.68-1.36-2.06-2.21-3.58-2.21h-4.06c-1.51,0-2.9.86-3.58,2.21l-1.67,3.34c-.33.66.15,1.45.89,1.45h12.76c.74,0,1.23-.78.89-1.45Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M39.14,34.62c-2.03-.66-4.22-.65-6.25.02l-18.43,6.15c-.48.16-.76.65-.66,1.14l2.45,12.24c3.09.82,6.18,4.32,9.26,4.32,3.5,0,7-4.5,10.5-4.5s7,4.5,10.5,4.5c3.09,0,6.18-3.5,9.26-4.32l2.48-12.42c.1-.5-.19-.99-.67-1.15l-18.44-5.99Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><path d="M4.5,58.5c3.5,0,7-4.5,10.5-4.5s7,4.5,10.5,4.5,7-4.5,10.5-4.5,7,4.5,10.5,4.5,7-4.5,10.5-4.5,7,4.5,10.5,4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      cruiseship_default = IconCruiseship;
    }
  });

  // lib/elevator1.ts
  var elevator1_exports = {};
  __export(elevator1_exports, {
    IconElevator1: () => IconElevator1,
    default: () => elevator1_default
  });
  var IconElevator1, elevator1_default;
  var init_elevator1 = __esm({
    "lib/elevator1.ts"() {
      IconElevator1 = `<svg id="Elevator1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="63" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="15.75 42.75 22.5 49.5 29.25 42.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="27" x2="22.5" y2="49.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="56.25 29.25 49.5 22.5 42.75 29.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="45" x2="49.5" y2="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      elevator1_default = IconElevator1;
    }
  });

  // lib/elevator2.ts
  var elevator2_exports = {};
  __export(elevator2_exports, {
    IconElevator2: () => IconElevator2,
    default: () => elevator2_default
  });
  var IconElevator2, elevator2_default;
  var init_elevator2 = __esm({
    "lib/elevator2.ts"() {
      IconElevator2 = `<svg id="Elevator2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g ><path d="M31.5,41.5c0,3.73-3.02,10.12-6.75,10.12s-6.75-6.4-6.75-10.12,3.02-6.75,6.75-6.75,6.75,3.02,6.75,6.75Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><circle cx="24.75" cy="27.56" r="5.06" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><polyline points="54 31.5 47.25 24.75 40.5 31.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="54 40.5 47.25 47.25 40.5 40.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      elevator2_default = IconElevator2;
    }
  });

  // lib/elevator3.ts
  var elevator3_exports = {};
  __export(elevator3_exports, {
    IconElevator3: () => IconElevator3,
    default: () => elevator3_default
  });
  var IconElevator3, elevator3_default;
  var init_elevator3 = __esm({
    "lib/elevator3.ts"() {
      IconElevator3 = `<svg id="Elevator3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M13.5,26.5v32h36V26.5c0-2.21-1.79-4-4-4h-28c-2.21,0-4,1.79-4,4Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="31.5" y1="22.5" x2="31.5" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,26.5v32h36V26.5c0-2.21-1.79-4-4-4h-28c-2.21,0-4,1.79-4,4Z" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="27 9 22.5 13.5 18 9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="45 13.5 40.5 9 36 13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="27" x2="58.5" y2="27" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="36" x2="58.5" y2="36" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="45" x2="58.5" y2="45" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      elevator3_default = IconElevator3;
    }
  });

  // lib/elevator4.ts
  var elevator4_exports = {};
  __export(elevator4_exports, {
    IconElevator4: () => IconElevator4,
    default: () => elevator4_default
  });
  var IconElevator4, elevator4_default;
  var init_elevator4 = __esm({
    "lib/elevator4.ts"() {
      IconElevator4 = `<svg id="Elevator4" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 42.75 29.25 49.5 36 42.75" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.25" y1="27" x2="29.25" y2="49.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 29.25 42.75 22.5 36 29.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.75" y1="45" x2="42.75" y2="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      elevator4_default = IconElevator4;
    }
  });

  // lib/escalator-down.ts
  var escalator_down_exports = {};
  __export(escalator_down_exports, {
    IconEscalatorDown: () => IconEscalatorDown,
    default: () => escalator_down_default
  });
  var IconEscalatorDown, escalator_down_default;
  var init_escalator_down = __esm({
    "lib/escalator-down.ts"() {
      IconEscalatorDown = `<svg id="EscalatorDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M49.5,31.38c0,3.73-3.02,10.12-6.75,10.12s-6.75-6.4-6.75-10.12,3.02-6.75,6.75-6.75,6.75,3.02,6.75,6.75Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="42.75" cy="17.44" r="5.06" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="26.77 58.5 35.77 58.5 35.77 49.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="40.5" x2="35.77" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="9 18 18 18 54 54 63 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/></svg>`;
      escalator_down_default = IconEscalatorDown;
    }
  });

  // lib/escalator-up.ts
  var escalator_up_exports = {};
  __export(escalator_up_exports, {
    IconEscalatorUp: () => IconEscalatorUp,
    default: () => escalator_up_default
  });
  var IconEscalatorUp, escalator_up_default;
  var init_escalator_up = __esm({
    "lib/escalator-up.ts"() {
      IconEscalatorUp = `<svg id="EscalatorUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M49.5,31.38c0,3.73-3.02,10.12-6.75,10.12s-6.75-6.4-6.75-10.12,3.02-6.75,6.75-6.75,6.75,3.02,6.75,6.75Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="42.75" cy="17.44" r="5.06" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="22.73 40.5 13.73 40.5 13.73 49.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.5" y1="58.5" x2="13.73" y2="40.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="9 18 18 18 54 54 63 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/></svg>`;
      escalator_up_default = IconEscalatorUp;
    }
  });

  // lib/escalator.ts
  var escalator_exports = {};
  __export(escalator_exports, {
    IconEscalator: () => IconEscalator,
    default: () => escalator_default
  });
  var IconEscalator, escalator_default;
  var init_escalator = __esm({
    "lib/escalator.ts"() {
      IconEscalator = `<svg id="Escalator" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M49.5,31.38c0,3.73-3.02,10.12-6.75,10.12s-6.75-6.4-6.75-10.12,3.02-6.75,6.75-6.75,6.75,3.02,6.75,6.75Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="42.75" cy="17.44" r="5.06" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="9 18 18 18 54 54 63 54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/></svg>`;
      escalator_default = IconEscalator;
    }
  });

  // lib/ferry.ts
  var ferry_exports = {};
  __export(ferry_exports, {
    IconFerry: () => IconFerry,
    default: () => ferry_default
  });
  var IconFerry, ferry_default;
  var init_ferry = __esm({
    "lib/ferry.ts"() {
      IconFerry = `<svg id="Ferry" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M13.5,54l.33.16c.39-.1.78-.16,1.17-.16,2.5,0,5,2.29,7.5,3.6v-7.6c0-.28.22-.5.5-.5h26c.28,0,.5.22.5.5v7.6c2.5-1.31,5-3.6,7.5-3.6.39,0,.78.06,1.17.16l.33-.16,4.37-13.24c.08-.16.07-.35-.03-.5l-7.92-11.88c-.27-.41-.92-.22-.92.28v6.85c0,.28-.22.5-.5.5H18.5c-.28,0-.5-.22-.5-.5v-6.85c0-.49-.64-.69-.92-.28l-7.92,11.88c-.1.15-.11.34-.03.5l4.37,13.24Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g ><rect x="22.5" y="22.5" width="27" height="9" rx=".5" ry=".5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g ><rect x="31.5" y="13.5" width="9" height="4.5" rx=".5" ry=".5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><rect x="22.5" y="22.5" width="27" height="9" rx=".5" ry=".5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="31.5" y="13.5" width="9" height="4.5" rx=".5" ry=".5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,54l.33.16c.39-.1.78-.16,1.17-.16,2.5,0,5,2.29,7.5,3.6v-7.6c0-.28.22-.5.5-.5h26c.28,0,.5.22.5.5v7.6c2.5-1.31,5-3.6,7.5-3.6.39,0,.78.06,1.17.16l.33-.16,4.37-13.24c.08-.16.07-.35-.03-.5l-7.92-11.88c-.27-.41-.92-.22-.92.28v6.85c0,.28-.22.5-.5.5H18.5c-.28,0-.5-.22-.5-.5v-6.85c0-.49-.64-.69-.92-.28l-7.92,11.88c-.1.15-.11.34-.03.5l4.37,13.24Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M4.5,58.5c3.5,0,7-4.5,10.5-4.5s7,4.5,10.5,4.5,7-4.5,10.5-4.5,7,4.5,10.5,4.5,7-4.5,10.5-4.5,7,4.5,10.5,4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      ferry_default = IconFerry;
    }
  });

  // lib/fire-extinguisher.ts
  var fire_extinguisher_exports = {};
  __export(fire_extinguisher_exports, {
    IconFireExtinguisher: () => IconFireExtinguisher,
    default: () => fire_extinguisher_default
  });
  var IconFireExtinguisher, fire_extinguisher_default;
  var init_fire_extinguisher = __esm({
    "lib/fire-extinguisher.ts"() {
      IconFireExtinguisher = `<svg id="FireExtinguisher" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M27,63h18v-31.5c0-4.97-4.03-9-9-9h0c-4.97,0-9,4.03-9,9v31.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="13.5" x2="36" y2="22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M54,54c0-22.5,18-40.5-9-40.5h-18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M27,63h18v-31.5c0-4.97-4.03-9-9-9h0c-4.97,0-9,4.03-9,9v31.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      fire_extinguisher_default = IconFireExtinguisher;
    }
  });

  // lib/fire-hose.ts
  var fire_hose_exports = {};
  __export(fire_hose_exports, {
    IconFireHose: () => IconFireHose,
    default: () => fire_hose_default
  });
  var IconFireHose, fire_hose_default;
  var init_fire_hose = __esm({
    "lib/fire-hose.ts"() {
      IconFireHose = `<svg id="FireHose" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="49.5" y1="63" x2="49.5" y2="67.5" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="36" x2="22.5" y2="36" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="13.5" x2="22.5" y2="58.5" style="fill: var(--icon-line-color, currentColor);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="31.5" y1="13.5" x2="31.5" y2="58.5" style="fill: var(--icon-line-color, currentColor);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="40.5" y1="13.5" x2="40.5" y2="58.5" style="fill: var(--icon-line-color, currentColor);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="49.5" y1="13.5" x2="49.5" y2="58.5" style="fill: var(--icon-line-color, currentColor);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/></svg>`;
      fire_hose_default = IconFireHose;
    }
  });

  // lib/fire.ts
  var fire_exports = {};
  __export(fire_exports, {
    IconFire: () => IconFire,
    default: () => fire_default
  });
  var IconFire, fire_default;
  var init_fire = __esm({
    "lib/fire.ts"() {
      IconFire = `<svg id="Fire" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M18,45c0,9.94,8.06,18,18,18,13.5,0,31.5-13.5,13.5-36,0,0,0,9-4.5,9-9,0-4.5-18-13.5-27,0,18-13.5,18-13.5,36Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M18,45c0,9.94,8.06,18,18,18,13.5,0,31.5-13.5,13.5-36,0,0,0,9-4.5,9-9,0-4.5-18-13.5-27,0,18-13.5,18-13.5,36Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M39.86,48.86c-6.43,0-8.36-12.86-8.36-12.86,0,0-4.5,8.41-4.5,12.86,0,5.33,4.32,9.64,9.64,9.64s9.64-4.32,9.64-9.64c0-1.26-.25-2.45-.68-3.55-1.06,2.11-3.23,3.55-5.74,3.55Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/></svg>`;
      fire_default = IconFire;
    }
  });

  // lib/gravestone2.ts
  var gravestone2_exports = {};
  __export(gravestone2_exports, {
    IconGravestone2: () => IconGravestone2,
    default: () => gravestone2_default
  });
  var IconGravestone2, gravestone2_default;
  var init_gravestone2 = __esm({
    "lib/gravestone2.ts"() {
      IconGravestone2 = `<svg id="Gravestone2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M30.5,27h11c4.42,0,8,3.58,8,8v28h-27v-28c0-4.42,3.58-8,8-8Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="9" x2="36" y2="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="18" x2="45" y2="18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30.5,27h11c4.42,0,8,3.58,8,8v28h-27v-28c0-4.42,3.58-8,8-8Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="63" x2="58.5" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      gravestone2_default = IconGravestone2;
    }
  });

  // lib/gravestone3.ts
  var gravestone3_exports = {};
  __export(gravestone3_exports, {
    IconGravestone3: () => IconGravestone3,
    default: () => gravestone3_default
  });
  var IconGravestone3, gravestone3_default;
  var init_gravestone3 = __esm({
    "lib/gravestone3.ts"() {
      IconGravestone3 = `<svg id="Gravestone3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="27 63 27 40.5 13.5 40.5 13.5 22.5 27 22.5 27 9 45 9 45 22.5 58.5 22.5 58.5 40.5 45 40.5 45 63" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polyline points="27 63 27 40.5 13.5 40.5 13.5 22.5 27 22.5 27 9 45 9 45 22.5 58.5 22.5 58.5 40.5 45 40.5 45 63" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="63" x2="58.5" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      gravestone3_default = IconGravestone3;
    }
  });

  // lib/gravestone.ts
  var gravestone_exports = {};
  __export(gravestone_exports, {
    IconGravestone: () => IconGravestone,
    default: () => gravestone_default
  });
  var IconGravestone, gravestone_default;
  var init_gravestone = __esm({
    "lib/gravestone.ts"() {
      IconGravestone = `<svg id="Gravestone" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M30.5,19h11c4.42,0,8,3.58,8,8v31.5h-27v-31.5c0-4.42,3.58-8,8-8Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M30.5,19h11c4.42,0,8,3.58,8,8v31.5h-27v-31.5c0-4.42,3.58-8,8-8Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="58.5" x2="58.5" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      gravestone_default = IconGravestone;
    }
  });

  // lib/luggage-belt.ts
  var luggage_belt_exports = {};
  __export(luggage_belt_exports, {
    IconLuggageBelt: () => IconLuggageBelt,
    default: () => luggage_belt_default
  });
  var IconLuggageBelt, luggage_belt_default;
  var init_luggage_belt = __esm({
    "lib/luggage-belt.ts"() {
      IconLuggageBelt = `<svg id="LuggageBelt" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="9" y="27" width="36" height="22.5" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="9" y="27" width="36" height="22.5" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M21.38,27v-5c0-1.1.9-2,2-2h7.25c1.1,0,2,.9,2,2v5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="58.5" x2="9" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="18" y1="58.5" x2="18" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="27" y1="58.5" x2="27" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="36" y1="58.5" x2="36" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="45" y1="58.5" x2="45" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="54" y1="58.5" x2="54" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="63" y1="58.5" x2="63" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/></svg>`;
      luggage_belt_default = IconLuggageBelt;
    }
  });

  // lib/luggage-locker.ts
  var luggage_locker_exports = {};
  __export(luggage_locker_exports, {
    IconLuggageLocker: () => IconLuggageLocker,
    default: () => luggage_locker_default
  });
  var IconLuggageLocker, luggage_locker_default;
  var init_luggage_locker = __esm({
    "lib/luggage-locker.ts"() {
      IconLuggageLocker = `<svg id="LuggageLocker" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="29.5" width="36" height="22.5" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="18" y="29.5" width="36" height="22.5" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M30.38,29.5v-5c0-1.1.9-2,2-2h7.25c1.1,0,2,.9,2,2v5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="9" y="9" width="54" height="54" rx="4" ry="4" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      luggage_locker_default = IconLuggageLocker;
    }
  });

  // lib/luggage-trolley.ts
  var luggage_trolley_exports = {};
  __export(luggage_trolley_exports, {
    IconLuggageTrolley: () => IconLuggageTrolley,
    default: () => luggage_trolley_default
  });
  var IconLuggageTrolley, luggage_trolley_default;
  var init_luggage_trolley = __esm({
    "lib/luggage-trolley.ts"() {
      IconLuggageTrolley = `<svg id="LuggageTrolley" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="22.5" width="36" height="22.5" rx="2" ry="2" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="13.5" y="22.5" width="36" height="22.5" rx="2" ry="2" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M25.88,22.5v-5c0-1.1.9-2,2-2h7.25c1.1,0,2,.9,2,2v5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="63" x2="36" y2="63" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="45" y1="63" x2="45" y2="63" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><path d="M13.5,54h41c2.21,0,4-1.79,4-4V13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      luggage_trolley_default = IconLuggageTrolley;
    }
  });

  // lib/luggage.ts
  var luggage_exports = {};
  __export(luggage_exports, {
    IconLuggage: () => IconLuggage,
    default: () => luggage_default
  });
  var IconLuggage, luggage_default;
  var init_luggage = __esm({
    "lib/luggage.ts"() {
      IconLuggage = `<svg id="Luggage" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="27" width="45" height="31.5" rx="4" ry="4" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="27" y1="27" x2="27" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="27" x2="45" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="13.5" y="27" width="45" height="31.5" rx="4" ry="4" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M29.25,27v-5c0-2.21,1.79-4,4-4h5.5c2.21,0,4,1.79,4,4v5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      luggage_default = IconLuggage;
    }
  });

  // lib/metro2.ts
  var metro2_exports = {};
  __export(metro2_exports, {
    IconMetro2: () => IconMetro2,
    default: () => metro2_default
  });
  var IconMetro2, metro2_default;
  var init_metro2 = __esm({
    "lib/metro2.ts"() {
      IconMetro2 = `<svg id="Metro2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M50.05,59.06c7.76-4.74,12.95-13.29,12.95-23.06,0-14.91-12.09-27-27-27s-27,12.09-27,27c0,9.76,5.18,18.31,12.95,23.06" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M22.5,40.5h27v5.5c0,4.42-3.58,8-8,8h-11c-4.42,0-8-3.58-8-8v-5.5h0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="67.5" x2="27" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="67.5" x2="45" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="63" x2="54" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="22.5" y="22.5" width="27" height="31.5" rx="8" ry="8" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="40.5" x2="49.5" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      metro2_default = IconMetro2;
    }
  });

  // lib/metro.ts
  var metro_exports = {};
  __export(metro_exports, {
    IconMetro: () => IconMetro,
    default: () => metro_default
  });
  var IconMetro, metro_default;
  var init_metro = __esm({
    "lib/metro.ts"() {
      IconMetro = `<svg id="Metro" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M18,36h36v10c0,4.42-3.58,8-8,8h-20c-4.42,0-8-3.58-8-8v-10h0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.5" y1="67.5" x2="27" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.5" y1="67.5" x2="45" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="63" x2="54" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="13.5" width="36" height="40.5" rx="8" ry="8" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="36" x2="54" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="45" x2="27" y2="45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="45" y1="45" x2="45" y2="45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="36" y1="13.5" x2="36" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      metro_default = IconMetro;
    }
  });

  // lib/no-smoking-circled.ts
  var no_smoking_circled_exports = {};
  __export(no_smoking_circled_exports, {
    IconNoSmokingCircled: () => IconNoSmokingCircled,
    default: () => no_smoking_circled_default
  });
  var IconNoSmokingCircled, no_smoking_circled_default;
  var init_no_smoking_circled = __esm({
    "lib/no-smoking-circled.ts"() {
      IconNoSmokingCircled = `<svg id="NoSmokingCircled" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><circle cx="36" cy="36" r="27" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><rect x="22.5" y="31.5" width="31.5" height="9" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M18,28.8c0-3.15,6.3-9.45,15.75-3.15s15.75,0,15.75-3.15" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18" y1="31.5" x2="18" y2="40.5" style="fill: var(--icon-line-color, currentColor);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="16.91" y1="16.91" x2="55.09" y2="55.09" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="36" cy="36" r="27" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      no_smoking_circled_default = IconNoSmokingCircled;
    }
  });

  // lib/no-smoking.ts
  var no_smoking_exports = {};
  __export(no_smoking_exports, {
    IconNoSmoking: () => IconNoSmoking,
    default: () => no_smoking_default
  });
  var IconNoSmoking, no_smoking_default;
  var init_no_smoking = __esm({
    "lib/no-smoking.ts"() {
      IconNoSmoking = `<svg id="NoSmoking" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="36" width="45" height="9" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M13.5,31.5c0-4.5,9-13.5,22.5-4.5s22.5,0,22.5-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="36" x2="13.5" y2="45" style="fill: var(--icon-line-color, currentColor);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="13.5" x2="58.5" y2="58.5" style="fill: var(--icon-line-color, currentColor); stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      no_smoking_default = IconNoSmoking;
    }
  });

  // lib/palmtree-island-wave.ts
  var palmtree_island_wave_exports = {};
  __export(palmtree_island_wave_exports, {
    IconPalmtreeIslandWave: () => IconPalmtreeIslandWave,
    default: () => palmtree_island_wave_default
  });
  var IconPalmtreeIslandWave, palmtree_island_wave_default;
  var init_palmtree_island_wave = __esm({
    "lib/palmtree-island-wave.ts"() {
      IconPalmtreeIslandWave = `<svg id="PalmtreeIslandWave" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,19.98c6.77,9.03,13.54,13.54,20.31,15.8,0-8.73-9.09-15.8-20.31-15.8s-20.31,7.07-20.31,15.8c4.51-2.26,15.8-6.77,20.31-15.8" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,19.98c-4.84-6.45-9.67-9.67-14.51-11.29,0,6.23,6.5,11.29,14.51,11.29s14.51-5.05,14.51-11.29c-3.22,1.61-11.29,4.84-14.51,11.29" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.51,31.26c0,6.23-4.51,11.29-4.51,11.29,0,0-4.51-5.05-4.51-11.29s4.51-11.29,4.51-11.29c0,0,4.51,5.05,4.51,11.29Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,19.98s-9,11.52-6.45,30.09" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,19.98c6.77,9.03,13.54,13.54,20.31,15.8,0-8.73-9.09-15.8-20.31-15.8s-20.31,7.07-20.31,15.8c4.51-2.26,15.8-6.77,20.31-15.8" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,19.98c-4.84-6.45-9.67-9.67-14.51-11.29,0,6.23,6.5,11.29,14.51,11.29s14.51-5.05,14.51-11.29c-3.22,1.61-11.29,4.84-14.51,11.29" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.51,31.26c0,6.23-4.51,11.29-4.51,11.29,0,0-4.51-5.05-4.51-11.29s4.51-11.29,4.51-11.29c0,0,4.51,5.05,4.51,11.29Z" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M15,58.5c3.5,0,7,4.5,10.5,4.5s7-4.5,10.5-4.5,7,4.5,10.5,4.5,7-4.5,10.5-4.5c.07,0,.15.01.22.02-3.08-5.25-11.42-9.02-21.22-9.02s-18.14,3.77-21.22,9.02c.08,0,.15-.02.22-.02Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M57,58.5c.07,0,.15.01.22.02-3.08-5.25-11.42-9.02-21.22-9.02s-18.14,3.77-21.22,9.02c.08,0,.15-.02.22-.02" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M4.5,63c3.5,0,7-4.5,10.5-4.5s7,4.5,10.5,4.5,7-4.5,10.5-4.5,7,4.5,10.5,4.5,7-4.5,10.5-4.5,7,4.5,10.5,4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      palmtree_island_wave_default = IconPalmtreeIslandWave;
    }
  });

  // lib/palmtree-island.ts
  var palmtree_island_exports = {};
  __export(palmtree_island_exports, {
    IconPalmtreeIsland: () => IconPalmtreeIsland,
    default: () => palmtree_island_default
  });
  var IconPalmtreeIsland, palmtree_island_default;
  var init_palmtree_island = __esm({
    "lib/palmtree-island.ts"() {
      IconPalmtreeIsland = `<svg id="PalmtreeIsland" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,19.98s-13.5,16.02-4.5,34.02" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,63c0-4.97-10.07-9-22.5-9s-22.5,4.03-22.5,9h45Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M58.5,63c0-4.97-10.07-9-22.5-9s-22.5,4.03-22.5,9h45Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,19.98c6.77,9.03,13.54,13.54,20.31,15.8,0-8.73-9.09-15.8-20.31-15.8s-20.31,7.07-20.31,15.8c4.51-2.26,15.8-6.77,20.31-15.8" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,19.98c-4.84-6.45-9.67-9.67-14.51-11.29,0,6.23,6.5,11.29,14.51,11.29s14.51-5.05,14.51-11.29c-3.22,1.61-11.29,4.84-14.51,11.29" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M40.51,31.26c0,6.23-4.51,11.29-4.51,11.29,0,0-4.51-5.05-4.51-11.29s4.51-11.29,4.51-11.29c0,0,4.51,5.05,4.51,11.29Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,19.98c6.77,9.03,13.54,13.54,20.31,15.8,0-8.73-9.09-15.8-20.31-15.8s-20.31,7.07-20.31,15.8c4.51-2.26,15.8-6.77,20.31-15.8" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,19.98c-4.84-6.45-9.67-9.67-14.51-11.29,0,6.23,6.5,11.29,14.51,11.29s14.51-5.05,14.51-11.29c-3.22,1.61-11.29,4.84-14.51,11.29" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M40.51,31.26c0,6.23-4.51,11.29-4.51,11.29,0,0-4.51-5.05-4.51-11.29s4.51-11.29,4.51-11.29c0,0,4.51,5.05,4.51,11.29Z" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      palmtree_island_default = IconPalmtreeIsland;
    }
  });

  // lib/palmtree.ts
  var palmtree_exports = {};
  __export(palmtree_exports, {
    IconPalmtree: () => IconPalmtree,
    default: () => palmtree_default
  });
  var IconPalmtree, palmtree_default;
  var init_palmtree = __esm({
    "lib/palmtree.ts"() {
      IconPalmtree = `<svg id="Palmtree" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M36,22.5c8.1,10.8,16.2,16.2,24.3,18.9,0-10.44-10.88-18.9-24.3-18.9s-24.3,8.46-24.3,18.9c5.4-2.7,18.9-8.1,24.3-18.9" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,22.5c-5.79-7.71-11.57-11.57-17.36-13.5,0,7.46,7.77,13.5,17.36,13.5s17.36-6.04,17.36-13.5c-3.86,1.93-13.5,5.79-17.36,13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M41.4,36c0,7.46-5.4,13.5-5.4,13.5,0,0-5.4-6.04-5.4-13.5s5.4-13.5,5.4-13.5c0,0,5.4,6.04,5.4,13.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M36,22.5s-18,22.5-4.5,40.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="63" x2="58.5" y2="63" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,22.5c8.1,10.8,16.2,16.2,24.3,18.9,0-10.44-10.88-18.9-24.3-18.9s-24.3,8.46-24.3,18.9c5.4-2.7,18.9-8.1,24.3-18.9" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,22.5c-5.79-7.71-11.57-11.57-17.36-13.5,0,7.46,7.77,13.5,17.36,13.5s17.36-6.04,17.36-13.5c-3.86,1.93-13.5,5.79-17.36,13.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M41.4,36c0,7.46-5.4,13.5-5.4,13.5,0,0-5.4-6.04-5.4-13.5s5.4-13.5,5.4-13.5c0,0,5.4,6.04,5.4,13.5Z" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      palmtree_default = IconPalmtree;
    }
  });

  // lib/parasol-island-wave.ts
  var parasol_island_wave_exports = {};
  __export(parasol_island_wave_exports, {
    IconParasolIslandWave: () => IconParasolIslandWave,
    default: () => parasol_island_wave_default
  });
  var IconParasolIslandWave, parasol_island_wave_default;
  var init_parasol_island_wave = __esm({
    "lib/parasol-island-wave.ts"() {
      IconParasolIslandWave = `<svg id="ParasolIslandWave" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M23.42,12.77c-11.48,4.76-16.93,17.92-12.18,29.4,0,0,1.43-4.07,4.71-5.43s7.17.51,7.17.51c0,0,2.76-4.62,7.68-6.66s10.14-.72,10.14-.72c0,0,1.43-4.07,4.71-5.43s7.17.51,7.17.51c-4.76-11.48-17.92-16.93-29.4-12.18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M40.94,29.87c-7.38-17.82-17.52-17.1-17.52-17.1,0,0-7.68,6.66-.3,24.48" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="30.8" y1="30.59" x2="36" y2="49.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M23.42,12.77c-11.48,4.76-16.93,17.92-12.18,29.4,0,0,1.43-4.07,4.71-5.43s7.17.51,7.17.51c0,0,2.76-4.62,7.68-6.66s10.14-.72,10.14-.72c0,0,1.43-4.07,4.71-5.43s7.17.51,7.17.51c-4.76-11.48-17.92-16.93-29.4-12.18Z" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M15,58.5c3.5,0,7,4.5,10.5,4.5s7-4.5,10.5-4.5,7,4.5,10.5,4.5,7-4.5,10.5-4.5c.07,0,.15.01.22.02-3.08-5.25-11.42-9.02-21.22-9.02s-18.14,3.77-21.22,9.02c.08,0,.15-.02.22-.02Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M57,58.5c.07,0,.15.01.22.02-3.08-5.25-11.42-9.02-21.22-9.02s-18.14,3.77-21.22,9.02c.08,0,.15-.02.22-.02" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M4.5,63c3.5,0,7-4.5,10.5-4.5s7,4.5,10.5,4.5,7-4.5,10.5-4.5,7,4.5,10.5,4.5,7-4.5,10.5-4.5,7,4.5,10.5,4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      parasol_island_wave_default = IconParasolIslandWave;
    }
  });

  // lib/parasol-island.ts
  var parasol_island_exports = {};
  __export(parasol_island_exports, {
    IconParasolIsland: () => IconParasolIsland,
    default: () => parasol_island_default
  });
  var IconParasolIsland, parasol_island_default;
  var init_parasol_island = __esm({
    "lib/parasol-island.ts"() {
      IconParasolIsland = `<svg id="ParasolIsland" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M26.06,12.77c-11.48,4.76-16.93,17.92-12.18,29.4,0,0,1.43-4.07,4.71-5.43s7.17.51,7.17.51c0,0,2.76-4.62,7.68-6.66s10.14-.72,10.14-.72c0,0,1.43-4.07,4.71-5.43s7.17.51,7.17.51c-4.76-11.48-17.92-16.93-29.4-12.18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M58.5,63c0-4.97-10.07-9-22.5-9s-22.5,4.03-22.5,9h45Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M43.58,29.87c-7.38-17.82-17.52-17.1-17.52-17.1,0,0-7.68,6.66-.3,24.48" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="33.44" y1="30.59" x2="43.14" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M26.06,12.77c-11.48,4.76-16.93,17.92-12.18,29.4,0,0,1.43-4.07,4.71-5.43s7.17.51,7.17.51c0,0,2.76-4.62,7.68-6.66s10.14-.72,10.14-.72c0,0,1.43-4.07,4.71-5.43s7.17.51,7.17.51c-4.76-11.48-17.92-16.93-29.4-12.18Z" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M58.5,63c0-4.97-10.07-9-22.5-9s-22.5,4.03-22.5,9h45Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      parasol_island_default = IconParasolIsland;
    }
  });

  // lib/parasol.ts
  var parasol_exports = {};
  __export(parasol_exports, {
    IconParasol: () => IconParasol,
    default: () => parasol_default
  });
  var IconParasol, parasol_default;
  var init_parasol = __esm({
    "lib/parasol.ts"() {
      IconParasol = `<svg id="Parasol" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><path d="M36,13.5c-12.43,0-22.5,10.07-22.5,22.5,0,0,2.88-3.21,6.43-3.21s6.43,3.21,6.43,3.21c0,0,4.32-3.21,9.64-3.21s9.64,3.21,9.64,3.21c0,0,2.88-3.21,6.43-3.21s6.43,3.21,6.43,3.21c0-12.43-10.07-22.5-22.5-22.5Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M45.64,36c0-19.29-9.64-22.5-9.64-22.5,0,0-9.64,3.21-9.64,22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="32.79" x2="36" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M36,13.5c-12.43,0-22.5,10.07-22.5,22.5,0,0,2.88-3.21,6.43-3.21s6.43,3.21,6.43,3.21c0,0,4.32-3.21,9.64-3.21s9.64,3.21,9.64,3.21c0,0,2.88-3.21,6.43-3.21s6.43,3.21,6.43,3.21c0-12.43-10.07-22.5-22.5-22.5Z" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="63" x2="58.5" y2="63" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      parasol_default = IconParasol;
    }
  });

  // lib/plaster.ts
  var plaster_exports = {};
  __export(plaster_exports, {
    IconPlaster: () => IconPlaster,
    default: () => plaster_default
  });
  var IconPlaster, plaster_default;
  var init_plaster = __esm({
    "lib/plaster.ts"() {
      IconPlaster = `<svg id="Plaster" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M39.18,13.73l-25.46,25.46c-5.27,5.27-5.27,13.82,0,19.09s13.82,5.27,19.09,0l25.46-25.46c5.27-5.27,5.27-13.82,0-19.09-5.27-5.27-13.82-5.27-19.09,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="16.91" y1="36" x2="36" y2="55.09" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="16.91" x2="55.09" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.64" y1="36" x2="29.64" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="29.64" x2="36" y2="29.64" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="42.36" x2="36" y2="42.36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.36" y1="36" x2="42.36" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M39.18,13.73l-25.46,25.46c-5.27,5.27-5.27,13.82,0,19.09s13.82,5.27,19.09,0l25.46-25.46c5.27-5.27,5.27-13.82,0-19.09-5.27-5.27-13.82-5.27-19.09,0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      plaster_default = IconPlaster;
    }
  });

  // lib/plasters.ts
  var plasters_exports = {};
  __export(plasters_exports, {
    IconPlasters: () => IconPlasters,
    default: () => plasters_default
  });
  var IconPlasters, plasters_default;
  var init_plasters = __esm({
    "lib/plasters.ts"() {
      IconPlasters = `<svg id="Plasters" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M39.18,13.73l-25.46,25.46c-5.27,5.27-5.27,13.82,0,19.09,5.27,5.27,13.82,5.27,19.09,0l25.46-25.46c5.27-5.27,5.27-13.82,0-19.09-5.27-5.27-13.82-5.27-19.09,0Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M13.73,32.82l25.46,25.46c5.27,5.27,13.82,5.27,19.09,0s5.27-13.82,0-19.09l-25.46-25.46c-5.27-5.27-13.82-5.27-19.09,0-5.27,5.27-5.27,13.82,0,19.09Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="16.91" y1="36" x2="36" y2="55.09" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="16.91" x2="55.09" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="29.64" y1="36" x2="29.64" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="29.64" x2="36" y2="29.64" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="42.36" x2="36" y2="42.36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="42.36" y1="36" x2="42.36" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M39.18,13.73l-25.46,25.46c-5.27,5.27-5.27,13.82,0,19.09,5.27,5.27,13.82,5.27,19.09,0l25.46-25.46c5.27-5.27,5.27-13.82,0-19.09-5.27-5.27-13.82-5.27-19.09,0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="36" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      plasters_default = IconPlasters;
    }
  });

  // lib/rental-car.ts
  var rental_car_exports = {};
  __export(rental_car_exports, {
    IconRentalCar: () => IconRentalCar,
    default: () => rental_car_default
  });
  var IconRentalCar, rental_car_default;
  var init_rental_car = __esm({
    "lib/rental-car.ts"() {
      IconRentalCar = `<svg id="RentalCar" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="40.5" width="45" height="13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M13.5,40.5l7.85-15.78c.68-1.36,2.06-2.22,3.58-2.22h22.14c1.52,0,2.91.86,3.58,2.22l7.85,15.78v13.5H13.5v-13.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="40.5" x2="58.5" y2="40.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,54h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M52.5,54h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,54h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M52.5,54h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><line x1="18" y1="47.5" x2="27" y2="47.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="47.5" x2="54" y2="47.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="36" x2="15.74" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="56.26" y1="36" x2="63" y2="36" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><circle cx="27" cy="13.5" r="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="49.5 13.5 45 13.5 31.5 13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="40.5" y1="18" x2="40.5" y2="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="18" x2="45" y2="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      rental_car_default = IconRentalCar;
    }
  });

  // lib/security-camera2.ts
  var security_camera2_exports = {};
  __export(security_camera2_exports, {
    IconSecurityCamera2: () => IconSecurityCamera2,
    default: () => security_camera2_default
  });
  var IconSecurityCamera2, security_camera2_default;
  var init_security_camera2 = __esm({
    "lib/security-camera2.ts"() {
      IconSecurityCamera2 = `<svg id="SecurityCamera2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="14.21" y="25.64" width="40.5" height="18" rx="2" ry="2" transform="translate(34.58 -14.22) rotate(45)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><line x1="58.33" y1="52.14" x2="51.96" y2="58.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><path d="M18,58.5h7c1.1,0,2-.9,2-2v-16" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><g><rect x="14.21" y="25.64" width="40.5" height="18" rx="2" ry="2" transform="translate(34.58 -14.22) rotate(45)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.33" y1="52.14" x2="51.96" y2="58.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><path d="M13.5,54v9c2.49,0,4.5-2.01,4.5-4.5s-2.01-4.5-4.5-4.5Z" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27" y1="27" x2="27" y2="27" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      security_camera2_default = IconSecurityCamera2;
    }
  });

  // lib/security-camera3.ts
  var security_camera3_exports = {};
  __export(security_camera3_exports, {
    IconSecurityCamera3: () => IconSecurityCamera3,
    default: () => security_camera3_default
  });
  var IconSecurityCamera3, security_camera3_default;
  var init_security_camera3 = __esm({
    "lib/security-camera3.ts"() {
      IconSecurityCamera3 = `<svg id="SecurityCamera3" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M18,31.5v4.5c0,9.94,8.06,18,18,18s18-8.06,18-18v-4.5H18Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><circle cx="36" cy="45" r="9" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M18,31.5v4.5c0,9.94,8.06,18,18,18s18-8.06,18-18v-4.5H18Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,18h45v11.5c0,1.1-.9,2-2,2H15.5c-1.1,0-2-.9-2-2v-11.5h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="45" x2="36" y2="45" style="fill: none;  stroke-linecap: round; stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      security_camera3_default = IconSecurityCamera3;
    }
  });

  // lib/security-camera.ts
  var security_camera_exports = {};
  __export(security_camera_exports, {
    IconSecurityCamera: () => IconSecurityCamera,
    default: () => security_camera_default
  });
  var IconSecurityCamera, security_camera_default;
  var init_security_camera = __esm({
    "lib/security-camera.ts"() {
      IconSecurityCamera = `<svg id="SecurityCamera" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><g ><rect x="13.74" y="24.99" width="40.5" height="18" rx="2" ry="2" transform="translate(33.99 -14.08) rotate(45)" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /><line x1="57.86" y1="51.5" x2="51.5" y2="57.86" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1);" /></g><g><rect x="13.74" y="24.99" width="40.5" height="18" rx="2" ry="2" transform="translate(33.99 -14.08) rotate(45)" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="57.86" y1="51.5" x2="51.5" y2="57.86" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></g><line x1="36" y1="9" x2="36" y2="36" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="27.04" y1="26.26" x2="27.04" y2="26.26" style="fill: none;  stroke-linecap: round; stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      security_camera_default = IconSecurityCamera;
    }
  });

  // lib/ship.ts
  var ship_exports = {};
  __export(ship_exports, {
    IconShip: () => IconShip,
    default: () => ship_default
  });
  var IconShip, ship_default;
  var init_ship = __esm({
    "lib/ship.ts"() {
      IconShip = `<svg id="Ship" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="18 54.86 13.5 40.5 36 27 58.5 40.5 54 54.86" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="18 37.8 22.5 18 49.5 18 54 37.8" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45 18 27 18 31.5 9 40.5 9 45 18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="36" x2="36" y2="54" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="14.98 45.22 36 36 57.02 45.22" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M4.5,58.5c3.5,0,7-4.5,10.5-4.5s7,4.5,10.5,4.5,7-4.5,10.5-4.5,7,4.5,10.5,4.5,7-4.5,10.5-4.5,7,4.5,10.5,4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      ship_default = IconShip;
    }
  });

  // lib/signpost2.ts
  var signpost2_exports = {};
  __export(signpost2_exports, {
    IconSignpost2: () => IconSignpost2,
    default: () => signpost2_default
  });
  var IconSignpost2, signpost2_default;
  var init_signpost2 = __esm({
    "lib/signpost2.ts"() {
      IconSignpost2 = `<svg id="Signpost2" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="45 18 22.5 18 13.5 24.75 22.5 31.5 54 31.5 54 18 45 18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><polygon points="33 49.5 48 49.5 54 45 48 40.5 27 40.5 27 49.5 33 49.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="49.5" x2="36" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="31.5" x2="36" y2="40.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="58.5" x2="58.5" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45 18 22.5 18 13.5 24.75 22.5 31.5 54 31.5 54 18 45 18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="33 49.5 48 49.5 54 45 48 40.5 27 40.5 27 49.5 33 49.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      signpost2_default = IconSignpost2;
    }
  });

  // lib/signpost.ts
  var signpost_exports = {};
  __export(signpost_exports, {
    IconSignpost: () => IconSignpost,
    default: () => signpost_default
  });
  var IconSignpost, signpost_default;
  var init_signpost = __esm({
    "lib/signpost.ts"() {
      IconSignpost = `<svg id="Signpost" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polygon points="45 18 22.5 18 13.5 24.75 22.5 31.5 54 31.5 54 18 45 18" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="36" y1="31.5" x2="36" y2="58.5" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="36" y1="9" x2="36" y2="18" style="fill: none;  stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="58.5" x2="58.5" y2="58.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polygon points="45 18 22.5 18 13.5 24.75 22.5 31.5 54 31.5 54 18 45 18" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-linejoin: round; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      signpost_default = IconSignpost;
    }
  });

  // lib/smoking.ts
  var smoking_exports = {};
  __export(smoking_exports, {
    IconSmoking: () => IconSmoking,
    default: () => smoking_default
  });
  var IconSmoking, smoking_default;
  var init_smoking = __esm({
    "lib/smoking.ts"() {
      IconSmoking = `<svg id="Smoking" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="18" y="36" width="45" height="9" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M13.5,31.5c0-4.5,9-13.5,22.5-4.5s22.5,0,22.5-4.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="36" x2="13.5" y2="45" style="fill: var(--icon-line-color, currentColor);  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      smoking_default = IconSmoking;
    }
  });

  // lib/stairs-down.ts
  var stairs_down_exports = {};
  __export(stairs_down_exports, {
    IconStairsDown: () => IconStairsDown,
    default: () => stairs_down_default
  });
  var IconStairsDown, stairs_down_default;
  var init_stairs_down = __esm({
    "lib/stairs-down.ts"() {
      IconStairsDown = `<svg id="StairsDown" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="18 63 18 54 27 54 27 45 36 45 36 36 45 36 45 27 54 27 54 18 63 18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.61 31.39 13.61 31.39 13.61 22.39" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="31.39" y1="13.39" x2="13.61" y2="31.39" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      stairs_down_default = IconStairsDown;
    }
  });

  // lib/stairs-up.ts
  var stairs_up_exports = {};
  __export(stairs_up_exports, {
    IconStairsUp: () => IconStairsUp,
    default: () => stairs_up_default
  });
  var IconStairsUp, stairs_up_default;
  var init_stairs_up = __esm({
    "lib/stairs-up.ts"() {
      IconStairsUp = `<svg id="StairsUp" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="18 63 18 54 27 54 27 45 36 45 36 36 45 36 45 27 54 27 54 18 63 18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="22.5 13.5 31.5 13.5 31.5 22.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.73" y1="31.5" x2="31.5" y2="13.5" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      stairs_up_default = IconStairsUp;
    }
  });

  // lib/stairs.ts
  var stairs_exports = {};
  __export(stairs_exports, {
    IconStairs: () => IconStairs,
    default: () => stairs_default
  });
  var IconStairs, stairs_default;
  var init_stairs = __esm({
    "lib/stairs.ts"() {
      IconStairs = `<svg id="Stairs" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><polyline points="18 63 18 54 27 54 27 45 36 45 36 36 45 36 45 27 54 27 54 18 63 18" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      stairs_default = IconStairs;
    }
  });

  // lib/taxi.ts
  var taxi_exports = {};
  __export(taxi_exports, {
    IconTaxi: () => IconTaxi,
    default: () => taxi_default
  });
  var IconTaxi, taxi_default;
  var init_taxi = __esm({
    "lib/taxi.ts"() {
      IconTaxi = `<svg id="Taxi" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><rect x="13.5" y="38.5" width="45" height="13.5" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M29,11.5h14c1.1,0,2,.9,2,2v7h-18v-7c0-1.1.9-2,2-2Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><path d="M13.5,38.5l7.85-15.78c.68-1.36,2.06-2.22,3.58-2.22h22.14c1.52,0,2.91.86,3.58,2.22l7.85,15.78v13.5H13.5v-13.5Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="38.5" x2="58.5" y2="38.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,52h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M52.5,52h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M13.5,52h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><path d="M52.5,52h6v4.5c0,1.1-.9,2-2,2h-2c-1.1,0-2-.9-2-2v-4.5h0Z" style="fill: var(--icon-line-color, currentColor); stroke-width: 0px;"/><line x1="18" y1="45.5" x2="27" y2="45.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="45" y1="45.5" x2="54" y2="45.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="9" y1="34" x2="15.74" y2="34" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="56.26" y1="34" x2="63" y2="34" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><path d="M27,20.5v-7c0-1.1.9-2,2-2h14c1.1,0,2,.9,2,2v7" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/></svg>`;
      taxi_default = IconTaxi;
    }
  });

  // lib/train-track.ts
  var train_track_exports = {};
  __export(train_track_exports, {
    IconTrainTrack: () => IconTrainTrack,
    default: () => train_track_default
  });
  var IconTrainTrack, train_track_default;
  var init_train_track = __esm({
    "lib/train-track.ts"() {
      IconTrainTrack = `<svg id="TrainTrack" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><line x1="22.5" y1="6.75" x2="22.5" y2="65.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="49.5" y1="6.75" x2="49.5" y2="65.25" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="13.5" y1="15.75" x2="58.5" y2="15.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="13.5" y1="29.25" x2="58.5" y2="29.25" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="13.5" y1="42.75" x2="58.5" y2="42.75" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/><line x1="13.5" y1="56.25" x2="58.5" y2="56.25" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-l,  calc(var(--icon-stroke-width, 5) * 1.5));"/></svg>`;
      train_track_default = IconTrainTrack;
    }
  });

  // lib/train.ts
  var train_exports = {};
  __export(train_exports, {
    IconTrain: () => IconTrain,
    default: () => train_default
  });
  var IconTrain, train_default;
  var init_train = __esm({
    "lib/train.ts"() {
      IconTrain = `<svg id="Train" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path d="M45,45h-18l-7.88-27.57c-.71,1.19-1.12,2.58-1.12,4.07v24.5c0,4.42,3.58,8,8,8h20c4.42,0,8-3.58,8-8v-24.5c0-1.49-.41-2.88-1.12-4.07l-7.88,27.57Z" style="fill: var(--icon-fill, rgba(0, 0, 0, 0)); opacity: var(--icon-fill-opacity, 1); stroke-width: 0px;"/><line x1="13.78" y1="67.5" x2="27.28" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="58.78" y1="67.5" x2="45.28" y2="54" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="18.28" y1="63" x2="54.28" y2="63" style="fill: none; stroke: var(--icon-stroke-color-secondary, var(--icon-stroke-color, currentColor)); stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><rect x="18" y="13.5" width="36" height="40.5" rx="8" ry="8" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><polyline points="19.11 17.39 27 45 45 45 52.89 17.39" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-m, calc(var(--icon-stroke-width, 5) * 1));"/><line x1="22.5" y1="4.5" x2="49.5" y2="4.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-s, calc(var(--icon-stroke-width, 5) * 0.5));"/><line x1="27" y1="4.5" x2="31.5" y2="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-s, calc(var(--icon-stroke-width, 5) * 0.5));"/><line x1="45" y1="4.5" x2="40.5" y2="13.5" style="fill: none;  stroke-miterlimit: 10; stroke-width:var(--icon-stroke-width-s, calc(var(--icon-stroke-width, 5) * 0.5));"/></svg>`;
      train_default = IconTrain;
    }
  });

  // lib/types.ts
  var Icons = {
    ICON24: "icon24",
    ARROW_CORNER_DOWN: "arrow-corner-down",
    ARROW_CORNER_LEFT: "arrow-corner-left",
    ARROW_CORNER_RIGHT: "arrow-corner-right",
    ARROW_CORNER_UP: "arrow-corner-up",
    ARROW_DIAGONAL_BL_TR_STOP: "arrow-diagonal-bl-tr-stop",
    ARROW_DIAGONAL_BR_TL_STOP: "arrow-diagonal-br-tl-stop",
    ARROW_DIAGONAL_IN_LT_BR: "arrow-diagonal-in-lt-br",
    ARROW_DIAGONAL_IN_TR_BL: "arrow-diagonal-in-tr-bl",
    ARROW_DIAGONAL_TL_BR_SPLIT: "arrow-diagonal-tl-br-split",
    ARROW_DIAGONAL_TL_BR_STOP: "arrow-diagonal-tl-br-stop",
    ARROW_DIAGONAL_TL_BR: "arrow-diagonal-tl-br",
    ARROW_DIAGONAL_TR_BL_SPLIT: "arrow-diagonal-tr-bl-split",
    ARROW_DIAGONAL_TR_BL_STOP: "arrow-diagonal-tr-bl-stop",
    ARROW_DIAGONAL_TR_BL: "arrow-diagonal-tr-bl",
    ARROW_DOWN_COPY: "arrow-down-copy",
    ARROW_DOWN_LEFT: "arrow-down-left",
    ARROW_DOWN_RIGHT: "arrow-down-right",
    ARROW_DOWN: "arrow-down",
    ARROW_DOWNLOAD: "arrow-download",
    ARROW_HEADED_CORNER_DOWN: "arrow-headed-corner-down",
    ARROW_HEADED_CORNER_LEFT: "arrow-headed-corner-left",
    ARROW_HEADED_CORNER_RIGHT: "arrow-headed-corner-right",
    ARROW_HEADED_CORNER_UP: "arrow-headed-corner-up",
    ARROW_HEADED_DIAGONAL_BL_TR_STOP: "arrow-headed-diagonal-bl-tr-stop",
    ARROW_HEADED_DIAGONAL_BR_TL_STOP: "arrow-headed-diagonal-br-tl-stop",
    ARROW_HEADED_DIAGONAL_IN_LT_BR: "arrow-headed-diagonal-in-lt-br",
    ARROW_HEADED_DIAGONAL_IN_TR_BL: "arrow-headed-diagonal-in-tr-bl",
    ARROW_HEADED_DIAGONAL_TL_BR_SPLIT: "arrow-headed-diagonal-tl-br-split",
    ARROW_HEADED_DIAGONAL_TL_BR_STOP: "arrow-headed-diagonal-tl-br-stop",
    ARROW_HEADED_DIAGONAL_TL_BR: "arrow-headed-diagonal-tl-br",
    ARROW_HEADED_DIAGONAL_TR_BL_SPLIT: "arrow-headed-diagonal-tr-bl-split",
    ARROW_HEADED_DIAGONAL_TR_BL_STOP: "arrow-headed-diagonal-tr-bl-stop",
    ARROW_HEADED_DIAGONAL_TR_BL: "arrow-headed-diagonal-tr-bl",
    ARROW_HEADED_DOWN_LEFT: "arrow-headed-down-left",
    ARROW_HEADED_DOWN_RIGHT: "arrow-headed-down-right",
    ARROW_HEADED_DOWN_STOP: "arrow-headed-down-stop",
    ARROW_HEADED_DOWN: "arrow-headed-down",
    ARROW_HEADED_DOWNLOAD: "arrow-headed-download",
    ARROW_HEADED_IN_CENTER: "arrow-headed-in-center",
    ARROW_HEADED_IN_DIAGONAL: "arrow-headed-in-diagonal",
    ARROW_HEADED_IN: "arrow-headed-in",
    ARROW_HEADED_LEFT_RIGHT_SPLIT: "arrow-headed-left-right-split",
    ARROW_HEADED_LEFT_RIGHT_STOP: "arrow-headed-left-right-stop",
    ARROW_HEADED_LEFT_RIGHT: "arrow-headed-left-right",
    ARROW_HEADED_LEFT_STOP: "arrow-headed-left-stop",
    ARROW_HEADED_LEFT: "arrow-headed-left",
    ARROW_HEADED_OUT_CENTER: "arrow-headed-out-center",
    ARROW_HEADED_RELOAD_DOWN_UP: "arrow-headed-reload-down-up",
    ARROW_HEADED_RELOAD_LEFT_RIGHT: "arrow-headed-reload-left-right",
    ARROW_HEADED_RELOAD_RIGHT_LEFT: "arrow-headed-reload-right-left",
    ARROW_HEADED_RELOAD_UP_DOWN: "arrow-headed-reload-up-down",
    ARROW_HEADED_RETURN_DOWN: "arrow-headed-return-down",
    ARROW_HEADED_RETURN_LEFT: "arrow-headed-return-left",
    ARROW_HEADED_RETURN_RIGHT: "arrow-headed-return-right",
    ARROW_HEADED_RETURN_UP: "arrow-headed-return-up",
    ARROW_HEADED_RIGHT: "arrow-headed-right",
    ARROW_HEADED_ROTATE_BOTTOM_LEFT: "arrow-headed-rotate-bottom-left",
    ARROW_HEADED_ROTATE_BOTTOM_RIGHT: "arrow-headed-rotate-bottom-right",
    ARROW_HEADED_ROTATE_TOP_LEFT: "arrow-headed-rotate-top-left",
    ARROW_HEADED_ROTATE_TOP_RIGHT: "arrow-headed-rotate-top-right",
    ARROW_HEADED_ROUNDED_LEFT_UP: "arrow-headed-rounded-left-up",
    ARROW_HEADED_ROUNDED_RIGHT_DOWN: "arrow-headed-rounded-right-down",
    ARROW_HEADED_ROUNDED_RIGHT_UP: "arrow-headed-rounded-right-up",
    ARROW_HEADED_ROUNED_LEFT_DOWN: "arrow-headed-rouned-left-down",
    ARROW_HEADED_SHARE: "arrow-headed-share",
    ARROW_HEADED_SPREAD_SPLIT: "arrow-headed-spread-split",
    ARROW_HEADED_SPREAD: "arrow-headed-spread",
    ARROW_HEADED_TWOWAY_DIAGONAL_LR: "arrow-headed-twoway-diagonal-lr",
    ARROW_HEADED_TWOWAY_DIAGONAL_RL: "arrow-headed-twoway-diagonal-rl",
    ARROW_HEADED_TWOWAY_HORIZONTAL: "arrow-headed-twoway-horizontal",
    ARROW_HEADED_TWOWAY_VERTICAL: "arrow-headed-twoway-vertical",
    ARROW_HEADED_UP_DOWN_SPLIT: "arrow-headed-up-down-split",
    ARROW_HEADED_UP_DOWN_STOP: "arrow-headed-up-down-stop",
    ARROW_HEADED_UP_DOWN: "arrow-headed-up-down",
    ARROW_HEADED_UP_LEFT: "arrow-headed-up-left",
    ARROW_HEADED_UP_RIGHT: "arrow-headed-up-right",
    ARROW_HEADED_UP_STOP76: "arrow-headed-up-stop76",
    ARROW_HEADED_UP_STOP78: "arrow-headed-up-stop78",
    ARROW_HEADED_UP: "arrow-headed-up",
    ARROW_HEADED_UPLOAD: "arrow-headed-upload",
    ARROW_IN_CENTER: "arrow-in-center",
    ARROW_INVERT: "arrow-invert",
    ARROW_LEFT_RIGHT_SPLIT: "arrow-left-right-split",
    ARROW_LEFT_RIGHT_STOP: "arrow-left-right-stop",
    ARROW_LEFT_RIGHT: "arrow-left-right",
    ARROW_LEFT_STOP: "arrow-left-stop",
    ARROW_LEFT: "arrow-left",
    ARROW_OUT_CENTER: "arrow-out-center",
    ARROW_RELOAD_DOWN_UP: "arrow-reload-down-up",
    ARROW_RELOAD_LEFT_RIGHT: "arrow-reload-left-right",
    ARROW_RELOAD_RIGHT_LEFT: "arrow-reload-right-left",
    ARROW_RELOAD_UP_DOWN: "arrow-reload-up-down",
    ARROW_RETURN_DOWN: "arrow-return-down",
    ARROW_RETURN_LEFT: "arrow-return-left",
    ARROW_RETURN_RIGHT: "arrow-return-right",
    ARROW_RETURN_UP: "arrow-return-up",
    ARROW_RIGHT_STOP: "arrow-right-stop",
    ARROW_RIGHT: "arrow-right",
    ARROW_ROATE_BOTTOM_RIGHT: "arrow-roate-bottom-right",
    ARROW_ROTATE_BOTTOM_LEFT: "arrow-rotate-bottom-left",
    ARROW_ROTATE_TOP_LEFT: "arrow-rotate-top-left",
    ARROW_ROTATE_TOP_RIGHT: "arrow-rotate-top-right",
    ARROW_ROUNDED_LEFT_DOWN: "arrow-rounded-left-down",
    ARROW_ROUNDED_LEFT_UP: "arrow-rounded-left-up",
    ARROW_ROUNDED_RIGHT_DOWN: "arrow-rounded-right-down",
    ARROW_ROUNDED_RIGHT_UP: "arrow-rounded-right-up",
    ARROW_SHARE: "arrow-share",
    ARROW_SPREAD_SPLIT: "arrow-spread-split",
    ARROW_SPREAD: "arrow-spread",
    ARROW_TRANSFER_BL_TR: "arrow-transfer-bl-tr",
    ARROW_TRANSFER_LEFT_RIGHT: "arrow-transfer-left-right",
    ARROW_TRANSFER_LT_BR: "arrow-transfer-lt-br",
    ARROW_TRANSFER_UP_DOWN: "arrow-transfer-up-down",
    ARROW_TWOWAY_DIAGONAL_LR: "arrow-twoway-diagonal-lr",
    ARROW_TWOWAY_DIAGONAL_RL: "arrow-twoway-diagonal-rl",
    ARROW_TWOWAY_HORIZONTAL: "arrow-twoway-horizontal",
    ARROW_TWOWAY_VERTICAL: "arrow-twoway-vertical",
    ARROW_UP_COPY: "arrow-up-copy",
    ARROW_UP_DOWN_SPLIT: "arrow-up-down-split",
    ARROW_UP_DOWN_STOP: "arrow-up-down-stop",
    ARROW_UP_DOWN: "arrow-up-down",
    ARROW_UP_LEFT: "arrow-up-left",
    ARROW_UP_RIGHT: "arrow-up-right",
    ARROW_UP: "arrow-up",
    ARROW_UPLOAD: "arrow-upload",
    CHEVRON_CONNECT2: "chevron-connect2",
    CHEVRON_CONNECT: "chevron-connect",
    CHEVRON_DISCONNECT2: "chevron-disconnect2",
    CHEVRON_DISCONNECT: "chevron-disconnect",
    CHEVRON_DOUBLE_DOWN: "chevron-double-down",
    CHEVRON_DOUBLE_LEFT: "chevron-double-left",
    CHEVRON_DOUBLE_RIGHT: "chevron-double-right",
    CHEVRON_DOUBLE_UP: "chevron-double-up",
    CHEVRON_DOWN: "chevron-down",
    CHEVRON_LEFT: "chevron-left",
    CHEVRON_RIGHT: "chevron-right",
    CHEVRON_UP: "chevron-up",
    ICON01: "icon01",
    BOTTLE: "bottle",
    BOTTLES: "bottles",
    BREAD_SLICE: "bread-slice",
    COFFEE_CUP: "coffee-cup",
    COFFEE_MACHINE: "coffee-machine",
    COGNAC_GLASS: "cognac-glass",
    ESPRESS_MACHINE2: "espress-machine2",
    ESPRESSO_MACHINE_E61: "espresso-machine-e61",
    ESPRESSO_MACHINE: "espresso-machine",
    ESPRESSO_PISTOL: "espresso-pistol",
    HAMBURGER: "hamburger",
    PERCULATOR: "perculator",
    WINE_GLASS: "wine-glass",
    ALARM_BELL2: "alarm-bell2",
    ALARM_BELL3: "alarm-bell3",
    ALARM_BELL: "alarm-bell",
    ART_SUPPLIES: "art-supplies",
    AUDIO_WAVES: "audio-waves",
    CAMERA: "camera",
    CLIPBOARD: "clipboard",
    COLOR_PALLETTE: "color-pallette",
    COLOR_RGB: "color-rgb",
    COLOR_SWATCHES: "color-swatches",
    DESKTOP: "desktop",
    FILMROLL: "filmroll",
    GAMEPAD_CLASSIC: "gamepad-classic",
    GAMEPAD: "gamepad",
    HIGHLIGHT: "highlight",
    IMAGE: "image",
    LAPTOP: "laptop",
    MAIL_OPEN: "mail-open",
    MAIL: "mail",
    MEDIA: "media",
    MICROPHONE: "microphone",
    MUSIC_NOTE_SINGLE: "music-note-single",
    MUSIC_NOTE: "music-note",
    PACMAN: "pacman",
    PAPERPLANE: "paperplane",
    PLAYBACK_BACKWARD: "playback-backward",
    PLAYBACK_END: "playback-end",
    PLAYBACK_FORWARD: "playback-forward",
    PLAYBACK_NEXT: "playback-next",
    PLAYBACK_PAUSE: "playback-pause",
    PLAYBACK_PLAY: "playback-play",
    PLAYBACK_PREVIOUS: "playback-previous",
    PLAYBACK_START: "playback-start",
    PLAYBACK_STOP: "playback-stop",
    PRINTER: "printer",
    RECORD: "record",
    REELS: "reels",
    TABLET_LANDSCAPE: "tablet-landscape",
    TABLET: "tablet",
    TELEVISION: "television",
    TERMINAL: "terminal",
    VIDEO_CAMERA: "video-camera",
    VIDEOS: "videos",
    VOLUME_I: "volume-i",
    VOLUME_II: "volume-ii",
    VOLUME_III: "volume-iii",
    VOLUME_MUTE: "volume-mute",
    VOLUME_OFF: "volume-off",
    WEBSITE: "website",
    ICON43: "icon43",
    BAHT_SYMBOL: "baht-symbol",
    DICE1: "dice1",
    DICE2: "dice2",
    DICE3: "dice3",
    DICE4: "dice4",
    DICE5: "dice5",
    DICE6: "dice6",
    DICE7: "dice7",
    DICE8: "dice8",
    DICE9: "dice9",
    DIGIT_DIGITAL1: "digit-digital1",
    DIGIT_DIGITAL2: "digit-digital2",
    DIGIT_DIGITAL3: "digit-digital3",
    DIGIT_DIGITAL4: "digit-digital4",
    DIGIT_DIGITAL5: "digit-digital5",
    DIGIT_DIGITAL6: "digit-digital6",
    DIGIT_DIGITAL7: "digit-digital7",
    DIGIT_DIGITAL8: "digit-digital8",
    DIGIT_DIGITAL9: "digit-digital9",
    DIGIT_DIGTAL0: "digit-digtal0",
    DOLLAR: "dollar",
    EURO: "euro",
    PERCENTAGE: "percentage",
    POUND_SYMBOL: "pound-symbol",
    PROMILLE: "promille",
    RUBLES_SYMBOL: "rubles-symbol",
    RUPEE_SYMBOL_COPY: "rupee-symbol-copy",
    RUPEE_SYMBOL: "rupee-symbol",
    SYMBOL_FEMALE: "symbol-female",
    SYMBOL_MALE: "symbol-male",
    SYMBOL_UNISEX: "symbol-unisex",
    THREE_DOTS_DIAGONAL_MAJOR: "three-dots-diagonal-major",
    THREE_DOTS_DIAGONAL_MINOR: "three-dots-diagonal-minor",
    THREE_DOTS_HORIZONTAL: "three-dots-horizontal",
    THREE_DOTS_LINES: "three-dots-lines",
    THREE_DOTS_VERTICAL: "three-dots-vertical",
    TWO_DOTS_DIAGONAL_MAJOR: "two-dots-diagonal-major",
    TWO_DOTS_DIAGONAL_MINOR: "two-dots-diagonal-minor",
    TWO_DOTS_HORIZONTAL: "two-dots-horizontal",
    TWO_DOTS_LINES: "two-dots-lines",
    TWO_DOTS_VERTICAL: "two-dots-vertical",
    YEN: "yen",
    AI_FACE: "ai-face",
    AI_LETTERS_BLOCKED: "ai-letters-blocked",
    AI_LETTERS_CIRCLED: "ai-letters-circled",
    AI_LETTERS: "ai-letters",
    ANIMAL_STEP: "animal-step",
    ARTWORK_FRAME: "artwork-frame",
    BARBECUE: "barbecue",
    BATHROOM_ESSENTIALS: "bathroom-essentials",
    BINOCULARS: "binoculars",
    BLENDER: "blender",
    BOOKCASE: "bookcase",
    BULB: "bulb",
    CHIP: "chip",
    CLEANING_BUCKET: "cleaning-bucket",
    CLEANING_SPRAY: "cleaning-spray",
    CLOSET: "closet",
    COFFEE_BEANS: "coffee-beans",
    COINS: "coins",
    COMPASS2: "compass2",
    COMPASS: "compass",
    CUBE3D: "cube3d",
    EDUCATION: "education",
    FACTORY_ARM: "factory-arm",
    FACTORY_BELT: "factory-belt",
    FACTORY: "factory",
    FINGERPRINT: "fingerprint",
    FRIDGE: "fridge",
    FURNITURE_BED: "furniture-bed",
    FURNITURE_BEDSIDE_TABLE: "furniture-bedside-table",
    FURNITURE_CHAIR: "furniture-chair",
    FURNITURE_COUCH: "furniture-couch",
    FURNITURE_DESK: "furniture-desk",
    FURNITURE_DRESSOIR: "furniture-dressoir",
    GRAPH_UP_ROUND: "graph-up-round",
    GRAPH_UP: "graph-up",
    HAIRDRYER: "hairdryer",
    IDEA_FACTORY: "idea-factory",
    INDUSTRY3: "industry3",
    IRON: "iron",
    KITCHEN_CUTLERY: "kitchen-cutlery",
    KITCHEN_UTENSILS: "kitchen-utensils",
    LEAF2: "leaf2",
    LEAF3: "leaf3",
    LEAF: "leaf",
    LEAFS: "leafs",
    LIQUID_SOAP2: "liquid-soap2",
    LIQUID_SOAP: "liquid-soap",
    MICROWAVE: "microwave",
    MONEY: "money",
    MONEYBAG: "moneybag",
    OVEN: "oven",
    PLANT: "plant",
    POLITICIAN2: "politician2",
    POLITICIAN: "politician",
    ROOM_SHADE: "room-shade",
    STOVE: "stove",
    TEMPLE2: "temple2",
    TEMPLE: "temple",
    TREE2: "tree2",
    TREE3: "tree3",
    TREE: "tree",
    TREES2: "trees2",
    TREES: "trees",
    TURTLE: "turtle",
    VOTE: "vote",
    WALLET: "wallet",
    WASHING_MACHINE: "washing-machine",
    WATERCOOKER: "watercooker",
    ACCESSIBILITY_PERSON_CIRCLED: "accessibility-person-circled",
    ACCESSIBILITY_PERSON: "accessibility-person",
    ADD_FAT: "add-fat",
    ADD_L: "add-l",
    ADD_LINES: "add-lines",
    ADD_M: "add-m",
    ADD_S: "add-s",
    AT_SIGN: "at-sign",
    BLOCK_PARTIALS: "block-partials",
    BOARD_ADD2: "board-add2",
    BOARD_MULTI2_HORIZONTAL: "board-multi2-horizontal",
    BOARD_MULTI2_VERTICAL: "board-multi2-vertical",
    BOARD_MULTI_DASHBOARD: "board-multi-dashboard",
    BOARD_MULTI_T_DOWN: "board-multi-t-down",
    BOARD_MULTI_T_LEFT: "board-multi-t-left",
    BOARD_MULTI_T_RIGHT: "board-multi-t-right",
    BOARD_MULTI_T_UP: "board-multi-t-up",
    BOARD_MULTI: "board-multi",
    BOARD_MULTIPLY2: "board-multiply2",
    BOARD_SPLIT13_HORIZONTAL: "board-split13-horizontal",
    BOARD_SPLIT13_VERTICAL: "board-split13-vertical",
    BOARD_SPLIT2_HORIZONTAL: "board-split2-horizontal",
    BOARD_SPLIT2_VERTICAL: "board-split2-vertical",
    BOARD_SPLIT31_HORIZONTAL: "board-split31-horizontal",
    BOARD_SPLIT31_VERTICAL: "board-split31-vertical",
    BOARD_SPLIT3_HORIZONTAL: "board-split3-horizontal",
    BOARD_SPLIT3_VERTICAL: "board-split3-vertical",
    BOARD_SPLIT4_HORIZONTAL: "board-split4-horizontal",
    BOARD_SPLIT4_VERTICAL: "board-split4-vertical",
    BOARD_SPLIT_T_DOWN: "board-split-t-down",
    BOARD_SPLIT_T_LEFT: "board-split-t-left",
    BOARD_SPLIT_T_RIGHT: "board-split-t-right",
    BOARD_SPLIT_T_UP: "board-split-t-up",
    BOARD_SUBTRACT2: "board-subtract2",
    BOARD: "board",
    BOX_IN: "box-in",
    BOX_OUT: "box-out",
    BOX: "box",
    BOY: "boy",
    BROKEN_HEART_F: "broken-heart-f",
    BROKEN_HEART_L: "broken-heart-l",
    BROKEN_HEART_M: "broken-heart-m",
    BUILDING_CHURCH: "building-church",
    BUILDING_HOUSE2: "building-house2",
    BUILDING_HOUSE: "building-house",
    BUILDING_SHOP: "building-shop",
    BUTTON_ADD: "button-add",
    BUTTON_BROKEN_HEART2: "button-broken-heart2",
    BUTTON_BROKEN_HEART: "button-broken-heart",
    BUTTON_CHECK2: "button-check2",
    BUTTON_CHECK: "button-check",
    BUTTON_EDIT2: "button-edit2",
    BUTTON_EDIT: "button-edit",
    BUTTON_EXCLAMATION_MARK2: "button-exclamation-mark2",
    BUTTON_EXCLAMATION_MARK: "button-exclamation-mark",
    BUTTON_HEART2: "button-heart2",
    BUTTON_HEART: "button-heart",
    BUTTON_INFO2: "button-info2",
    BUTTON_INFO: "button-info",
    BUTTON_INVISIBLE2: "button-invisible2",
    BUTTON_INVISIBLE: "button-invisible",
    BUTTON_MULTIPLY: "button-multiply",
    BUTTON_QUESTION_MARK2: "button-question-mark2",
    BUTTON_QUESTION_MARK: "button-question-mark",
    BUTTON_SEARCH2: "button-search2",
    BUTTON_SEARCH: "button-search",
    BUTTON_STAR2: "button-star2",
    BUTTON_STAR: "button-star",
    BUTTON_SUBTRACT: "button-subtract",
    BUTTON_VISIBLE2: "button-visible2",
    BUTTON_VISIBLE: "button-visible",
    BUTTON: "button",
    CALENDAR2: "calendar2",
    CALENDAR: "calendar",
    CHART_BARS_SQUARED: "chart-bars-squared",
    CHART_BUBBLES: "chart-bubbles",
    CHART_CANDLES: "chart-candles",
    CHART_HALF_CIRCLE: "chart-half-circle",
    CHART_LINE_SQUARED: "chart-line-squared",
    CHART_LINE: "chart-line",
    CHART_PIE: "chart-pie",
    CHECK_FAT: "check-fat",
    CHECK_L: "check-l",
    CHECK_LIST: "check-list",
    CHECK_M: "check-m",
    CHECK_S: "check-s",
    CIRCLE_INVISIBLE: "circle-invisible",
    CIRCLE_SUBTRACT: "circle-subtract",
    CIRCLED_ADD: "circled-add",
    CIRCLED_BROKEN_HEART: "circled-broken-heart",
    CIRCLED_CHECK: "circled-check",
    CIRCLED_EDIT: "circled-edit",
    CIRCLED_EXCLAMATION_MARK: "circled-exclamation-mark",
    CIRCLED_HEART: "circled-heart",
    CIRCLED_INFO: "circled-info",
    CIRCLED_MULTIPLY: "circled-multiply",
    CIRCLED_QUESTION_MARK: "circled-question-mark",
    CIRCLED_SEARCH: "circled-search",
    CIRCLED_STAR: "circled-star",
    CIRCLED_VISIBLE: "circled-visible",
    CIRCLED: "circled",
    CLOCK: "clock",
    CLOUD_LIGHTNING: "cloud-lightning",
    CLOUD_RAIN_COPY2: "cloud-rain-copy2",
    CLOUD_SMALL_RAIN: "cloud-small-rain",
    CLOUD_SUN: "cloud-sun",
    CLOUD_THERMOMETER: "cloud-thermometer",
    CLOUD: "cloud",
    CODE_BRACKETS_CIRCLED: "code-brackets-circled",
    CODE_BRACKETS: "code-brackets",
    CODE_CHEVRONS_CIRCLED: "code-chevrons-circled",
    CODE_CHEVRONS_OPEN_CIRCLED: "code-chevrons-open-circled",
    CODE_CHEVRONS_OPEN: "code-chevrons-open",
    CODE_CHEVRONS: "code-chevrons",
    COMPANY: "company",
    DISLIKE: "dislike",
    EDIT_FAT: "edit-fat",
    EDIT_L: "edit-l",
    EDIT_LINE_SWIRL: "edit-line-swirl",
    EDIT_LINE: "edit-line",
    EDIT_M: "edit-m",
    EDIT_S: "edit-s",
    EXCLAMATION_MARK_FAT: "exclamation-mark-fat",
    EXCLAMATION_MARK_L: "exclamation-mark-l",
    EXCLAMATION_MARK_M: "exclamation-mark-m",
    EXCLAMATION_MARK_S: "exclamation-mark-s",
    FEMALE_SIMPLIFIED: "female-simplified",
    FILE_ADD267: "file-add267",
    FILE_ADD269: "file-add269",
    FILE_ADD: "file-add",
    FILE_ARCHIVE: "file-archive",
    FILE_ARROW_UP: "file-arrow-up",
    FILE_BINARY: "file-binary",
    FILE_BROKEN_HEART2: "file-broken-heart2",
    FILE_BROKEN_HEART: "file-broken-heart",
    FILE_CHECK2: "file-check2",
    FILE_CHECK: "file-check",
    FILE_CLOUD: "file-cloud",
    FILE_CODE: "file-code",
    FILE_COLUMNS: "file-columns",
    FILE_EDIT2: "file-edit2",
    FILE_EDIT: "file-edit",
    FILE_EXCLAMATION_MARK2: "file-exclamation-mark2",
    FILE_EXCLAMATION_MARK: "file-exclamation-mark",
    FILE_GRAPHS: "file-graphs",
    FILE_HEART2: "file-heart2",
    FILE_HEART: "file-heart",
    FILE_INFO2: "file-info2",
    FILE_INFO: "file-info",
    FILE_INVISIBLE2: "file-invisible2",
    FILE_INVISIBLE: "file-invisible",
    FILE_MULTIPLY: "file-multiply",
    FILE_QUESTION_MARK2: "file-question-mark2",
    FILE_QUESTION_MARK: "file-question-mark",
    FILE_SEARCH2: "file-search2",
    FILE_SEARCH: "file-search",
    FILE_STAR2: "file-star2",
    FILE_STAR: "file-star",
    FILE_SUBTRACT2: "file-subtract2",
    FILE_SUBTRACT: "file-subtract",
    FILE_TEXT: "file-text",
    FILE_TRAY_STACK: "file-tray-stack",
    FILE_TRAY: "file-tray",
    FILE_VISIBLE2: "file-visible2",
    FILE_VISIBLE: "file-visible",
    FILE: "file",
    FOLDER_ADD2: "folder-add2",
    FOLDER_ADD: "folder-add",
    FOLDER_BROKEN_HEART2: "folder-broken-heart2",
    FOLDER_BROKEN_HEART: "folder-broken-heart",
    FOLDER_CHECK2: "folder-check2",
    FOLDER_CHECK: "folder-check",
    FOLDER_EDIT2: "folder-edit2",
    FOLDER_EDIT: "folder-edit",
    FOLDER_EXCLAMATION_MARK2: "folder-exclamation-mark2",
    FOLDER_EXCLAMATION_MARK: "folder-exclamation-mark",
    FOLDER_HEART2: "folder-heart2",
    FOLDER_HEART: "folder-heart",
    FOLDER_INFO2: "folder-info2",
    FOLDER_INFO: "folder-info",
    FOLDER_INVISIBLE2: "folder-invisible2",
    FOLDER_INVISIBLE: "folder-invisible",
    FOLDER_MULTIPLY2: "folder-multiply2",
    FOLDER_MULTIPLY: "folder-multiply",
    FOLDER_QUESTION_MARK2: "folder-question-mark2",
    FOLDER_QUESTION_MARK: "folder-question-mark",
    FOLDER_SEARCH2: "folder-search2",
    FOLDER_SEARCH: "folder-search",
    FOLDER_STAR2: "folder-star2",
    FOLDER_STAR: "folder-star",
    FOLDER_SUBTRACT2: "folder-subtract2",
    FOLDER_SUBTRACT: "folder-subtract",
    FOLDER_VISIBLE2: "folder-visible2",
    FOLDER_VISIBLE: "folder-visible",
    FOLDER: "folder",
    GIRL: "girl",
    GIT_BRANCH: "git-branch",
    GIT_COMPARE: "git-compare",
    GIT_MERGE_QUEUE: "git-merge-queue",
    GIT_MERGE: "git-merge",
    GIT_PULL_REQUEST_CLOSED: "git-pull-request-closed",
    GIT_PULL_REQUEST_DRAFT: "git-pull-request-draft",
    GIT_PULL_REQUEST: "git-pull-request",
    GIT_REPO_FORK: "git-repo-fork",
    HEART_BROKEN_SMALL: "heart-broken-small",
    HEART_FAT: "heart-fat",
    HEART_L: "heart-l",
    HEART_M: "heart-m",
    HEART_SMALL: "heart-small",
    INFO_FAT: "info-fat",
    INFO_L: "info-l",
    INFO_M: "info-m",
    INFO_S: "info-s",
    INVISIBLE_FAT: "invisible-fat",
    INVISIBLE_L: "invisible-l",
    INVISIBLE_M: "invisible-m",
    INVISIBLE_S: "invisible-s",
    KEY_BACKSPACE: "key-backspace",
    KEY_DELETE: "key-delete",
    KEY_DOWN: "key-down",
    KEY_EJECT: "key-eject",
    KEY_ENTER: "key-enter",
    KEY_FUNCTION: "key-function",
    KEY_MAC_COMMAND: "key-mac-command",
    KEY_OPTION: "key-option",
    KEY_PAGE_DOWN: "key-page-down",
    KEY_PAGE_NEXT: "key-page-next",
    KEY_PAGE_UP: "key-page-up",
    KEY_PREVIOUS_UP: "key-previous-up",
    KEY_SHIFT: "key-shift",
    KEY_TAB: "key-tab",
    KEY_UP: "key-up",
    LIGHTNING_FLASH: "lightning-flash",
    LIKE: "like",
    LINK: "link",
    LOADER_DOTS2: "loader-dots2",
    LOADER_DOTS: "loader-dots",
    LOCATION_MARKER: "location-marker",
    LOCATION_PIN: "location-pin",
    MALE_SIMPLIFIED: "male-simplified",
    MOON: "moon",
    MOVING_BLOCK: "moving-block",
    MULTIPLY_FAT: "multiply-fat",
    MULTIPLY_L: "multiply-l",
    MULTIPLY_M: "multiply-m",
    MULTIPLY_S: "multiply-s",
    NOTE_ADD2: "note-add2",
    NOTE_ADD: "note-add",
    NOTE_BROKEN_HEART2: "note-broken-heart2",
    NOTE_BROKEN_HEART: "note-broken-heart",
    NOTE_CHECK2: "note-check2",
    NOTE_CHECK: "note-check",
    NOTE_EDIT2: "note-edit2",
    NOTE_EDIT: "note-edit",
    NOTE_EXCLAMATION_MARK2: "note-exclamation-mark2",
    NOTE_EXCLAMATION_MARK: "note-exclamation-mark",
    NOTE_HEART2: "note-heart2",
    NOTE_HEART: "note-heart",
    NOTE_INFO2: "note-info2",
    NOTE_INFO: "note-info",
    NOTE_INVISIBLE2: "note-invisible2",
    NOTE_INVISIBLE: "note-invisible",
    NOTE_MULTIPLY2: "note-multiply2",
    NOTE_MULTIPLY: "note-multiply",
    NOTE_QUESTION_MARK2: "note-question-mark2",
    NOTE_QUESTION_MARK: "note-question-mark",
    NOTE_SEARCH2: "note-search2",
    NOTE_SEARCH: "note-search",
    NOTE_STAR2: "note-star2",
    NOTE_STAR: "note-star",
    NOTE_SUBTRACT2: "note-subtract2",
    NOTE_SUBTRACT: "note-subtract",
    NOTE_VISIBLE2: "note-visible2",
    NOTE_VISIBLE: "note-visible",
    NOTE: "note",
    ON_TARGET: "on-target",
    PARAGRAPH: "paragraph",
    PERFORMANCE2: "performance2",
    PERFORMANCE: "performance",
    PIN_TILTED: "pin-tilted",
    PIN: "pin",
    PLANNER: "planner",
    POINTER_ARROW_LINE: "pointer-arrow-line",
    POINTER_ARROW: "pointer-arrow",
    POINTER_CROSS: "pointer-cross",
    POINTER_HAND: "pointer-hand",
    POINTER_LEFT: "pointer-left",
    POINTER_MOUSE: "pointer-mouse",
    POINTER_PEN: "pointer-pen",
    POINTER_TARGET: "pointer-target",
    POINTER_TEXT: "pointer-text",
    QUESTION_MARK_FAT: "question-mark-fat",
    QUESTION_MARK_L: "question-mark-l",
    QUESTION_MARK_M: "question-mark-m",
    QUESTION_MARK_S: "question-mark-s",
    REMOVE_LINES: "remove-lines",
    SEARCH_FAT: "search-fat",
    SEARCH_L: "search-l",
    SEARCH_M: "search-m",
    SEARCH_SMALL: "search-small",
    SECTION: "section",
    SETTINGS2: "settings2",
    SETTINGS3: "settings3",
    SETTINGS4: "settings4",
    SETTINGS5: "settings5",
    SETTINGS: "settings",
    SIMPLE_SUN: "simple-sun",
    SPEECH_BALLOON2: "speech-balloon2",
    SPEECH_BALLOON_SQUARE2: "speech-balloon-square2",
    SPEECH_BALLOON_SQUARE_COPY: "speech-balloon-square-copy",
    SPEECH_BALLOON_SQUARE: "speech-balloon-square",
    SPEECH_BALLOON: "speech-balloon",
    SPEECH_BALLOONS: "speech-balloons",
    SQUARED_ADD: "squared-add",
    SQUARED_BROKEN_HEART: "squared-broken-heart",
    SQUARED_CHECK: "squared-check",
    SQUARED_EDIT: "squared-edit",
    SQUARED_EXCLAMATION_MARK: "squared-exclamation-mark",
    SQUARED_HEART: "squared-heart",
    SQUARED_INFO: "squared-info",
    SQUARED_INVISIBLE: "squared-invisible",
    SQUARED_MULTIPLY: "squared-multiply",
    SQUARED_QUESTION_MARK: "squared-question-mark",
    SQUARED_SEARCH: "squared-search",
    SQUARED_STAR: "squared-star",
    SQUARED_SUBTRACT: "squared-subtract",
    SQUARED_VISIBLE: "squared-visible",
    SQUARED: "squared",
    STAMP: "stamp",
    STAR_FAT: "star-fat",
    STAR_L: "star-l",
    STAR_M: "star-m",
    STAR_SMALL: "star-small",
    STICKER: "sticker",
    STOPWATCH: "stopwatch",
    SUBTRACT_FAT: "subtract-fat",
    SUBTRACT_L: "subtract-l",
    SUBTRACT_M: "subtract-m",
    SUBTRACT_S: "subtract-s",
    SUN2: "sun2",
    SUN: "sun",
    TABLES: "tables",
    TALK_ADD: "talk-add",
    TALK_CHECK: "talk-check",
    TALK_DELETE: "talk-delete",
    TALK_EDIT: "talk-edit",
    TALK_EXCLAMATION_MARK: "talk-exclamation-mark",
    TALK_HEART_BROKEN: "talk-heart-broken",
    TALK_HEART: "talk-heart",
    TALK_INFO: "talk-info",
    TALK_INVISIBLE: "talk-invisible",
    TALK_QUESTION_MARK: "talk-question-mark",
    TALK_SEARCH: "talk-search",
    TALK_STAR: "talk-star",
    TALK_SUBTRACT: "talk-subtract",
    TALK_VISIBLE: "talk-visible",
    TALK: "talk",
    TARGET: "target",
    TEXT_ALIGN_CENTER: "text-align-center",
    TEXT_ALIGN_JUSTIFY_CENTERED: "text-align-justify-centered",
    TEXT_ALIGN_JUSTIFY_LEFT: "text-align-justify-left",
    TEXT_ALIGN_JUSTIFY_RIGHT: "text-align-justify-right",
    TEXT_ALIGN_JUSTIFY: "text-align-justify",
    TEXT_ALIGN_LEFT: "text-align-left",
    TEXT_ALIGN_RIGHT_ORDER_DESC: "text-align-right-order-desc",
    TEXT_ALIGN_RIGHT: "text-align-right",
    TEXT_BOLD: "text-bold",
    TEXT_DETAIL_LIST: "text-detail-list",
    TEXT_INDENT: "text-indent",
    TEXT_ITALIC: "text-italic",
    TEXT_LINE_THROUGH: "text-line-through",
    TEXT_ORDER_ASC123: "text-order-asc123",
    TEXT_ORDER_ASC127: "text-order-asc127",
    TEXT_ORDER_DESC_COPY2: "text-order-desc-copy2",
    TEXT_ORDER_DESC_COPY3: "text-order-desc-copy3",
    TEXT_ORDER_DESC_COPY: "text-order-desc-copy",
    TEXT_ORDER_DESC: "text-order-desc",
    TEXT_OUTDENT: "text-outdent",
    TEXT_UNDERLINE: "text-underline",
    THERMOMETER_COLD: "thermometer-cold",
    THERMOMETER_HOT: "thermometer-hot",
    THERMOMETER: "thermometer",
    TIMER: "timer",
    TRASH2: "trash2",
    TRASH: "trash",
    TRIANGLED_EXCLAMATION_MARK: "triangled-exclamation-mark",
    TRIANGLED_INFO: "triangled-info",
    TRIANGLED_QUESTION_MARK: "triangled-question-mark",
    TRIANGLED: "triangled",
    USER_ADD: "user-add",
    USER_DELETE: "user-delete",
    USER_GROUP: "user-group",
    USER: "user",
    USERS: "users",
    VISIBLE_FAT: "visible-fat",
    VISIBLE_L: "visible-l",
    VISIBLE_M: "visible-m",
    VISIBLE_S: "visible-s",
    WHEELCHAIR_ACTION: "wheelchair-action",
    WHEELCHAIR: "wheelchair",
    AIRPLANE_ARRIVALS: "airplane-arrivals",
    AIRPLANE_DEPARTURES: "airplane-departures",
    AIRPLANE: "airplane",
    AIRPORT_CONNECT_FLIGHTS: "airport-connect-flights",
    AIRPORT_TRANSFER2: "airport-transfer2",
    AIRPORT_TRANSFER: "airport-transfer",
    ANCHOR: "anchor",
    BICYCLE_SURFBOARD: "bicycle-surfboard",
    BICYCLE: "bicycle",
    BRIEFCASE_CROSS: "briefcase-cross",
    CAR: "car",
    CROSS_CIRCLED: "cross-circled",
    CROSS: "cross",
    CRUISESHIP: "cruiseship",
    ELEVATOR1: "elevator1",
    ELEVATOR2: "elevator2",
    ELEVATOR3: "elevator3",
    ELEVATOR4: "elevator4",
    ESCALATOR_DOWN: "escalator-down",
    ESCALATOR_UP: "escalator-up",
    ESCALATOR: "escalator",
    FERRY: "ferry",
    FIRE_EXTINGUISHER: "fire-extinguisher",
    FIRE_HOSE: "fire-hose",
    FIRE: "fire",
    GRAVESTONE2: "gravestone2",
    GRAVESTONE3: "gravestone3",
    GRAVESTONE: "gravestone",
    LUGGAGE_BELT: "luggage-belt",
    LUGGAGE_LOCKER: "luggage-locker",
    LUGGAGE_TROLLEY: "luggage-trolley",
    LUGGAGE: "luggage",
    METRO2: "metro2",
    METRO: "metro",
    NO_SMOKING_CIRCLED: "no-smoking-circled",
    NO_SMOKING: "no-smoking",
    PALMTREE_ISLAND_WAVE: "palmtree-island-wave",
    PALMTREE_ISLAND: "palmtree-island",
    PALMTREE: "palmtree",
    PARASOL_ISLAND_WAVE: "parasol-island-wave",
    PARASOL_ISLAND: "parasol-island",
    PARASOL: "parasol",
    PLASTER: "plaster",
    PLASTERS: "plasters",
    RENTAL_CAR: "rental-car",
    SECURITY_CAMERA2: "security-camera2",
    SECURITY_CAMERA3: "security-camera3",
    SECURITY_CAMERA: "security-camera",
    SHIP: "ship",
    SIGNPOST2: "signpost2",
    SIGNPOST: "signpost",
    SMOKING: "smoking",
    STAIRS_DOWN: "stairs-down",
    STAIRS_UP: "stairs-up",
    STAIRS: "stairs",
    TAXI: "taxi",
    TRAIN_TRACK: "train-track",
    TRAIN: "train"
  };
  var Aliasses = {
    ADD: Icons.ADD_M,
    PLUS: Icons.ADD_M,
    MINUS: Icons.SUBTRACT_M,
    MIN: Icons.SUBTRACT_M,
    SUBTRACT: Icons.SUBTRACT_M,
    MULTIPLY: Icons.MULTIPLY_M,
    TIMES: Icons.MULTIPLY_M,
    X: Icons.MULTIPLY_M,
    CLOSE: Icons.MULTIPLY_M,
    VISIBLE: Icons.VISIBLE_M,
    EYE: Icons.VISIBLE_M,
    SHOW: Icons.VISIBLE_M,
    INVISIBLE: Icons.INVISIBLE_M,
    EYE_SLASH: Icons.INVISIBLE_M,
    HIDE: Icons.INVISIBLE_M,
    HEART: Icons.HEART_M,
    LOVE: Icons.HEART_M
  };

  // lib/index.ts
  var getIcon = async (icon) => {
    switch (icon) {
      case Icons.ICON24:
        return (await Promise.resolve().then(() => (init_icon24(), icon24_exports))).IconIcon24;
      case Icons.ARROW_CORNER_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_corner_down(), arrow_corner_down_exports))).IconArrowCornerDown;
      case Icons.ARROW_CORNER_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_corner_left(), arrow_corner_left_exports))).IconArrowCornerLeft;
      case Icons.ARROW_CORNER_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_corner_right(), arrow_corner_right_exports))).IconArrowCornerRight;
      case Icons.ARROW_CORNER_UP:
        return (await Promise.resolve().then(() => (init_arrow_corner_up(), arrow_corner_up_exports))).IconArrowCornerUp;
      case Icons.ARROW_DIAGONAL_BL_TR_STOP:
        return (await Promise.resolve().then(() => (init_arrow_diagonal_bl_tr_stop(), arrow_diagonal_bl_tr_stop_exports))).IconArrowDiagonalBlTrStop;
      case Icons.ARROW_DIAGONAL_BR_TL_STOP:
        return (await Promise.resolve().then(() => (init_arrow_diagonal_br_tl_stop(), arrow_diagonal_br_tl_stop_exports))).IconArrowDiagonalBrTlStop;
      case Icons.ARROW_DIAGONAL_IN_LT_BR:
        return (await Promise.resolve().then(() => (init_arrow_diagonal_in_lt_br(), arrow_diagonal_in_lt_br_exports))).IconArrowDiagonalInLtBr;
      case Icons.ARROW_DIAGONAL_IN_TR_BL:
        return (await Promise.resolve().then(() => (init_arrow_diagonal_in_tr_bl(), arrow_diagonal_in_tr_bl_exports))).IconArrowDiagonalInTrBl;
      case Icons.ARROW_DIAGONAL_TL_BR_SPLIT:
        return (await Promise.resolve().then(() => (init_arrow_diagonal_tl_br_split(), arrow_diagonal_tl_br_split_exports))).IconArrowDiagonalTlBrSplit;
      case Icons.ARROW_DIAGONAL_TL_BR_STOP:
        return (await Promise.resolve().then(() => (init_arrow_diagonal_tl_br_stop(), arrow_diagonal_tl_br_stop_exports))).IconArrowDiagonalTlBrStop;
      case Icons.ARROW_DIAGONAL_TL_BR:
        return (await Promise.resolve().then(() => (init_arrow_diagonal_tl_br(), arrow_diagonal_tl_br_exports))).IconArrowDiagonalTlBr;
      case Icons.ARROW_DIAGONAL_TR_BL_SPLIT:
        return (await Promise.resolve().then(() => (init_arrow_diagonal_tr_bl_split(), arrow_diagonal_tr_bl_split_exports))).IconArrowDiagonalTrBlSplit;
      case Icons.ARROW_DIAGONAL_TR_BL_STOP:
        return (await Promise.resolve().then(() => (init_arrow_diagonal_tr_bl_stop(), arrow_diagonal_tr_bl_stop_exports))).IconArrowDiagonalTrBlStop;
      case Icons.ARROW_DIAGONAL_TR_BL:
        return (await Promise.resolve().then(() => (init_arrow_diagonal_tr_bl(), arrow_diagonal_tr_bl_exports))).IconArrowDiagonalTrBl;
      case Icons.ARROW_DOWN_COPY:
        return (await Promise.resolve().then(() => (init_arrow_down_copy(), arrow_down_copy_exports))).IconArrowDownCopy;
      case Icons.ARROW_DOWN_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_down_left(), arrow_down_left_exports))).IconArrowDownLeft;
      case Icons.ARROW_DOWN_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_down_right(), arrow_down_right_exports))).IconArrowDownRight;
      case Icons.ARROW_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_down(), arrow_down_exports))).IconArrowDown;
      case Icons.ARROW_DOWNLOAD:
        return (await Promise.resolve().then(() => (init_arrow_download(), arrow_download_exports))).IconArrowDownload;
      case Icons.ARROW_HEADED_CORNER_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_headed_corner_down(), arrow_headed_corner_down_exports))).IconArrowHeadedCornerDown;
      case Icons.ARROW_HEADED_CORNER_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_headed_corner_left(), arrow_headed_corner_left_exports))).IconArrowHeadedCornerLeft;
      case Icons.ARROW_HEADED_CORNER_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_headed_corner_right(), arrow_headed_corner_right_exports))).IconArrowHeadedCornerRight;
      case Icons.ARROW_HEADED_CORNER_UP:
        return (await Promise.resolve().then(() => (init_arrow_headed_corner_up(), arrow_headed_corner_up_exports))).IconArrowHeadedCornerUp;
      case Icons.ARROW_HEADED_DIAGONAL_BL_TR_STOP:
        return (await Promise.resolve().then(() => (init_arrow_headed_diagonal_bl_tr_stop(), arrow_headed_diagonal_bl_tr_stop_exports))).IconArrowHeadedDiagonalBlTrStop;
      case Icons.ARROW_HEADED_DIAGONAL_BR_TL_STOP:
        return (await Promise.resolve().then(() => (init_arrow_headed_diagonal_br_tl_stop(), arrow_headed_diagonal_br_tl_stop_exports))).IconArrowHeadedDiagonalBrTlStop;
      case Icons.ARROW_HEADED_DIAGONAL_IN_LT_BR:
        return (await Promise.resolve().then(() => (init_arrow_headed_diagonal_in_lt_br(), arrow_headed_diagonal_in_lt_br_exports))).IconArrowHeadedDiagonalInLtBr;
      case Icons.ARROW_HEADED_DIAGONAL_IN_TR_BL:
        return (await Promise.resolve().then(() => (init_arrow_headed_diagonal_in_tr_bl(), arrow_headed_diagonal_in_tr_bl_exports))).IconArrowHeadedDiagonalInTrBl;
      case Icons.ARROW_HEADED_DIAGONAL_TL_BR_SPLIT:
        return (await Promise.resolve().then(() => (init_arrow_headed_diagonal_tl_br_split(), arrow_headed_diagonal_tl_br_split_exports))).IconArrowHeadedDiagonalTlBrSplit;
      case Icons.ARROW_HEADED_DIAGONAL_TL_BR_STOP:
        return (await Promise.resolve().then(() => (init_arrow_headed_diagonal_tl_br_stop(), arrow_headed_diagonal_tl_br_stop_exports))).IconArrowHeadedDiagonalTlBrStop;
      case Icons.ARROW_HEADED_DIAGONAL_TL_BR:
        return (await Promise.resolve().then(() => (init_arrow_headed_diagonal_tl_br(), arrow_headed_diagonal_tl_br_exports))).IconArrowHeadedDiagonalTlBr;
      case Icons.ARROW_HEADED_DIAGONAL_TR_BL_SPLIT:
        return (await Promise.resolve().then(() => (init_arrow_headed_diagonal_tr_bl_split(), arrow_headed_diagonal_tr_bl_split_exports))).IconArrowHeadedDiagonalTrBlSplit;
      case Icons.ARROW_HEADED_DIAGONAL_TR_BL_STOP:
        return (await Promise.resolve().then(() => (init_arrow_headed_diagonal_tr_bl_stop(), arrow_headed_diagonal_tr_bl_stop_exports))).IconArrowHeadedDiagonalTrBlStop;
      case Icons.ARROW_HEADED_DIAGONAL_TR_BL:
        return (await Promise.resolve().then(() => (init_arrow_headed_diagonal_tr_bl(), arrow_headed_diagonal_tr_bl_exports))).IconArrowHeadedDiagonalTrBl;
      case Icons.ARROW_HEADED_DOWN_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_headed_down_left(), arrow_headed_down_left_exports))).IconArrowHeadedDownLeft;
      case Icons.ARROW_HEADED_DOWN_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_headed_down_right(), arrow_headed_down_right_exports))).IconArrowHeadedDownRight;
      case Icons.ARROW_HEADED_DOWN_STOP:
        return (await Promise.resolve().then(() => (init_arrow_headed_down_stop(), arrow_headed_down_stop_exports))).IconArrowHeadedDownStop;
      case Icons.ARROW_HEADED_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_headed_down(), arrow_headed_down_exports))).IconArrowHeadedDown;
      case Icons.ARROW_HEADED_DOWNLOAD:
        return (await Promise.resolve().then(() => (init_arrow_headed_download(), arrow_headed_download_exports))).IconArrowHeadedDownload;
      case Icons.ARROW_HEADED_IN_CENTER:
        return (await Promise.resolve().then(() => (init_arrow_headed_in_center(), arrow_headed_in_center_exports))).IconArrowHeadedInCenter;
      case Icons.ARROW_HEADED_IN_DIAGONAL:
        return (await Promise.resolve().then(() => (init_arrow_headed_in_diagonal(), arrow_headed_in_diagonal_exports))).IconArrowHeadedInDiagonal;
      case Icons.ARROW_HEADED_IN:
        return (await Promise.resolve().then(() => (init_arrow_headed_in(), arrow_headed_in_exports))).IconArrowHeadedIn;
      case Icons.ARROW_HEADED_LEFT_RIGHT_SPLIT:
        return (await Promise.resolve().then(() => (init_arrow_headed_left_right_split(), arrow_headed_left_right_split_exports))).IconArrowHeadedLeftRightSplit;
      case Icons.ARROW_HEADED_LEFT_RIGHT_STOP:
        return (await Promise.resolve().then(() => (init_arrow_headed_left_right_stop(), arrow_headed_left_right_stop_exports))).IconArrowHeadedLeftRightStop;
      case Icons.ARROW_HEADED_LEFT_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_headed_left_right(), arrow_headed_left_right_exports))).IconArrowHeadedLeftRight;
      case Icons.ARROW_HEADED_LEFT_STOP:
        return (await Promise.resolve().then(() => (init_arrow_headed_left_stop(), arrow_headed_left_stop_exports))).IconArrowHeadedLeftStop;
      case Icons.ARROW_HEADED_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_headed_left(), arrow_headed_left_exports))).IconArrowHeadedLeft;
      case Icons.ARROW_HEADED_OUT_CENTER:
        return (await Promise.resolve().then(() => (init_arrow_headed_out_center(), arrow_headed_out_center_exports))).IconArrowHeadedOutCenter;
      case Icons.ARROW_HEADED_RELOAD_DOWN_UP:
        return (await Promise.resolve().then(() => (init_arrow_headed_reload_down_up(), arrow_headed_reload_down_up_exports))).IconArrowHeadedReloadDownUp;
      case Icons.ARROW_HEADED_RELOAD_LEFT_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_headed_reload_left_right(), arrow_headed_reload_left_right_exports))).IconArrowHeadedReloadLeftRight;
      case Icons.ARROW_HEADED_RELOAD_RIGHT_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_headed_reload_right_left(), arrow_headed_reload_right_left_exports))).IconArrowHeadedReloadRightLeft;
      case Icons.ARROW_HEADED_RELOAD_UP_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_headed_reload_up_down(), arrow_headed_reload_up_down_exports))).IconArrowHeadedReloadUpDown;
      case Icons.ARROW_HEADED_RETURN_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_headed_return_down(), arrow_headed_return_down_exports))).IconArrowHeadedReturnDown;
      case Icons.ARROW_HEADED_RETURN_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_headed_return_left(), arrow_headed_return_left_exports))).IconArrowHeadedReturnLeft;
      case Icons.ARROW_HEADED_RETURN_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_headed_return_right(), arrow_headed_return_right_exports))).IconArrowHeadedReturnRight;
      case Icons.ARROW_HEADED_RETURN_UP:
        return (await Promise.resolve().then(() => (init_arrow_headed_return_up(), arrow_headed_return_up_exports))).IconArrowHeadedReturnUp;
      case Icons.ARROW_HEADED_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_headed_right(), arrow_headed_right_exports))).IconArrowHeadedRight;
      case Icons.ARROW_HEADED_ROTATE_BOTTOM_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_headed_rotate_bottom_left(), arrow_headed_rotate_bottom_left_exports))).IconArrowHeadedRotateBottomLeft;
      case Icons.ARROW_HEADED_ROTATE_BOTTOM_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_headed_rotate_bottom_right(), arrow_headed_rotate_bottom_right_exports))).IconArrowHeadedRotateBottomRight;
      case Icons.ARROW_HEADED_ROTATE_TOP_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_headed_rotate_top_left(), arrow_headed_rotate_top_left_exports))).IconArrowHeadedRotateTopLeft;
      case Icons.ARROW_HEADED_ROTATE_TOP_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_headed_rotate_top_right(), arrow_headed_rotate_top_right_exports))).IconArrowHeadedRotateTopRight;
      case Icons.ARROW_HEADED_ROUNDED_LEFT_UP:
        return (await Promise.resolve().then(() => (init_arrow_headed_rounded_left_up(), arrow_headed_rounded_left_up_exports))).IconArrowHeadedRoundedLeftUp;
      case Icons.ARROW_HEADED_ROUNDED_RIGHT_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_headed_rounded_right_down(), arrow_headed_rounded_right_down_exports))).IconArrowHeadedRoundedRightDown;
      case Icons.ARROW_HEADED_ROUNDED_RIGHT_UP:
        return (await Promise.resolve().then(() => (init_arrow_headed_rounded_right_up(), arrow_headed_rounded_right_up_exports))).IconArrowHeadedRoundedRightUp;
      case Icons.ARROW_HEADED_ROUNED_LEFT_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_headed_rouned_left_down(), arrow_headed_rouned_left_down_exports))).IconArrowHeadedRounedLeftDown;
      case Icons.ARROW_HEADED_SHARE:
        return (await Promise.resolve().then(() => (init_arrow_headed_share(), arrow_headed_share_exports))).IconArrowHeadedShare;
      case Icons.ARROW_HEADED_SPREAD_SPLIT:
        return (await Promise.resolve().then(() => (init_arrow_headed_spread_split(), arrow_headed_spread_split_exports))).IconArrowHeadedSpreadSplit;
      case Icons.ARROW_HEADED_SPREAD:
        return (await Promise.resolve().then(() => (init_arrow_headed_spread(), arrow_headed_spread_exports))).IconArrowHeadedSpread;
      case Icons.ARROW_HEADED_TWOWAY_DIAGONAL_LR:
        return (await Promise.resolve().then(() => (init_arrow_headed_twoway_diagonal_lr(), arrow_headed_twoway_diagonal_lr_exports))).IconArrowHeadedTwowayDiagonalLr;
      case Icons.ARROW_HEADED_TWOWAY_DIAGONAL_RL:
        return (await Promise.resolve().then(() => (init_arrow_headed_twoway_diagonal_rl(), arrow_headed_twoway_diagonal_rl_exports))).IconArrowHeadedTwowayDiagonalRl;
      case Icons.ARROW_HEADED_TWOWAY_HORIZONTAL:
        return (await Promise.resolve().then(() => (init_arrow_headed_twoway_horizontal(), arrow_headed_twoway_horizontal_exports))).IconArrowHeadedTwowayHorizontal;
      case Icons.ARROW_HEADED_TWOWAY_VERTICAL:
        return (await Promise.resolve().then(() => (init_arrow_headed_twoway_vertical(), arrow_headed_twoway_vertical_exports))).IconArrowHeadedTwowayVertical;
      case Icons.ARROW_HEADED_UP_DOWN_SPLIT:
        return (await Promise.resolve().then(() => (init_arrow_headed_up_down_split(), arrow_headed_up_down_split_exports))).IconArrowHeadedUpDownSplit;
      case Icons.ARROW_HEADED_UP_DOWN_STOP:
        return (await Promise.resolve().then(() => (init_arrow_headed_up_down_stop(), arrow_headed_up_down_stop_exports))).IconArrowHeadedUpDownStop;
      case Icons.ARROW_HEADED_UP_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_headed_up_down(), arrow_headed_up_down_exports))).IconArrowHeadedUpDown;
      case Icons.ARROW_HEADED_UP_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_headed_up_left(), arrow_headed_up_left_exports))).IconArrowHeadedUpLeft;
      case Icons.ARROW_HEADED_UP_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_headed_up_right(), arrow_headed_up_right_exports))).IconArrowHeadedUpRight;
      case Icons.ARROW_HEADED_UP_STOP76:
        return (await Promise.resolve().then(() => (init_arrow_headed_up_stop76(), arrow_headed_up_stop76_exports))).IconArrowHeadedUpStop76;
      case Icons.ARROW_HEADED_UP_STOP78:
        return (await Promise.resolve().then(() => (init_arrow_headed_up_stop78(), arrow_headed_up_stop78_exports))).IconArrowHeadedUpStop78;
      case Icons.ARROW_HEADED_UP:
        return (await Promise.resolve().then(() => (init_arrow_headed_up(), arrow_headed_up_exports))).IconArrowHeadedUp;
      case Icons.ARROW_HEADED_UPLOAD:
        return (await Promise.resolve().then(() => (init_arrow_headed_upload(), arrow_headed_upload_exports))).IconArrowHeadedUpload;
      case Icons.ARROW_IN_CENTER:
        return (await Promise.resolve().then(() => (init_arrow_in_center(), arrow_in_center_exports))).IconArrowInCenter;
      case Icons.ARROW_INVERT:
        return (await Promise.resolve().then(() => (init_arrow_invert(), arrow_invert_exports))).IconArrowInvert;
      case Icons.ARROW_LEFT_RIGHT_SPLIT:
        return (await Promise.resolve().then(() => (init_arrow_left_right_split(), arrow_left_right_split_exports))).IconArrowLeftRightSplit;
      case Icons.ARROW_LEFT_RIGHT_STOP:
        return (await Promise.resolve().then(() => (init_arrow_left_right_stop(), arrow_left_right_stop_exports))).IconArrowLeftRightStop;
      case Icons.ARROW_LEFT_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_left_right(), arrow_left_right_exports))).IconArrowLeftRight;
      case Icons.ARROW_LEFT_STOP:
        return (await Promise.resolve().then(() => (init_arrow_left_stop(), arrow_left_stop_exports))).IconArrowLeftStop;
      case Icons.ARROW_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_left(), arrow_left_exports))).IconArrowLeft;
      case Icons.ARROW_OUT_CENTER:
        return (await Promise.resolve().then(() => (init_arrow_out_center(), arrow_out_center_exports))).IconArrowOutCenter;
      case Icons.ARROW_RELOAD_DOWN_UP:
        return (await Promise.resolve().then(() => (init_arrow_reload_down_up(), arrow_reload_down_up_exports))).IconArrowReloadDownUp;
      case Icons.ARROW_RELOAD_LEFT_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_reload_left_right(), arrow_reload_left_right_exports))).IconArrowReloadLeftRight;
      case Icons.ARROW_RELOAD_RIGHT_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_reload_right_left(), arrow_reload_right_left_exports))).IconArrowReloadRightLeft;
      case Icons.ARROW_RELOAD_UP_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_reload_up_down(), arrow_reload_up_down_exports))).IconArrowReloadUpDown;
      case Icons.ARROW_RETURN_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_return_down(), arrow_return_down_exports))).IconArrowReturnDown;
      case Icons.ARROW_RETURN_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_return_left(), arrow_return_left_exports))).IconArrowReturnLeft;
      case Icons.ARROW_RETURN_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_return_right(), arrow_return_right_exports))).IconArrowReturnRight;
      case Icons.ARROW_RETURN_UP:
        return (await Promise.resolve().then(() => (init_arrow_return_up(), arrow_return_up_exports))).IconArrowReturnUp;
      case Icons.ARROW_RIGHT_STOP:
        return (await Promise.resolve().then(() => (init_arrow_right_stop(), arrow_right_stop_exports))).IconArrowRightStop;
      case Icons.ARROW_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_right(), arrow_right_exports))).IconArrowRight;
      case Icons.ARROW_ROATE_BOTTOM_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_roate_bottom_right(), arrow_roate_bottom_right_exports))).IconArrowRoateBottomRight;
      case Icons.ARROW_ROTATE_BOTTOM_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_rotate_bottom_left(), arrow_rotate_bottom_left_exports))).IconArrowRotateBottomLeft;
      case Icons.ARROW_ROTATE_TOP_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_rotate_top_left(), arrow_rotate_top_left_exports))).IconArrowRotateTopLeft;
      case Icons.ARROW_ROTATE_TOP_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_rotate_top_right(), arrow_rotate_top_right_exports))).IconArrowRotateTopRight;
      case Icons.ARROW_ROUNDED_LEFT_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_rounded_left_down(), arrow_rounded_left_down_exports))).IconArrowRoundedLeftDown;
      case Icons.ARROW_ROUNDED_LEFT_UP:
        return (await Promise.resolve().then(() => (init_arrow_rounded_left_up(), arrow_rounded_left_up_exports))).IconArrowRoundedLeftUp;
      case Icons.ARROW_ROUNDED_RIGHT_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_rounded_right_down(), arrow_rounded_right_down_exports))).IconArrowRoundedRightDown;
      case Icons.ARROW_ROUNDED_RIGHT_UP:
        return (await Promise.resolve().then(() => (init_arrow_rounded_right_up(), arrow_rounded_right_up_exports))).IconArrowRoundedRightUp;
      case Icons.ARROW_SHARE:
        return (await Promise.resolve().then(() => (init_arrow_share(), arrow_share_exports))).IconArrowShare;
      case Icons.ARROW_SPREAD_SPLIT:
        return (await Promise.resolve().then(() => (init_arrow_spread_split(), arrow_spread_split_exports))).IconArrowSpreadSplit;
      case Icons.ARROW_SPREAD:
        return (await Promise.resolve().then(() => (init_arrow_spread(), arrow_spread_exports))).IconArrowSpread;
      case Icons.ARROW_TRANSFER_BL_TR:
        return (await Promise.resolve().then(() => (init_arrow_transfer_bl_tr(), arrow_transfer_bl_tr_exports))).IconArrowTransferBlTr;
      case Icons.ARROW_TRANSFER_LEFT_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_transfer_left_right(), arrow_transfer_left_right_exports))).IconArrowTransferLeftRight;
      case Icons.ARROW_TRANSFER_LT_BR:
        return (await Promise.resolve().then(() => (init_arrow_transfer_lt_br(), arrow_transfer_lt_br_exports))).IconArrowTransferLtBr;
      case Icons.ARROW_TRANSFER_UP_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_transfer_up_down(), arrow_transfer_up_down_exports))).IconArrowTransferUpDown;
      case Icons.ARROW_TWOWAY_DIAGONAL_LR:
        return (await Promise.resolve().then(() => (init_arrow_twoway_diagonal_lr(), arrow_twoway_diagonal_lr_exports))).IconArrowTwowayDiagonalLr;
      case Icons.ARROW_TWOWAY_DIAGONAL_RL:
        return (await Promise.resolve().then(() => (init_arrow_twoway_diagonal_rl(), arrow_twoway_diagonal_rl_exports))).IconArrowTwowayDiagonalRl;
      case Icons.ARROW_TWOWAY_HORIZONTAL:
        return (await Promise.resolve().then(() => (init_arrow_twoway_horizontal(), arrow_twoway_horizontal_exports))).IconArrowTwowayHorizontal;
      case Icons.ARROW_TWOWAY_VERTICAL:
        return (await Promise.resolve().then(() => (init_arrow_twoway_vertical(), arrow_twoway_vertical_exports))).IconArrowTwowayVertical;
      case Icons.ARROW_UP_COPY:
        return (await Promise.resolve().then(() => (init_arrow_up_copy(), arrow_up_copy_exports))).IconArrowUpCopy;
      case Icons.ARROW_UP_DOWN_SPLIT:
        return (await Promise.resolve().then(() => (init_arrow_up_down_split(), arrow_up_down_split_exports))).IconArrowUpDownSplit;
      case Icons.ARROW_UP_DOWN_STOP:
        return (await Promise.resolve().then(() => (init_arrow_up_down_stop(), arrow_up_down_stop_exports))).IconArrowUpDownStop;
      case Icons.ARROW_UP_DOWN:
        return (await Promise.resolve().then(() => (init_arrow_up_down(), arrow_up_down_exports))).IconArrowUpDown;
      case Icons.ARROW_UP_LEFT:
        return (await Promise.resolve().then(() => (init_arrow_up_left(), arrow_up_left_exports))).IconArrowUpLeft;
      case Icons.ARROW_UP_RIGHT:
        return (await Promise.resolve().then(() => (init_arrow_up_right(), arrow_up_right_exports))).IconArrowUpRight;
      case Icons.ARROW_UP:
        return (await Promise.resolve().then(() => (init_arrow_up(), arrow_up_exports))).IconArrowUp;
      case Icons.ARROW_UPLOAD:
        return (await Promise.resolve().then(() => (init_arrow_upload(), arrow_upload_exports))).IconArrowUpload;
      case Icons.CHEVRON_CONNECT2:
        return (await Promise.resolve().then(() => (init_chevron_connect2(), chevron_connect2_exports))).IconChevronConnect2;
      case Icons.CHEVRON_CONNECT:
        return (await Promise.resolve().then(() => (init_chevron_connect(), chevron_connect_exports))).IconChevronConnect;
      case Icons.CHEVRON_DISCONNECT2:
        return (await Promise.resolve().then(() => (init_chevron_disconnect2(), chevron_disconnect2_exports))).IconChevronDisconnect2;
      case Icons.CHEVRON_DISCONNECT:
        return (await Promise.resolve().then(() => (init_chevron_disconnect(), chevron_disconnect_exports))).IconChevronDisconnect;
      case Icons.CHEVRON_DOUBLE_DOWN:
        return (await Promise.resolve().then(() => (init_chevron_double_down(), chevron_double_down_exports))).IconChevronDoubleDown;
      case Icons.CHEVRON_DOUBLE_LEFT:
        return (await Promise.resolve().then(() => (init_chevron_double_left(), chevron_double_left_exports))).IconChevronDoubleLeft;
      case Icons.CHEVRON_DOUBLE_RIGHT:
        return (await Promise.resolve().then(() => (init_chevron_double_right(), chevron_double_right_exports))).IconChevronDoubleRight;
      case Icons.CHEVRON_DOUBLE_UP:
        return (await Promise.resolve().then(() => (init_chevron_double_up(), chevron_double_up_exports))).IconChevronDoubleUp;
      case Icons.CHEVRON_DOWN:
        return (await Promise.resolve().then(() => (init_chevron_down(), chevron_down_exports))).IconChevronDown;
      case Icons.CHEVRON_LEFT:
        return (await Promise.resolve().then(() => (init_chevron_left(), chevron_left_exports))).IconChevronLeft;
      case Icons.CHEVRON_RIGHT:
        return (await Promise.resolve().then(() => (init_chevron_right(), chevron_right_exports))).IconChevronRight;
      case Icons.CHEVRON_UP:
        return (await Promise.resolve().then(() => (init_chevron_up(), chevron_up_exports))).IconChevronUp;
      case Icons.ICON01:
        return (await Promise.resolve().then(() => (init_icon01(), icon01_exports))).IconIcon01;
      case Icons.BOTTLE:
        return (await Promise.resolve().then(() => (init_bottle(), bottle_exports))).IconBottle;
      case Icons.BOTTLES:
        return (await Promise.resolve().then(() => (init_bottles(), bottles_exports))).IconBottles;
      case Icons.BREAD_SLICE:
        return (await Promise.resolve().then(() => (init_bread_slice(), bread_slice_exports))).IconBreadSlice;
      case Icons.COFFEE_CUP:
        return (await Promise.resolve().then(() => (init_coffee_cup(), coffee_cup_exports))).IconCoffeeCup;
      case Icons.COFFEE_MACHINE:
        return (await Promise.resolve().then(() => (init_coffee_machine(), coffee_machine_exports))).IconCoffeeMachine;
      case Icons.COGNAC_GLASS:
        return (await Promise.resolve().then(() => (init_cognac_glass(), cognac_glass_exports))).IconCognacGlass;
      case Icons.ESPRESS_MACHINE2:
        return (await Promise.resolve().then(() => (init_espress_machine2(), espress_machine2_exports))).IconEspressMachine2;
      case Icons.ESPRESSO_MACHINE_E61:
        return (await Promise.resolve().then(() => (init_espresso_machine_e61(), espresso_machine_e61_exports))).IconEspressoMachineE61;
      case Icons.ESPRESSO_MACHINE:
        return (await Promise.resolve().then(() => (init_espresso_machine(), espresso_machine_exports))).IconEspressoMachine;
      case Icons.ESPRESSO_PISTOL:
        return (await Promise.resolve().then(() => (init_espresso_pistol(), espresso_pistol_exports))).IconEspressoPistol;
      case Icons.HAMBURGER:
        return (await Promise.resolve().then(() => (init_hamburger(), hamburger_exports))).IconHamburger;
      case Icons.PERCULATOR:
        return (await Promise.resolve().then(() => (init_perculator(), perculator_exports))).IconPerculator;
      case Icons.WINE_GLASS:
        return (await Promise.resolve().then(() => (init_wine_glass(), wine_glass_exports))).IconWineGlass;
      case Icons.ALARM_BELL2:
        return (await Promise.resolve().then(() => (init_alarm_bell2(), alarm_bell2_exports))).IconAlarmBell2;
      case Icons.ALARM_BELL3:
        return (await Promise.resolve().then(() => (init_alarm_bell3(), alarm_bell3_exports))).IconAlarmBell3;
      case Icons.ALARM_BELL:
        return (await Promise.resolve().then(() => (init_alarm_bell(), alarm_bell_exports))).IconAlarmBell;
      case Icons.ART_SUPPLIES:
        return (await Promise.resolve().then(() => (init_art_supplies(), art_supplies_exports))).IconArtSupplies;
      case Icons.AUDIO_WAVES:
        return (await Promise.resolve().then(() => (init_audio_waves(), audio_waves_exports))).IconAudioWaves;
      case Icons.CAMERA:
        return (await Promise.resolve().then(() => (init_camera(), camera_exports))).IconCamera;
      case Icons.CLIPBOARD:
        return (await Promise.resolve().then(() => (init_clipboard(), clipboard_exports))).IconClipboard;
      case Icons.COLOR_PALLETTE:
        return (await Promise.resolve().then(() => (init_color_pallette(), color_pallette_exports))).IconColorPallette;
      case Icons.COLOR_RGB:
        return (await Promise.resolve().then(() => (init_color_rgb(), color_rgb_exports))).IconColorRgb;
      case Icons.COLOR_SWATCHES:
        return (await Promise.resolve().then(() => (init_color_swatches(), color_swatches_exports))).IconColorSwatches;
      case Icons.DESKTOP:
        return (await Promise.resolve().then(() => (init_desktop(), desktop_exports))).IconDesktop;
      case Icons.FILMROLL:
        return (await Promise.resolve().then(() => (init_filmroll(), filmroll_exports))).IconFilmroll;
      case Icons.GAMEPAD_CLASSIC:
        return (await Promise.resolve().then(() => (init_gamepad_classic(), gamepad_classic_exports))).IconGamepadClassic;
      case Icons.GAMEPAD:
        return (await Promise.resolve().then(() => (init_gamepad(), gamepad_exports))).IconGamepad;
      case Icons.HIGHLIGHT:
        return (await Promise.resolve().then(() => (init_highlight(), highlight_exports))).IconHighlight;
      case Icons.IMAGE:
        return (await Promise.resolve().then(() => (init_image(), image_exports))).IconImage;
      case Icons.LAPTOP:
        return (await Promise.resolve().then(() => (init_laptop(), laptop_exports))).IconLaptop;
      case Icons.MAIL_OPEN:
        return (await Promise.resolve().then(() => (init_mail_open(), mail_open_exports))).IconMailOpen;
      case Icons.MAIL:
        return (await Promise.resolve().then(() => (init_mail(), mail_exports))).IconMail;
      case Icons.MEDIA:
        return (await Promise.resolve().then(() => (init_media(), media_exports))).IconMedia;
      case Icons.MICROPHONE:
        return (await Promise.resolve().then(() => (init_microphone(), microphone_exports))).IconMicrophone;
      case Icons.MUSIC_NOTE_SINGLE:
        return (await Promise.resolve().then(() => (init_music_note_single(), music_note_single_exports))).IconMusicNoteSingle;
      case Icons.MUSIC_NOTE:
        return (await Promise.resolve().then(() => (init_music_note(), music_note_exports))).IconMusicNote;
      case Icons.PACMAN:
        return (await Promise.resolve().then(() => (init_pacman(), pacman_exports))).IconPacman;
      case Icons.PAPERPLANE:
        return (await Promise.resolve().then(() => (init_paperplane(), paperplane_exports))).IconPaperplane;
      case Icons.PLAYBACK_BACKWARD:
        return (await Promise.resolve().then(() => (init_playback_backward(), playback_backward_exports))).IconPlaybackBackward;
      case Icons.PLAYBACK_END:
        return (await Promise.resolve().then(() => (init_playback_end(), playback_end_exports))).IconPlaybackEnd;
      case Icons.PLAYBACK_FORWARD:
        return (await Promise.resolve().then(() => (init_playback_forward(), playback_forward_exports))).IconPlaybackForward;
      case Icons.PLAYBACK_NEXT:
        return (await Promise.resolve().then(() => (init_playback_next(), playback_next_exports))).IconPlaybackNext;
      case Icons.PLAYBACK_PAUSE:
        return (await Promise.resolve().then(() => (init_playback_pause(), playback_pause_exports))).IconPlaybackPause;
      case Icons.PLAYBACK_PLAY:
        return (await Promise.resolve().then(() => (init_playback_play(), playback_play_exports))).IconPlaybackPlay;
      case Icons.PLAYBACK_PREVIOUS:
        return (await Promise.resolve().then(() => (init_playback_previous(), playback_previous_exports))).IconPlaybackPrevious;
      case Icons.PLAYBACK_START:
        return (await Promise.resolve().then(() => (init_playback_start(), playback_start_exports))).IconPlaybackStart;
      case Icons.PLAYBACK_STOP:
        return (await Promise.resolve().then(() => (init_playback_stop(), playback_stop_exports))).IconPlaybackStop;
      case Icons.PRINTER:
        return (await Promise.resolve().then(() => (init_printer(), printer_exports))).IconPrinter;
      case Icons.RECORD:
        return (await Promise.resolve().then(() => (init_record(), record_exports))).IconRecord;
      case Icons.REELS:
        return (await Promise.resolve().then(() => (init_reels(), reels_exports))).IconReels;
      case Icons.TABLET_LANDSCAPE:
        return (await Promise.resolve().then(() => (init_tablet_landscape(), tablet_landscape_exports))).IconTabletLandscape;
      case Icons.TABLET:
        return (await Promise.resolve().then(() => (init_tablet(), tablet_exports))).IconTablet;
      case Icons.TELEVISION:
        return (await Promise.resolve().then(() => (init_television(), television_exports))).IconTelevision;
      case Icons.TERMINAL:
        return (await Promise.resolve().then(() => (init_terminal(), terminal_exports))).IconTerminal;
      case Icons.VIDEO_CAMERA:
        return (await Promise.resolve().then(() => (init_video_camera(), video_camera_exports))).IconVideoCamera;
      case Icons.VIDEOS:
        return (await Promise.resolve().then(() => (init_videos(), videos_exports))).IconVideos;
      case Icons.VOLUME_I:
        return (await Promise.resolve().then(() => (init_volume_i(), volume_i_exports))).IconVolumeI;
      case Icons.VOLUME_II:
        return (await Promise.resolve().then(() => (init_volume_ii(), volume_ii_exports))).IconVolumeIi;
      case Icons.VOLUME_III:
        return (await Promise.resolve().then(() => (init_volume_iii(), volume_iii_exports))).IconVolumeIii;
      case Icons.VOLUME_MUTE:
        return (await Promise.resolve().then(() => (init_volume_mute(), volume_mute_exports))).IconVolumeMute;
      case Icons.VOLUME_OFF:
        return (await Promise.resolve().then(() => (init_volume_off(), volume_off_exports))).IconVolumeOff;
      case Icons.WEBSITE:
        return (await Promise.resolve().then(() => (init_website(), website_exports))).IconWebsite;
      case Icons.ICON43:
        return (await Promise.resolve().then(() => (init_icon43(), icon43_exports))).IconIcon43;
      case Icons.BAHT_SYMBOL:
        return (await Promise.resolve().then(() => (init_baht_symbol(), baht_symbol_exports))).IconBahtSymbol;
      case Icons.DICE1:
        return (await Promise.resolve().then(() => (init_dice1(), dice1_exports))).IconDice1;
      case Icons.DICE2:
        return (await Promise.resolve().then(() => (init_dice2(), dice2_exports))).IconDice2;
      case Icons.DICE3:
        return (await Promise.resolve().then(() => (init_dice3(), dice3_exports))).IconDice3;
      case Icons.DICE4:
        return (await Promise.resolve().then(() => (init_dice4(), dice4_exports))).IconDice4;
      case Icons.DICE5:
        return (await Promise.resolve().then(() => (init_dice5(), dice5_exports))).IconDice5;
      case Icons.DICE6:
        return (await Promise.resolve().then(() => (init_dice6(), dice6_exports))).IconDice6;
      case Icons.DICE7:
        return (await Promise.resolve().then(() => (init_dice7(), dice7_exports))).IconDice7;
      case Icons.DICE8:
        return (await Promise.resolve().then(() => (init_dice8(), dice8_exports))).IconDice8;
      case Icons.DICE9:
        return (await Promise.resolve().then(() => (init_dice9(), dice9_exports))).IconDice9;
      case Icons.DIGIT_DIGITAL1:
        return (await Promise.resolve().then(() => (init_digit_digital1(), digit_digital1_exports))).IconDigitDigital1;
      case Icons.DIGIT_DIGITAL2:
        return (await Promise.resolve().then(() => (init_digit_digital2(), digit_digital2_exports))).IconDigitDigital2;
      case Icons.DIGIT_DIGITAL3:
        return (await Promise.resolve().then(() => (init_digit_digital3(), digit_digital3_exports))).IconDigitDigital3;
      case Icons.DIGIT_DIGITAL4:
        return (await Promise.resolve().then(() => (init_digit_digital4(), digit_digital4_exports))).IconDigitDigital4;
      case Icons.DIGIT_DIGITAL5:
        return (await Promise.resolve().then(() => (init_digit_digital5(), digit_digital5_exports))).IconDigitDigital5;
      case Icons.DIGIT_DIGITAL6:
        return (await Promise.resolve().then(() => (init_digit_digital6(), digit_digital6_exports))).IconDigitDigital6;
      case Icons.DIGIT_DIGITAL7:
        return (await Promise.resolve().then(() => (init_digit_digital7(), digit_digital7_exports))).IconDigitDigital7;
      case Icons.DIGIT_DIGITAL8:
        return (await Promise.resolve().then(() => (init_digit_digital8(), digit_digital8_exports))).IconDigitDigital8;
      case Icons.DIGIT_DIGITAL9:
        return (await Promise.resolve().then(() => (init_digit_digital9(), digit_digital9_exports))).IconDigitDigital9;
      case Icons.DIGIT_DIGTAL0:
        return (await Promise.resolve().then(() => (init_digit_digtal0(), digit_digtal0_exports))).IconDigitDigtal0;
      case Icons.DOLLAR:
        return (await Promise.resolve().then(() => (init_dollar(), dollar_exports))).IconDollar;
      case Icons.EURO:
        return (await Promise.resolve().then(() => (init_euro(), euro_exports))).IconEuro;
      case Icons.PERCENTAGE:
        return (await Promise.resolve().then(() => (init_percentage(), percentage_exports))).IconPercentage;
      case Icons.POUND_SYMBOL:
        return (await Promise.resolve().then(() => (init_pound_symbol(), pound_symbol_exports))).IconPoundSymbol;
      case Icons.PROMILLE:
        return (await Promise.resolve().then(() => (init_promille(), promille_exports))).IconPromille;
      case Icons.RUBLES_SYMBOL:
        return (await Promise.resolve().then(() => (init_rubles_symbol(), rubles_symbol_exports))).IconRublesSymbol;
      case Icons.RUPEE_SYMBOL_COPY:
        return (await Promise.resolve().then(() => (init_rupee_symbol_copy(), rupee_symbol_copy_exports))).IconRupeeSymbolCopy;
      case Icons.RUPEE_SYMBOL:
        return (await Promise.resolve().then(() => (init_rupee_symbol(), rupee_symbol_exports))).IconRupeeSymbol;
      case Icons.SYMBOL_FEMALE:
        return (await Promise.resolve().then(() => (init_symbol_female(), symbol_female_exports))).IconSymbolFemale;
      case Icons.SYMBOL_MALE:
        return (await Promise.resolve().then(() => (init_symbol_male(), symbol_male_exports))).IconSymbolMale;
      case Icons.SYMBOL_UNISEX:
        return (await Promise.resolve().then(() => (init_symbol_unisex(), symbol_unisex_exports))).IconSymbolUnisex;
      case Icons.THREE_DOTS_DIAGONAL_MAJOR:
        return (await Promise.resolve().then(() => (init_three_dots_diagonal_major(), three_dots_diagonal_major_exports))).IconThreeDotsDiagonalMajor;
      case Icons.THREE_DOTS_DIAGONAL_MINOR:
        return (await Promise.resolve().then(() => (init_three_dots_diagonal_minor(), three_dots_diagonal_minor_exports))).IconThreeDotsDiagonalMinor;
      case Icons.THREE_DOTS_HORIZONTAL:
        return (await Promise.resolve().then(() => (init_three_dots_horizontal(), three_dots_horizontal_exports))).IconThreeDotsHorizontal;
      case Icons.THREE_DOTS_LINES:
        return (await Promise.resolve().then(() => (init_three_dots_lines(), three_dots_lines_exports))).IconThreeDotsLines;
      case Icons.THREE_DOTS_VERTICAL:
        return (await Promise.resolve().then(() => (init_three_dots_vertical(), three_dots_vertical_exports))).IconThreeDotsVertical;
      case Icons.TWO_DOTS_DIAGONAL_MAJOR:
        return (await Promise.resolve().then(() => (init_two_dots_diagonal_major(), two_dots_diagonal_major_exports))).IconTwoDotsDiagonalMajor;
      case Icons.TWO_DOTS_DIAGONAL_MINOR:
        return (await Promise.resolve().then(() => (init_two_dots_diagonal_minor(), two_dots_diagonal_minor_exports))).IconTwoDotsDiagonalMinor;
      case Icons.TWO_DOTS_HORIZONTAL:
        return (await Promise.resolve().then(() => (init_two_dots_horizontal(), two_dots_horizontal_exports))).IconTwoDotsHorizontal;
      case Icons.TWO_DOTS_LINES:
        return (await Promise.resolve().then(() => (init_two_dots_lines(), two_dots_lines_exports))).IconTwoDotsLines;
      case Icons.TWO_DOTS_VERTICAL:
        return (await Promise.resolve().then(() => (init_two_dots_vertical(), two_dots_vertical_exports))).IconTwoDotsVertical;
      case Icons.YEN:
        return (await Promise.resolve().then(() => (init_yen(), yen_exports))).IconYen;
      case Icons.AI_FACE:
        return (await Promise.resolve().then(() => (init_ai_face(), ai_face_exports))).IconAiFace;
      case Icons.AI_LETTERS_BLOCKED:
        return (await Promise.resolve().then(() => (init_ai_letters_blocked(), ai_letters_blocked_exports))).IconAiLettersBlocked;
      case Icons.AI_LETTERS_CIRCLED:
        return (await Promise.resolve().then(() => (init_ai_letters_circled(), ai_letters_circled_exports))).IconAiLettersCircled;
      case Icons.AI_LETTERS:
        return (await Promise.resolve().then(() => (init_ai_letters(), ai_letters_exports))).IconAiLetters;
      case Icons.ANIMAL_STEP:
        return (await Promise.resolve().then(() => (init_animal_step(), animal_step_exports))).IconAnimalStep;
      case Icons.ARTWORK_FRAME:
        return (await Promise.resolve().then(() => (init_artwork_frame(), artwork_frame_exports))).IconArtworkFrame;
      case Icons.BARBECUE:
        return (await Promise.resolve().then(() => (init_barbecue(), barbecue_exports))).IconBarbecue;
      case Icons.BATHROOM_ESSENTIALS:
        return (await Promise.resolve().then(() => (init_bathroom_essentials(), bathroom_essentials_exports))).IconBathroomEssentials;
      case Icons.BINOCULARS:
        return (await Promise.resolve().then(() => (init_binoculars(), binoculars_exports))).IconBinoculars;
      case Icons.BLENDER:
        return (await Promise.resolve().then(() => (init_blender(), blender_exports))).IconBlender;
      case Icons.BOOKCASE:
        return (await Promise.resolve().then(() => (init_bookcase(), bookcase_exports))).IconBookcase;
      case Icons.BULB:
        return (await Promise.resolve().then(() => (init_bulb(), bulb_exports))).IconBulb;
      case Icons.CHIP:
        return (await Promise.resolve().then(() => (init_chip(), chip_exports))).IconChip;
      case Icons.CLEANING_BUCKET:
        return (await Promise.resolve().then(() => (init_cleaning_bucket(), cleaning_bucket_exports))).IconCleaningBucket;
      case Icons.CLEANING_SPRAY:
        return (await Promise.resolve().then(() => (init_cleaning_spray(), cleaning_spray_exports))).IconCleaningSpray;
      case Icons.CLOSET:
        return (await Promise.resolve().then(() => (init_closet(), closet_exports))).IconCloset;
      case Icons.COFFEE_BEANS:
        return (await Promise.resolve().then(() => (init_coffee_beans(), coffee_beans_exports))).IconCoffeeBeans;
      case Icons.COINS:
        return (await Promise.resolve().then(() => (init_coins(), coins_exports))).IconCoins;
      case Icons.COMPASS2:
        return (await Promise.resolve().then(() => (init_compass2(), compass2_exports))).IconCompass2;
      case Icons.COMPASS:
        return (await Promise.resolve().then(() => (init_compass(), compass_exports))).IconCompass;
      case Icons.CUBE3D:
        return (await Promise.resolve().then(() => (init_cube3d(), cube3d_exports))).IconCube3d;
      case Icons.EDUCATION:
        return (await Promise.resolve().then(() => (init_education(), education_exports))).IconEducation;
      case Icons.FACTORY_ARM:
        return (await Promise.resolve().then(() => (init_factory_arm(), factory_arm_exports))).IconFactoryArm;
      case Icons.FACTORY_BELT:
        return (await Promise.resolve().then(() => (init_factory_belt(), factory_belt_exports))).IconFactoryBelt;
      case Icons.FACTORY:
        return (await Promise.resolve().then(() => (init_factory(), factory_exports))).IconFactory;
      case Icons.FINGERPRINT:
        return (await Promise.resolve().then(() => (init_fingerprint(), fingerprint_exports))).IconFingerprint;
      case Icons.FRIDGE:
        return (await Promise.resolve().then(() => (init_fridge(), fridge_exports))).IconFridge;
      case Icons.FURNITURE_BED:
        return (await Promise.resolve().then(() => (init_furniture_bed(), furniture_bed_exports))).IconFurnitureBed;
      case Icons.FURNITURE_BEDSIDE_TABLE:
        return (await Promise.resolve().then(() => (init_furniture_bedside_table(), furniture_bedside_table_exports))).IconFurnitureBedsideTable;
      case Icons.FURNITURE_CHAIR:
        return (await Promise.resolve().then(() => (init_furniture_chair(), furniture_chair_exports))).IconFurnitureChair;
      case Icons.FURNITURE_COUCH:
        return (await Promise.resolve().then(() => (init_furniture_couch(), furniture_couch_exports))).IconFurnitureCouch;
      case Icons.FURNITURE_DESK:
        return (await Promise.resolve().then(() => (init_furniture_desk(), furniture_desk_exports))).IconFurnitureDesk;
      case Icons.FURNITURE_DRESSOIR:
        return (await Promise.resolve().then(() => (init_furniture_dressoir(), furniture_dressoir_exports))).IconFurnitureDressoir;
      case Icons.GRAPH_UP_ROUND:
        return (await Promise.resolve().then(() => (init_graph_up_round(), graph_up_round_exports))).IconGraphUpRound;
      case Icons.GRAPH_UP:
        return (await Promise.resolve().then(() => (init_graph_up(), graph_up_exports))).IconGraphUp;
      case Icons.HAIRDRYER:
        return (await Promise.resolve().then(() => (init_hairdryer(), hairdryer_exports))).IconHairdryer;
      case Icons.IDEA_FACTORY:
        return (await Promise.resolve().then(() => (init_idea_factory(), idea_factory_exports))).IconIdeaFactory;
      case Icons.INDUSTRY3:
        return (await Promise.resolve().then(() => (init_industry3(), industry3_exports))).IconIndustry3;
      case Icons.IRON:
        return (await Promise.resolve().then(() => (init_iron(), iron_exports))).IconIron;
      case Icons.KITCHEN_CUTLERY:
        return (await Promise.resolve().then(() => (init_kitchen_cutlery(), kitchen_cutlery_exports))).IconKitchenCutlery;
      case Icons.KITCHEN_UTENSILS:
        return (await Promise.resolve().then(() => (init_kitchen_utensils(), kitchen_utensils_exports))).IconKitchenUtensils;
      case Icons.LEAF2:
        return (await Promise.resolve().then(() => (init_leaf2(), leaf2_exports))).IconLeaf2;
      case Icons.LEAF3:
        return (await Promise.resolve().then(() => (init_leaf3(), leaf3_exports))).IconLeaf3;
      case Icons.LEAF:
        return (await Promise.resolve().then(() => (init_leaf(), leaf_exports))).IconLeaf;
      case Icons.LEAFS:
        return (await Promise.resolve().then(() => (init_leafs(), leafs_exports))).IconLeafs;
      case Icons.LIQUID_SOAP2:
        return (await Promise.resolve().then(() => (init_liquid_soap2(), liquid_soap2_exports))).IconLiquidSoap2;
      case Icons.LIQUID_SOAP:
        return (await Promise.resolve().then(() => (init_liquid_soap(), liquid_soap_exports))).IconLiquidSoap;
      case Icons.MICROWAVE:
        return (await Promise.resolve().then(() => (init_microwave(), microwave_exports))).IconMicrowave;
      case Icons.MONEY:
        return (await Promise.resolve().then(() => (init_money(), money_exports))).IconMoney;
      case Icons.MONEYBAG:
        return (await Promise.resolve().then(() => (init_moneybag(), moneybag_exports))).IconMoneybag;
      case Icons.OVEN:
        return (await Promise.resolve().then(() => (init_oven(), oven_exports))).IconOven;
      case Icons.PLANT:
        return (await Promise.resolve().then(() => (init_plant(), plant_exports))).IconPlant;
      case Icons.POLITICIAN2:
        return (await Promise.resolve().then(() => (init_politician2(), politician2_exports))).IconPolitician2;
      case Icons.POLITICIAN:
        return (await Promise.resolve().then(() => (init_politician(), politician_exports))).IconPolitician;
      case Icons.ROOM_SHADE:
        return (await Promise.resolve().then(() => (init_room_shade(), room_shade_exports))).IconRoomShade;
      case Icons.STOVE:
        return (await Promise.resolve().then(() => (init_stove(), stove_exports))).IconStove;
      case Icons.TEMPLE2:
        return (await Promise.resolve().then(() => (init_temple2(), temple2_exports))).IconTemple2;
      case Icons.TEMPLE:
        return (await Promise.resolve().then(() => (init_temple(), temple_exports))).IconTemple;
      case Icons.TREE2:
        return (await Promise.resolve().then(() => (init_tree2(), tree2_exports))).IconTree2;
      case Icons.TREE3:
        return (await Promise.resolve().then(() => (init_tree3(), tree3_exports))).IconTree3;
      case Icons.TREE:
        return (await Promise.resolve().then(() => (init_tree(), tree_exports))).IconTree;
      case Icons.TREES2:
        return (await Promise.resolve().then(() => (init_trees2(), trees2_exports))).IconTrees2;
      case Icons.TREES:
        return (await Promise.resolve().then(() => (init_trees(), trees_exports))).IconTrees;
      case Icons.TURTLE:
        return (await Promise.resolve().then(() => (init_turtle(), turtle_exports))).IconTurtle;
      case Icons.VOTE:
        return (await Promise.resolve().then(() => (init_vote(), vote_exports))).IconVote;
      case Icons.WALLET:
        return (await Promise.resolve().then(() => (init_wallet(), wallet_exports))).IconWallet;
      case Icons.WASHING_MACHINE:
        return (await Promise.resolve().then(() => (init_washing_machine(), washing_machine_exports))).IconWashingMachine;
      case Icons.WATERCOOKER:
        return (await Promise.resolve().then(() => (init_watercooker(), watercooker_exports))).IconWatercooker;
      case Icons.ACCESSIBILITY_PERSON_CIRCLED:
        return (await Promise.resolve().then(() => (init_accessibility_person_circled(), accessibility_person_circled_exports))).IconAccessibilityPersonCircled;
      case Icons.ACCESSIBILITY_PERSON:
        return (await Promise.resolve().then(() => (init_accessibility_person(), accessibility_person_exports))).IconAccessibilityPerson;
      case Icons.ADD_FAT:
        return (await Promise.resolve().then(() => (init_add_fat(), add_fat_exports))).IconAddFat;
      case Icons.ADD_L:
        return (await Promise.resolve().then(() => (init_add_l(), add_l_exports))).IconAddL;
      case Icons.ADD_LINES:
        return (await Promise.resolve().then(() => (init_add_lines(), add_lines_exports))).IconAddLines;
      case Icons.ADD_M:
        return (await Promise.resolve().then(() => (init_add_m(), add_m_exports))).IconAddM;
      case Icons.ADD_S:
        return (await Promise.resolve().then(() => (init_add_s(), add_s_exports))).IconAddS;
      case Icons.AT_SIGN:
        return (await Promise.resolve().then(() => (init_at_sign(), at_sign_exports))).IconAtSign;
      case Icons.BLOCK_PARTIALS:
        return (await Promise.resolve().then(() => (init_block_partials(), block_partials_exports))).IconBlockPartials;
      case Icons.BOARD_ADD2:
        return (await Promise.resolve().then(() => (init_board_add2(), board_add2_exports))).IconBoardAdd2;
      case Icons.BOARD_MULTI2_HORIZONTAL:
        return (await Promise.resolve().then(() => (init_board_multi2_horizontal(), board_multi2_horizontal_exports))).IconBoardMulti2Horizontal;
      case Icons.BOARD_MULTI2_VERTICAL:
        return (await Promise.resolve().then(() => (init_board_multi2_vertical(), board_multi2_vertical_exports))).IconBoardMulti2Vertical;
      case Icons.BOARD_MULTI_DASHBOARD:
        return (await Promise.resolve().then(() => (init_board_multi_dashboard(), board_multi_dashboard_exports))).IconBoardMultiDashboard;
      case Icons.BOARD_MULTI_T_DOWN:
        return (await Promise.resolve().then(() => (init_board_multi_t_down(), board_multi_t_down_exports))).IconBoardMultiTDown;
      case Icons.BOARD_MULTI_T_LEFT:
        return (await Promise.resolve().then(() => (init_board_multi_t_left(), board_multi_t_left_exports))).IconBoardMultiTLeft;
      case Icons.BOARD_MULTI_T_RIGHT:
        return (await Promise.resolve().then(() => (init_board_multi_t_right(), board_multi_t_right_exports))).IconBoardMultiTRight;
      case Icons.BOARD_MULTI_T_UP:
        return (await Promise.resolve().then(() => (init_board_multi_t_up(), board_multi_t_up_exports))).IconBoardMultiTUp;
      case Icons.BOARD_MULTI:
        return (await Promise.resolve().then(() => (init_board_multi(), board_multi_exports))).IconBoardMulti;
      case Icons.BOARD_MULTIPLY2:
        return (await Promise.resolve().then(() => (init_board_multiply2(), board_multiply2_exports))).IconBoardMultiply2;
      case Icons.BOARD_SPLIT13_HORIZONTAL:
        return (await Promise.resolve().then(() => (init_board_split13_horizontal(), board_split13_horizontal_exports))).IconBoardSplit13Horizontal;
      case Icons.BOARD_SPLIT13_VERTICAL:
        return (await Promise.resolve().then(() => (init_board_split13_vertical(), board_split13_vertical_exports))).IconBoardSplit13Vertical;
      case Icons.BOARD_SPLIT2_HORIZONTAL:
        return (await Promise.resolve().then(() => (init_board_split2_horizontal(), board_split2_horizontal_exports))).IconBoardSplit2Horizontal;
      case Icons.BOARD_SPLIT2_VERTICAL:
        return (await Promise.resolve().then(() => (init_board_split2_vertical(), board_split2_vertical_exports))).IconBoardSplit2Vertical;
      case Icons.BOARD_SPLIT31_HORIZONTAL:
        return (await Promise.resolve().then(() => (init_board_split31_horizontal(), board_split31_horizontal_exports))).IconBoardSplit31Horizontal;
      case Icons.BOARD_SPLIT31_VERTICAL:
        return (await Promise.resolve().then(() => (init_board_split31_vertical(), board_split31_vertical_exports))).IconBoardSplit31Vertical;
      case Icons.BOARD_SPLIT3_HORIZONTAL:
        return (await Promise.resolve().then(() => (init_board_split3_horizontal(), board_split3_horizontal_exports))).IconBoardSplit3Horizontal;
      case Icons.BOARD_SPLIT3_VERTICAL:
        return (await Promise.resolve().then(() => (init_board_split3_vertical(), board_split3_vertical_exports))).IconBoardSplit3Vertical;
      case Icons.BOARD_SPLIT4_HORIZONTAL:
        return (await Promise.resolve().then(() => (init_board_split4_horizontal(), board_split4_horizontal_exports))).IconBoardSplit4Horizontal;
      case Icons.BOARD_SPLIT4_VERTICAL:
        return (await Promise.resolve().then(() => (init_board_split4_vertical(), board_split4_vertical_exports))).IconBoardSplit4Vertical;
      case Icons.BOARD_SPLIT_T_DOWN:
        return (await Promise.resolve().then(() => (init_board_split_t_down(), board_split_t_down_exports))).IconBoardSplitTDown;
      case Icons.BOARD_SPLIT_T_LEFT:
        return (await Promise.resolve().then(() => (init_board_split_t_left(), board_split_t_left_exports))).IconBoardSplitTLeft;
      case Icons.BOARD_SPLIT_T_RIGHT:
        return (await Promise.resolve().then(() => (init_board_split_t_right(), board_split_t_right_exports))).IconBoardSplitTRight;
      case Icons.BOARD_SPLIT_T_UP:
        return (await Promise.resolve().then(() => (init_board_split_t_up(), board_split_t_up_exports))).IconBoardSplitTUp;
      case Icons.BOARD_SUBTRACT2:
        return (await Promise.resolve().then(() => (init_board_subtract2(), board_subtract2_exports))).IconBoardSubtract2;
      case Icons.BOARD:
        return (await Promise.resolve().then(() => (init_board(), board_exports))).IconBoard;
      case Icons.BOX_IN:
        return (await Promise.resolve().then(() => (init_box_in(), box_in_exports))).IconBoxIn;
      case Icons.BOX_OUT:
        return (await Promise.resolve().then(() => (init_box_out(), box_out_exports))).IconBoxOut;
      case Icons.BOX:
        return (await Promise.resolve().then(() => (init_box(), box_exports))).IconBox;
      case Icons.BOY:
        return (await Promise.resolve().then(() => (init_boy(), boy_exports))).IconBoy;
      case Icons.BROKEN_HEART_F:
        return (await Promise.resolve().then(() => (init_broken_heart_f(), broken_heart_f_exports))).IconBrokenHeartF;
      case Icons.BROKEN_HEART_L:
        return (await Promise.resolve().then(() => (init_broken_heart_l(), broken_heart_l_exports))).IconBrokenHeartL;
      case Icons.BROKEN_HEART_M:
        return (await Promise.resolve().then(() => (init_broken_heart_m(), broken_heart_m_exports))).IconBrokenHeartM;
      case Icons.BUILDING_CHURCH:
        return (await Promise.resolve().then(() => (init_building_church(), building_church_exports))).IconBuildingChurch;
      case Icons.BUILDING_HOUSE2:
        return (await Promise.resolve().then(() => (init_building_house2(), building_house2_exports))).IconBuildingHouse2;
      case Icons.BUILDING_HOUSE:
        return (await Promise.resolve().then(() => (init_building_house(), building_house_exports))).IconBuildingHouse;
      case Icons.BUILDING_SHOP:
        return (await Promise.resolve().then(() => (init_building_shop(), building_shop_exports))).IconBuildingShop;
      case Icons.BUTTON_ADD:
        return (await Promise.resolve().then(() => (init_button_add(), button_add_exports))).IconButtonAdd;
      case Icons.BUTTON_BROKEN_HEART2:
        return (await Promise.resolve().then(() => (init_button_broken_heart2(), button_broken_heart2_exports))).IconButtonBrokenHeart2;
      case Icons.BUTTON_BROKEN_HEART:
        return (await Promise.resolve().then(() => (init_button_broken_heart(), button_broken_heart_exports))).IconButtonBrokenHeart;
      case Icons.BUTTON_CHECK2:
        return (await Promise.resolve().then(() => (init_button_check2(), button_check2_exports))).IconButtonCheck2;
      case Icons.BUTTON_CHECK:
        return (await Promise.resolve().then(() => (init_button_check(), button_check_exports))).IconButtonCheck;
      case Icons.BUTTON_EDIT2:
        return (await Promise.resolve().then(() => (init_button_edit2(), button_edit2_exports))).IconButtonEdit2;
      case Icons.BUTTON_EDIT:
        return (await Promise.resolve().then(() => (init_button_edit(), button_edit_exports))).IconButtonEdit;
      case Icons.BUTTON_EXCLAMATION_MARK2:
        return (await Promise.resolve().then(() => (init_button_exclamation_mark2(), button_exclamation_mark2_exports))).IconButtonExclamationMark2;
      case Icons.BUTTON_EXCLAMATION_MARK:
        return (await Promise.resolve().then(() => (init_button_exclamation_mark(), button_exclamation_mark_exports))).IconButtonExclamationMark;
      case Icons.BUTTON_HEART2:
        return (await Promise.resolve().then(() => (init_button_heart2(), button_heart2_exports))).IconButtonHeart2;
      case Icons.BUTTON_HEART:
        return (await Promise.resolve().then(() => (init_button_heart(), button_heart_exports))).IconButtonHeart;
      case Icons.BUTTON_INFO2:
        return (await Promise.resolve().then(() => (init_button_info2(), button_info2_exports))).IconButtonInfo2;
      case Icons.BUTTON_INFO:
        return (await Promise.resolve().then(() => (init_button_info(), button_info_exports))).IconButtonInfo;
      case Icons.BUTTON_INVISIBLE2:
        return (await Promise.resolve().then(() => (init_button_invisible2(), button_invisible2_exports))).IconButtonInvisible2;
      case Icons.BUTTON_INVISIBLE:
        return (await Promise.resolve().then(() => (init_button_invisible(), button_invisible_exports))).IconButtonInvisible;
      case Icons.BUTTON_MULTIPLY:
        return (await Promise.resolve().then(() => (init_button_multiply(), button_multiply_exports))).IconButtonMultiply;
      case Icons.BUTTON_QUESTION_MARK2:
        return (await Promise.resolve().then(() => (init_button_question_mark2(), button_question_mark2_exports))).IconButtonQuestionMark2;
      case Icons.BUTTON_QUESTION_MARK:
        return (await Promise.resolve().then(() => (init_button_question_mark(), button_question_mark_exports))).IconButtonQuestionMark;
      case Icons.BUTTON_SEARCH2:
        return (await Promise.resolve().then(() => (init_button_search2(), button_search2_exports))).IconButtonSearch2;
      case Icons.BUTTON_SEARCH:
        return (await Promise.resolve().then(() => (init_button_search(), button_search_exports))).IconButtonSearch;
      case Icons.BUTTON_STAR2:
        return (await Promise.resolve().then(() => (init_button_star2(), button_star2_exports))).IconButtonStar2;
      case Icons.BUTTON_STAR:
        return (await Promise.resolve().then(() => (init_button_star(), button_star_exports))).IconButtonStar;
      case Icons.BUTTON_SUBTRACT:
        return (await Promise.resolve().then(() => (init_button_subtract(), button_subtract_exports))).IconButtonSubtract;
      case Icons.BUTTON_VISIBLE2:
        return (await Promise.resolve().then(() => (init_button_visible2(), button_visible2_exports))).IconButtonVisible2;
      case Icons.BUTTON_VISIBLE:
        return (await Promise.resolve().then(() => (init_button_visible(), button_visible_exports))).IconButtonVisible;
      case Icons.BUTTON:
        return (await Promise.resolve().then(() => (init_button(), button_exports))).IconButton;
      case Icons.CALENDAR2:
        return (await Promise.resolve().then(() => (init_calendar2(), calendar2_exports))).IconCalendar2;
      case Icons.CALENDAR:
        return (await Promise.resolve().then(() => (init_calendar(), calendar_exports))).IconCalendar;
      case Icons.CHART_BARS_SQUARED:
        return (await Promise.resolve().then(() => (init_chart_bars_squared(), chart_bars_squared_exports))).IconChartBarsSquared;
      case Icons.CHART_BUBBLES:
        return (await Promise.resolve().then(() => (init_chart_bubbles(), chart_bubbles_exports))).IconChartBubbles;
      case Icons.CHART_CANDLES:
        return (await Promise.resolve().then(() => (init_chart_candles(), chart_candles_exports))).IconChartCandles;
      case Icons.CHART_HALF_CIRCLE:
        return (await Promise.resolve().then(() => (init_chart_half_circle(), chart_half_circle_exports))).IconChartHalfCircle;
      case Icons.CHART_LINE_SQUARED:
        return (await Promise.resolve().then(() => (init_chart_line_squared(), chart_line_squared_exports))).IconChartLineSquared;
      case Icons.CHART_LINE:
        return (await Promise.resolve().then(() => (init_chart_line(), chart_line_exports))).IconChartLine;
      case Icons.CHART_PIE:
        return (await Promise.resolve().then(() => (init_chart_pie(), chart_pie_exports))).IconChartPie;
      case Icons.CHECK_FAT:
        return (await Promise.resolve().then(() => (init_check_fat(), check_fat_exports))).IconCheckFat;
      case Icons.CHECK_L:
        return (await Promise.resolve().then(() => (init_check_l(), check_l_exports))).IconCheckL;
      case Icons.CHECK_LIST:
        return (await Promise.resolve().then(() => (init_check_list(), check_list_exports))).IconCheckList;
      case Icons.CHECK_M:
        return (await Promise.resolve().then(() => (init_check_m(), check_m_exports))).IconCheckM;
      case Icons.CHECK_S:
        return (await Promise.resolve().then(() => (init_check_s(), check_s_exports))).IconCheckS;
      case Icons.CIRCLE_INVISIBLE:
        return (await Promise.resolve().then(() => (init_circle_invisible(), circle_invisible_exports))).IconCircleInvisible;
      case Icons.CIRCLE_SUBTRACT:
        return (await Promise.resolve().then(() => (init_circle_subtract(), circle_subtract_exports))).IconCircleSubtract;
      case Icons.CIRCLED_ADD:
        return (await Promise.resolve().then(() => (init_circled_add(), circled_add_exports))).IconCircledAdd;
      case Icons.CIRCLED_BROKEN_HEART:
        return (await Promise.resolve().then(() => (init_circled_broken_heart(), circled_broken_heart_exports))).IconCircledBrokenHeart;
      case Icons.CIRCLED_CHECK:
        return (await Promise.resolve().then(() => (init_circled_check(), circled_check_exports))).IconCircledCheck;
      case Icons.CIRCLED_EDIT:
        return (await Promise.resolve().then(() => (init_circled_edit(), circled_edit_exports))).IconCircledEdit;
      case Icons.CIRCLED_EXCLAMATION_MARK:
        return (await Promise.resolve().then(() => (init_circled_exclamation_mark(), circled_exclamation_mark_exports))).IconCircledExclamationMark;
      case Icons.CIRCLED_HEART:
        return (await Promise.resolve().then(() => (init_circled_heart(), circled_heart_exports))).IconCircledHeart;
      case Icons.CIRCLED_INFO:
        return (await Promise.resolve().then(() => (init_circled_info(), circled_info_exports))).IconCircledInfo;
      case Icons.CIRCLED_MULTIPLY:
        return (await Promise.resolve().then(() => (init_circled_multiply(), circled_multiply_exports))).IconCircledMultiply;
      case Icons.CIRCLED_QUESTION_MARK:
        return (await Promise.resolve().then(() => (init_circled_question_mark(), circled_question_mark_exports))).IconCircledQuestionMark;
      case Icons.CIRCLED_SEARCH:
        return (await Promise.resolve().then(() => (init_circled_search(), circled_search_exports))).IconCircledSearch;
      case Icons.CIRCLED_STAR:
        return (await Promise.resolve().then(() => (init_circled_star(), circled_star_exports))).IconCircledStar;
      case Icons.CIRCLED_VISIBLE:
        return (await Promise.resolve().then(() => (init_circled_visible(), circled_visible_exports))).IconCircledVisible;
      case Icons.CIRCLED:
        return (await Promise.resolve().then(() => (init_circled(), circled_exports))).IconCircled;
      case Icons.CLOCK:
        return (await Promise.resolve().then(() => (init_clock(), clock_exports))).IconClock;
      case Icons.CLOUD_LIGHTNING:
        return (await Promise.resolve().then(() => (init_cloud_lightning(), cloud_lightning_exports))).IconCloudLightning;
      case Icons.CLOUD_RAIN_COPY2:
        return (await Promise.resolve().then(() => (init_cloud_rain_copy2(), cloud_rain_copy2_exports))).IconCloudRainCopy2;
      case Icons.CLOUD_SMALL_RAIN:
        return (await Promise.resolve().then(() => (init_cloud_small_rain(), cloud_small_rain_exports))).IconCloudSmallRain;
      case Icons.CLOUD_SUN:
        return (await Promise.resolve().then(() => (init_cloud_sun(), cloud_sun_exports))).IconCloudSun;
      case Icons.CLOUD_THERMOMETER:
        return (await Promise.resolve().then(() => (init_cloud_thermometer(), cloud_thermometer_exports))).IconCloudThermometer;
      case Icons.CLOUD:
        return (await Promise.resolve().then(() => (init_cloud(), cloud_exports))).IconCloud;
      case Icons.CODE_BRACKETS_CIRCLED:
        return (await Promise.resolve().then(() => (init_code_brackets_circled(), code_brackets_circled_exports))).IconCodeBracketsCircled;
      case Icons.CODE_BRACKETS:
        return (await Promise.resolve().then(() => (init_code_brackets(), code_brackets_exports))).IconCodeBrackets;
      case Icons.CODE_CHEVRONS_CIRCLED:
        return (await Promise.resolve().then(() => (init_code_chevrons_circled(), code_chevrons_circled_exports))).IconCodeChevronsCircled;
      case Icons.CODE_CHEVRONS_OPEN_CIRCLED:
        return (await Promise.resolve().then(() => (init_code_chevrons_open_circled(), code_chevrons_open_circled_exports))).IconCodeChevronsOpenCircled;
      case Icons.CODE_CHEVRONS_OPEN:
        return (await Promise.resolve().then(() => (init_code_chevrons_open(), code_chevrons_open_exports))).IconCodeChevronsOpen;
      case Icons.CODE_CHEVRONS:
        return (await Promise.resolve().then(() => (init_code_chevrons(), code_chevrons_exports))).IconCodeChevrons;
      case Icons.COMPANY:
        return (await Promise.resolve().then(() => (init_company(), company_exports))).IconCompany;
      case Icons.DISLIKE:
        return (await Promise.resolve().then(() => (init_dislike(), dislike_exports))).IconDislike;
      case Icons.EDIT_FAT:
        return (await Promise.resolve().then(() => (init_edit_fat(), edit_fat_exports))).IconEditFat;
      case Icons.EDIT_L:
        return (await Promise.resolve().then(() => (init_edit_l(), edit_l_exports))).IconEditL;
      case Icons.EDIT_LINE_SWIRL:
        return (await Promise.resolve().then(() => (init_edit_line_swirl(), edit_line_swirl_exports))).IconEditLineSwirl;
      case Icons.EDIT_LINE:
        return (await Promise.resolve().then(() => (init_edit_line(), edit_line_exports))).IconEditLine;
      case Icons.EDIT_M:
        return (await Promise.resolve().then(() => (init_edit_m(), edit_m_exports))).IconEditM;
      case Icons.EDIT_S:
        return (await Promise.resolve().then(() => (init_edit_s(), edit_s_exports))).IconEditS;
      case Icons.EXCLAMATION_MARK_FAT:
        return (await Promise.resolve().then(() => (init_exclamation_mark_fat(), exclamation_mark_fat_exports))).IconExclamationMarkFat;
      case Icons.EXCLAMATION_MARK_L:
        return (await Promise.resolve().then(() => (init_exclamation_mark_l(), exclamation_mark_l_exports))).IconExclamationMarkL;
      case Icons.EXCLAMATION_MARK_M:
        return (await Promise.resolve().then(() => (init_exclamation_mark_m(), exclamation_mark_m_exports))).IconExclamationMarkM;
      case Icons.EXCLAMATION_MARK_S:
        return (await Promise.resolve().then(() => (init_exclamation_mark_s(), exclamation_mark_s_exports))).IconExclamationMarkS;
      case Icons.FEMALE_SIMPLIFIED:
        return (await Promise.resolve().then(() => (init_female_simplified(), female_simplified_exports))).IconFemaleSimplified;
      case Icons.FILE_ADD267:
        return (await Promise.resolve().then(() => (init_file_add267(), file_add267_exports))).IconFileAdd267;
      case Icons.FILE_ADD269:
        return (await Promise.resolve().then(() => (init_file_add269(), file_add269_exports))).IconFileAdd269;
      case Icons.FILE_ADD:
        return (await Promise.resolve().then(() => (init_file_add(), file_add_exports))).IconFileAdd;
      case Icons.FILE_ARCHIVE:
        return (await Promise.resolve().then(() => (init_file_archive(), file_archive_exports))).IconFileArchive;
      case Icons.FILE_ARROW_UP:
        return (await Promise.resolve().then(() => (init_file_arrow_up(), file_arrow_up_exports))).IconFileArrowUp;
      case Icons.FILE_BINARY:
        return (await Promise.resolve().then(() => (init_file_binary(), file_binary_exports))).IconFileBinary;
      case Icons.FILE_BROKEN_HEART2:
        return (await Promise.resolve().then(() => (init_file_broken_heart2(), file_broken_heart2_exports))).IconFileBrokenHeart2;
      case Icons.FILE_BROKEN_HEART:
        return (await Promise.resolve().then(() => (init_file_broken_heart(), file_broken_heart_exports))).IconFileBrokenHeart;
      case Icons.FILE_CHECK2:
        return (await Promise.resolve().then(() => (init_file_check2(), file_check2_exports))).IconFileCheck2;
      case Icons.FILE_CHECK:
        return (await Promise.resolve().then(() => (init_file_check(), file_check_exports))).IconFileCheck;
      case Icons.FILE_CLOUD:
        return (await Promise.resolve().then(() => (init_file_cloud(), file_cloud_exports))).IconFileCloud;
      case Icons.FILE_CODE:
        return (await Promise.resolve().then(() => (init_file_code(), file_code_exports))).IconFileCode;
      case Icons.FILE_COLUMNS:
        return (await Promise.resolve().then(() => (init_file_columns(), file_columns_exports))).IconFileColumns;
      case Icons.FILE_EDIT2:
        return (await Promise.resolve().then(() => (init_file_edit2(), file_edit2_exports))).IconFileEdit2;
      case Icons.FILE_EDIT:
        return (await Promise.resolve().then(() => (init_file_edit(), file_edit_exports))).IconFileEdit;
      case Icons.FILE_EXCLAMATION_MARK2:
        return (await Promise.resolve().then(() => (init_file_exclamation_mark2(), file_exclamation_mark2_exports))).IconFileExclamationMark2;
      case Icons.FILE_EXCLAMATION_MARK:
        return (await Promise.resolve().then(() => (init_file_exclamation_mark(), file_exclamation_mark_exports))).IconFileExclamationMark;
      case Icons.FILE_GRAPHS:
        return (await Promise.resolve().then(() => (init_file_graphs(), file_graphs_exports))).IconFileGraphs;
      case Icons.FILE_HEART2:
        return (await Promise.resolve().then(() => (init_file_heart2(), file_heart2_exports))).IconFileHeart2;
      case Icons.FILE_HEART:
        return (await Promise.resolve().then(() => (init_file_heart(), file_heart_exports))).IconFileHeart;
      case Icons.FILE_INFO2:
        return (await Promise.resolve().then(() => (init_file_info2(), file_info2_exports))).IconFileInfo2;
      case Icons.FILE_INFO:
        return (await Promise.resolve().then(() => (init_file_info(), file_info_exports))).IconFileInfo;
      case Icons.FILE_INVISIBLE2:
        return (await Promise.resolve().then(() => (init_file_invisible2(), file_invisible2_exports))).IconFileInvisible2;
      case Icons.FILE_INVISIBLE:
        return (await Promise.resolve().then(() => (init_file_invisible(), file_invisible_exports))).IconFileInvisible;
      case Icons.FILE_MULTIPLY:
        return (await Promise.resolve().then(() => (init_file_multiply(), file_multiply_exports))).IconFileMultiply;
      case Icons.FILE_QUESTION_MARK2:
        return (await Promise.resolve().then(() => (init_file_question_mark2(), file_question_mark2_exports))).IconFileQuestionMark2;
      case Icons.FILE_QUESTION_MARK:
        return (await Promise.resolve().then(() => (init_file_question_mark(), file_question_mark_exports))).IconFileQuestionMark;
      case Icons.FILE_SEARCH2:
        return (await Promise.resolve().then(() => (init_file_search2(), file_search2_exports))).IconFileSearch2;
      case Icons.FILE_SEARCH:
        return (await Promise.resolve().then(() => (init_file_search(), file_search_exports))).IconFileSearch;
      case Icons.FILE_STAR2:
        return (await Promise.resolve().then(() => (init_file_star2(), file_star2_exports))).IconFileStar2;
      case Icons.FILE_STAR:
        return (await Promise.resolve().then(() => (init_file_star(), file_star_exports))).IconFileStar;
      case Icons.FILE_SUBTRACT2:
        return (await Promise.resolve().then(() => (init_file_subtract2(), file_subtract2_exports))).IconFileSubtract2;
      case Icons.FILE_SUBTRACT:
        return (await Promise.resolve().then(() => (init_file_subtract(), file_subtract_exports))).IconFileSubtract;
      case Icons.FILE_TEXT:
        return (await Promise.resolve().then(() => (init_file_text(), file_text_exports))).IconFileText;
      case Icons.FILE_TRAY_STACK:
        return (await Promise.resolve().then(() => (init_file_tray_stack(), file_tray_stack_exports))).IconFileTrayStack;
      case Icons.FILE_TRAY:
        return (await Promise.resolve().then(() => (init_file_tray(), file_tray_exports))).IconFileTray;
      case Icons.FILE_VISIBLE2:
        return (await Promise.resolve().then(() => (init_file_visible2(), file_visible2_exports))).IconFileVisible2;
      case Icons.FILE_VISIBLE:
        return (await Promise.resolve().then(() => (init_file_visible(), file_visible_exports))).IconFileVisible;
      case Icons.FILE:
        return (await Promise.resolve().then(() => (init_file(), file_exports))).IconFile;
      case Icons.FOLDER_ADD2:
        return (await Promise.resolve().then(() => (init_folder_add2(), folder_add2_exports))).IconFolderAdd2;
      case Icons.FOLDER_ADD:
        return (await Promise.resolve().then(() => (init_folder_add(), folder_add_exports))).IconFolderAdd;
      case Icons.FOLDER_BROKEN_HEART2:
        return (await Promise.resolve().then(() => (init_folder_broken_heart2(), folder_broken_heart2_exports))).IconFolderBrokenHeart2;
      case Icons.FOLDER_BROKEN_HEART:
        return (await Promise.resolve().then(() => (init_folder_broken_heart(), folder_broken_heart_exports))).IconFolderBrokenHeart;
      case Icons.FOLDER_CHECK2:
        return (await Promise.resolve().then(() => (init_folder_check2(), folder_check2_exports))).IconFolderCheck2;
      case Icons.FOLDER_CHECK:
        return (await Promise.resolve().then(() => (init_folder_check(), folder_check_exports))).IconFolderCheck;
      case Icons.FOLDER_EDIT2:
        return (await Promise.resolve().then(() => (init_folder_edit2(), folder_edit2_exports))).IconFolderEdit2;
      case Icons.FOLDER_EDIT:
        return (await Promise.resolve().then(() => (init_folder_edit(), folder_edit_exports))).IconFolderEdit;
      case Icons.FOLDER_EXCLAMATION_MARK2:
        return (await Promise.resolve().then(() => (init_folder_exclamation_mark2(), folder_exclamation_mark2_exports))).IconFolderExclamationMark2;
      case Icons.FOLDER_EXCLAMATION_MARK:
        return (await Promise.resolve().then(() => (init_folder_exclamation_mark(), folder_exclamation_mark_exports))).IconFolderExclamationMark;
      case Icons.FOLDER_HEART2:
        return (await Promise.resolve().then(() => (init_folder_heart2(), folder_heart2_exports))).IconFolderHeart2;
      case Icons.FOLDER_HEART:
        return (await Promise.resolve().then(() => (init_folder_heart(), folder_heart_exports))).IconFolderHeart;
      case Icons.FOLDER_INFO2:
        return (await Promise.resolve().then(() => (init_folder_info2(), folder_info2_exports))).IconFolderInfo2;
      case Icons.FOLDER_INFO:
        return (await Promise.resolve().then(() => (init_folder_info(), folder_info_exports))).IconFolderInfo;
      case Icons.FOLDER_INVISIBLE2:
        return (await Promise.resolve().then(() => (init_folder_invisible2(), folder_invisible2_exports))).IconFolderInvisible2;
      case Icons.FOLDER_INVISIBLE:
        return (await Promise.resolve().then(() => (init_folder_invisible(), folder_invisible_exports))).IconFolderInvisible;
      case Icons.FOLDER_MULTIPLY2:
        return (await Promise.resolve().then(() => (init_folder_multiply2(), folder_multiply2_exports))).IconFolderMultiply2;
      case Icons.FOLDER_MULTIPLY:
        return (await Promise.resolve().then(() => (init_folder_multiply(), folder_multiply_exports))).IconFolderMultiply;
      case Icons.FOLDER_QUESTION_MARK2:
        return (await Promise.resolve().then(() => (init_folder_question_mark2(), folder_question_mark2_exports))).IconFolderQuestionMark2;
      case Icons.FOLDER_QUESTION_MARK:
        return (await Promise.resolve().then(() => (init_folder_question_mark(), folder_question_mark_exports))).IconFolderQuestionMark;
      case Icons.FOLDER_SEARCH2:
        return (await Promise.resolve().then(() => (init_folder_search2(), folder_search2_exports))).IconFolderSearch2;
      case Icons.FOLDER_SEARCH:
        return (await Promise.resolve().then(() => (init_folder_search(), folder_search_exports))).IconFolderSearch;
      case Icons.FOLDER_STAR2:
        return (await Promise.resolve().then(() => (init_folder_star2(), folder_star2_exports))).IconFolderStar2;
      case Icons.FOLDER_STAR:
        return (await Promise.resolve().then(() => (init_folder_star(), folder_star_exports))).IconFolderStar;
      case Icons.FOLDER_SUBTRACT2:
        return (await Promise.resolve().then(() => (init_folder_subtract2(), folder_subtract2_exports))).IconFolderSubtract2;
      case Icons.FOLDER_SUBTRACT:
        return (await Promise.resolve().then(() => (init_folder_subtract(), folder_subtract_exports))).IconFolderSubtract;
      case Icons.FOLDER_VISIBLE2:
        return (await Promise.resolve().then(() => (init_folder_visible2(), folder_visible2_exports))).IconFolderVisible2;
      case Icons.FOLDER_VISIBLE:
        return (await Promise.resolve().then(() => (init_folder_visible(), folder_visible_exports))).IconFolderVisible;
      case Icons.FOLDER:
        return (await Promise.resolve().then(() => (init_folder(), folder_exports))).IconFolder;
      case Icons.GIRL:
        return (await Promise.resolve().then(() => (init_girl(), girl_exports))).IconGirl;
      case Icons.GIT_BRANCH:
        return (await Promise.resolve().then(() => (init_git_branch(), git_branch_exports))).IconGitBranch;
      case Icons.GIT_COMPARE:
        return (await Promise.resolve().then(() => (init_git_compare(), git_compare_exports))).IconGitCompare;
      case Icons.GIT_MERGE_QUEUE:
        return (await Promise.resolve().then(() => (init_git_merge_queue(), git_merge_queue_exports))).IconGitMergeQueue;
      case Icons.GIT_MERGE:
        return (await Promise.resolve().then(() => (init_git_merge(), git_merge_exports))).IconGitMerge;
      case Icons.GIT_PULL_REQUEST_CLOSED:
        return (await Promise.resolve().then(() => (init_git_pull_request_closed(), git_pull_request_closed_exports))).IconGitPullRequestClosed;
      case Icons.GIT_PULL_REQUEST_DRAFT:
        return (await Promise.resolve().then(() => (init_git_pull_request_draft(), git_pull_request_draft_exports))).IconGitPullRequestDraft;
      case Icons.GIT_PULL_REQUEST:
        return (await Promise.resolve().then(() => (init_git_pull_request(), git_pull_request_exports))).IconGitPullRequest;
      case Icons.GIT_REPO_FORK:
        return (await Promise.resolve().then(() => (init_git_repo_fork(), git_repo_fork_exports))).IconGitRepoFork;
      case Icons.HEART_BROKEN_SMALL:
        return (await Promise.resolve().then(() => (init_heart_broken_small(), heart_broken_small_exports))).IconHeartBrokenSmall;
      case Icons.HEART_FAT:
        return (await Promise.resolve().then(() => (init_heart_fat(), heart_fat_exports))).IconHeartFat;
      case Icons.HEART_L:
        return (await Promise.resolve().then(() => (init_heart_l(), heart_l_exports))).IconHeartL;
      case Icons.HEART_M:
        return (await Promise.resolve().then(() => (init_heart_m(), heart_m_exports))).IconHeartM;
      case Icons.HEART_SMALL:
        return (await Promise.resolve().then(() => (init_heart_small(), heart_small_exports))).IconHeartSmall;
      case Icons.INFO_FAT:
        return (await Promise.resolve().then(() => (init_info_fat(), info_fat_exports))).IconInfoFat;
      case Icons.INFO_L:
        return (await Promise.resolve().then(() => (init_info_l(), info_l_exports))).IconInfoL;
      case Icons.INFO_M:
        return (await Promise.resolve().then(() => (init_info_m(), info_m_exports))).IconInfoM;
      case Icons.INFO_S:
        return (await Promise.resolve().then(() => (init_info_s(), info_s_exports))).IconInfoS;
      case Icons.INVISIBLE_FAT:
        return (await Promise.resolve().then(() => (init_invisible_fat(), invisible_fat_exports))).IconInvisibleFat;
      case Icons.INVISIBLE_L:
        return (await Promise.resolve().then(() => (init_invisible_l(), invisible_l_exports))).IconInvisibleL;
      case Icons.INVISIBLE_M:
        return (await Promise.resolve().then(() => (init_invisible_m(), invisible_m_exports))).IconInvisibleM;
      case Icons.INVISIBLE_S:
        return (await Promise.resolve().then(() => (init_invisible_s(), invisible_s_exports))).IconInvisibleS;
      case Icons.KEY_BACKSPACE:
        return (await Promise.resolve().then(() => (init_key_backspace(), key_backspace_exports))).IconKeyBackspace;
      case Icons.KEY_DELETE:
        return (await Promise.resolve().then(() => (init_key_delete(), key_delete_exports))).IconKeyDelete;
      case Icons.KEY_DOWN:
        return (await Promise.resolve().then(() => (init_key_down(), key_down_exports))).IconKeyDown;
      case Icons.KEY_EJECT:
        return (await Promise.resolve().then(() => (init_key_eject(), key_eject_exports))).IconKeyEject;
      case Icons.KEY_ENTER:
        return (await Promise.resolve().then(() => (init_key_enter(), key_enter_exports))).IconKeyEnter;
      case Icons.KEY_FUNCTION:
        return (await Promise.resolve().then(() => (init_key_function(), key_function_exports))).IconKeyFunction;
      case Icons.KEY_MAC_COMMAND:
        return (await Promise.resolve().then(() => (init_key_mac_command(), key_mac_command_exports))).IconKeyMacCommand;
      case Icons.KEY_OPTION:
        return (await Promise.resolve().then(() => (init_key_option(), key_option_exports))).IconKeyOption;
      case Icons.KEY_PAGE_DOWN:
        return (await Promise.resolve().then(() => (init_key_page_down(), key_page_down_exports))).IconKeyPageDown;
      case Icons.KEY_PAGE_NEXT:
        return (await Promise.resolve().then(() => (init_key_page_next(), key_page_next_exports))).IconKeyPageNext;
      case Icons.KEY_PAGE_UP:
        return (await Promise.resolve().then(() => (init_key_page_up(), key_page_up_exports))).IconKeyPageUp;
      case Icons.KEY_PREVIOUS_UP:
        return (await Promise.resolve().then(() => (init_key_previous_up(), key_previous_up_exports))).IconKeyPreviousUp;
      case Icons.KEY_SHIFT:
        return (await Promise.resolve().then(() => (init_key_shift(), key_shift_exports))).IconKeyShift;
      case Icons.KEY_TAB:
        return (await Promise.resolve().then(() => (init_key_tab(), key_tab_exports))).IconKeyTab;
      case Icons.KEY_UP:
        return (await Promise.resolve().then(() => (init_key_up(), key_up_exports))).IconKeyUp;
      case Icons.LIGHTNING_FLASH:
        return (await Promise.resolve().then(() => (init_lightning_flash(), lightning_flash_exports))).IconLightningFlash;
      case Icons.LIKE:
        return (await Promise.resolve().then(() => (init_like(), like_exports))).IconLike;
      case Icons.LINK:
        return (await Promise.resolve().then(() => (init_link(), link_exports))).IconLink;
      case Icons.LOADER_DOTS2:
        return (await Promise.resolve().then(() => (init_loader_dots2(), loader_dots2_exports))).IconLoaderDots2;
      case Icons.LOADER_DOTS:
        return (await Promise.resolve().then(() => (init_loader_dots(), loader_dots_exports))).IconLoaderDots;
      case Icons.LOCATION_MARKER:
        return (await Promise.resolve().then(() => (init_location_marker(), location_marker_exports))).IconLocationMarker;
      case Icons.LOCATION_PIN:
        return (await Promise.resolve().then(() => (init_location_pin(), location_pin_exports))).IconLocationPin;
      case Icons.MALE_SIMPLIFIED:
        return (await Promise.resolve().then(() => (init_male_simplified(), male_simplified_exports))).IconMaleSimplified;
      case Icons.MOON:
        return (await Promise.resolve().then(() => (init_moon(), moon_exports))).IconMoon;
      case Icons.MOVING_BLOCK:
        return (await Promise.resolve().then(() => (init_moving_block(), moving_block_exports))).IconMovingBlock;
      case Icons.MULTIPLY_FAT:
        return (await Promise.resolve().then(() => (init_multiply_fat(), multiply_fat_exports))).IconMultiplyFat;
      case Icons.MULTIPLY_L:
        return (await Promise.resolve().then(() => (init_multiply_l(), multiply_l_exports))).IconMultiplyL;
      case Icons.MULTIPLY_M:
        return (await Promise.resolve().then(() => (init_multiply_m(), multiply_m_exports))).IconMultiplyM;
      case Icons.MULTIPLY_S:
        return (await Promise.resolve().then(() => (init_multiply_s(), multiply_s_exports))).IconMultiplyS;
      case Icons.NOTE_ADD2:
        return (await Promise.resolve().then(() => (init_note_add2(), note_add2_exports))).IconNoteAdd2;
      case Icons.NOTE_ADD:
        return (await Promise.resolve().then(() => (init_note_add(), note_add_exports))).IconNoteAdd;
      case Icons.NOTE_BROKEN_HEART2:
        return (await Promise.resolve().then(() => (init_note_broken_heart2(), note_broken_heart2_exports))).IconNoteBrokenHeart2;
      case Icons.NOTE_BROKEN_HEART:
        return (await Promise.resolve().then(() => (init_note_broken_heart(), note_broken_heart_exports))).IconNoteBrokenHeart;
      case Icons.NOTE_CHECK2:
        return (await Promise.resolve().then(() => (init_note_check2(), note_check2_exports))).IconNoteCheck2;
      case Icons.NOTE_CHECK:
        return (await Promise.resolve().then(() => (init_note_check(), note_check_exports))).IconNoteCheck;
      case Icons.NOTE_EDIT2:
        return (await Promise.resolve().then(() => (init_note_edit2(), note_edit2_exports))).IconNoteEdit2;
      case Icons.NOTE_EDIT:
        return (await Promise.resolve().then(() => (init_note_edit(), note_edit_exports))).IconNoteEdit;
      case Icons.NOTE_EXCLAMATION_MARK2:
        return (await Promise.resolve().then(() => (init_note_exclamation_mark2(), note_exclamation_mark2_exports))).IconNoteExclamationMark2;
      case Icons.NOTE_EXCLAMATION_MARK:
        return (await Promise.resolve().then(() => (init_note_exclamation_mark(), note_exclamation_mark_exports))).IconNoteExclamationMark;
      case Icons.NOTE_HEART2:
        return (await Promise.resolve().then(() => (init_note_heart2(), note_heart2_exports))).IconNoteHeart2;
      case Icons.NOTE_HEART:
        return (await Promise.resolve().then(() => (init_note_heart(), note_heart_exports))).IconNoteHeart;
      case Icons.NOTE_INFO2:
        return (await Promise.resolve().then(() => (init_note_info2(), note_info2_exports))).IconNoteInfo2;
      case Icons.NOTE_INFO:
        return (await Promise.resolve().then(() => (init_note_info(), note_info_exports))).IconNoteInfo;
      case Icons.NOTE_INVISIBLE2:
        return (await Promise.resolve().then(() => (init_note_invisible2(), note_invisible2_exports))).IconNoteInvisible2;
      case Icons.NOTE_INVISIBLE:
        return (await Promise.resolve().then(() => (init_note_invisible(), note_invisible_exports))).IconNoteInvisible;
      case Icons.NOTE_MULTIPLY2:
        return (await Promise.resolve().then(() => (init_note_multiply2(), note_multiply2_exports))).IconNoteMultiply2;
      case Icons.NOTE_MULTIPLY:
        return (await Promise.resolve().then(() => (init_note_multiply(), note_multiply_exports))).IconNoteMultiply;
      case Icons.NOTE_QUESTION_MARK2:
        return (await Promise.resolve().then(() => (init_note_question_mark2(), note_question_mark2_exports))).IconNoteQuestionMark2;
      case Icons.NOTE_QUESTION_MARK:
        return (await Promise.resolve().then(() => (init_note_question_mark(), note_question_mark_exports))).IconNoteQuestionMark;
      case Icons.NOTE_SEARCH2:
        return (await Promise.resolve().then(() => (init_note_search2(), note_search2_exports))).IconNoteSearch2;
      case Icons.NOTE_SEARCH:
        return (await Promise.resolve().then(() => (init_note_search(), note_search_exports))).IconNoteSearch;
      case Icons.NOTE_STAR2:
        return (await Promise.resolve().then(() => (init_note_star2(), note_star2_exports))).IconNoteStar2;
      case Icons.NOTE_STAR:
        return (await Promise.resolve().then(() => (init_note_star(), note_star_exports))).IconNoteStar;
      case Icons.NOTE_SUBTRACT2:
        return (await Promise.resolve().then(() => (init_note_subtract2(), note_subtract2_exports))).IconNoteSubtract2;
      case Icons.NOTE_SUBTRACT:
        return (await Promise.resolve().then(() => (init_note_subtract(), note_subtract_exports))).IconNoteSubtract;
      case Icons.NOTE_VISIBLE2:
        return (await Promise.resolve().then(() => (init_note_visible2(), note_visible2_exports))).IconNoteVisible2;
      case Icons.NOTE_VISIBLE:
        return (await Promise.resolve().then(() => (init_note_visible(), note_visible_exports))).IconNoteVisible;
      case Icons.NOTE:
        return (await Promise.resolve().then(() => (init_note(), note_exports))).IconNote;
      case Icons.ON_TARGET:
        return (await Promise.resolve().then(() => (init_on_target(), on_target_exports))).IconOnTarget;
      case Icons.PARAGRAPH:
        return (await Promise.resolve().then(() => (init_paragraph(), paragraph_exports))).IconParagraph;
      case Icons.PERFORMANCE2:
        return (await Promise.resolve().then(() => (init_performance2(), performance2_exports))).IconPerformance2;
      case Icons.PERFORMANCE:
        return (await Promise.resolve().then(() => (init_performance(), performance_exports))).IconPerformance;
      case Icons.PIN_TILTED:
        return (await Promise.resolve().then(() => (init_pin_tilted(), pin_tilted_exports))).IconPinTilted;
      case Icons.PIN:
        return (await Promise.resolve().then(() => (init_pin(), pin_exports))).IconPin;
      case Icons.PLANNER:
        return (await Promise.resolve().then(() => (init_planner(), planner_exports))).IconPlanner;
      case Icons.POINTER_ARROW_LINE:
        return (await Promise.resolve().then(() => (init_pointer_arrow_line(), pointer_arrow_line_exports))).IconPointerArrowLine;
      case Icons.POINTER_ARROW:
        return (await Promise.resolve().then(() => (init_pointer_arrow(), pointer_arrow_exports))).IconPointerArrow;
      case Icons.POINTER_CROSS:
        return (await Promise.resolve().then(() => (init_pointer_cross(), pointer_cross_exports))).IconPointerCross;
      case Icons.POINTER_HAND:
        return (await Promise.resolve().then(() => (init_pointer_hand(), pointer_hand_exports))).IconPointerHand;
      case Icons.POINTER_LEFT:
        return (await Promise.resolve().then(() => (init_pointer_left(), pointer_left_exports))).IconPointerLeft;
      case Icons.POINTER_MOUSE:
        return (await Promise.resolve().then(() => (init_pointer_mouse(), pointer_mouse_exports))).IconPointerMouse;
      case Icons.POINTER_PEN:
        return (await Promise.resolve().then(() => (init_pointer_pen(), pointer_pen_exports))).IconPointerPen;
      case Icons.POINTER_TARGET:
        return (await Promise.resolve().then(() => (init_pointer_target(), pointer_target_exports))).IconPointerTarget;
      case Icons.POINTER_TEXT:
        return (await Promise.resolve().then(() => (init_pointer_text(), pointer_text_exports))).IconPointerText;
      case Icons.QUESTION_MARK_FAT:
        return (await Promise.resolve().then(() => (init_question_mark_fat(), question_mark_fat_exports))).IconQuestionMarkFat;
      case Icons.QUESTION_MARK_L:
        return (await Promise.resolve().then(() => (init_question_mark_l(), question_mark_l_exports))).IconQuestionMarkL;
      case Icons.QUESTION_MARK_M:
        return (await Promise.resolve().then(() => (init_question_mark_m(), question_mark_m_exports))).IconQuestionMarkM;
      case Icons.QUESTION_MARK_S:
        return (await Promise.resolve().then(() => (init_question_mark_s(), question_mark_s_exports))).IconQuestionMarkS;
      case Icons.REMOVE_LINES:
        return (await Promise.resolve().then(() => (init_remove_lines(), remove_lines_exports))).IconRemoveLines;
      case Icons.SEARCH_FAT:
        return (await Promise.resolve().then(() => (init_search_fat(), search_fat_exports))).IconSearchFat;
      case Icons.SEARCH_L:
        return (await Promise.resolve().then(() => (init_search_l(), search_l_exports))).IconSearchL;
      case Icons.SEARCH_M:
        return (await Promise.resolve().then(() => (init_search_m(), search_m_exports))).IconSearchM;
      case Icons.SEARCH_SMALL:
        return (await Promise.resolve().then(() => (init_search_small(), search_small_exports))).IconSearchSmall;
      case Icons.SECTION:
        return (await Promise.resolve().then(() => (init_section(), section_exports))).IconSection;
      case Icons.SETTINGS2:
        return (await Promise.resolve().then(() => (init_settings2(), settings2_exports))).IconSettings2;
      case Icons.SETTINGS3:
        return (await Promise.resolve().then(() => (init_settings3(), settings3_exports))).IconSettings3;
      case Icons.SETTINGS4:
        return (await Promise.resolve().then(() => (init_settings4(), settings4_exports))).IconSettings4;
      case Icons.SETTINGS5:
        return (await Promise.resolve().then(() => (init_settings5(), settings5_exports))).IconSettings5;
      case Icons.SETTINGS:
        return (await Promise.resolve().then(() => (init_settings(), settings_exports))).IconSettings;
      case Icons.SIMPLE_SUN:
        return (await Promise.resolve().then(() => (init_simple_sun(), simple_sun_exports))).IconSimpleSun;
      case Icons.SPEECH_BALLOON2:
        return (await Promise.resolve().then(() => (init_speech_balloon2(), speech_balloon2_exports))).IconSpeechBalloon2;
      case Icons.SPEECH_BALLOON_SQUARE2:
        return (await Promise.resolve().then(() => (init_speech_balloon_square2(), speech_balloon_square2_exports))).IconSpeechBalloonSquare2;
      case Icons.SPEECH_BALLOON_SQUARE_COPY:
        return (await Promise.resolve().then(() => (init_speech_balloon_square_copy(), speech_balloon_square_copy_exports))).IconSpeechBalloonSquareCopy;
      case Icons.SPEECH_BALLOON_SQUARE:
        return (await Promise.resolve().then(() => (init_speech_balloon_square(), speech_balloon_square_exports))).IconSpeechBalloonSquare;
      case Icons.SPEECH_BALLOON:
        return (await Promise.resolve().then(() => (init_speech_balloon(), speech_balloon_exports))).IconSpeechBalloon;
      case Icons.SPEECH_BALLOONS:
        return (await Promise.resolve().then(() => (init_speech_balloons(), speech_balloons_exports))).IconSpeechBalloons;
      case Icons.SQUARED_ADD:
        return (await Promise.resolve().then(() => (init_squared_add(), squared_add_exports))).IconSquaredAdd;
      case Icons.SQUARED_BROKEN_HEART:
        return (await Promise.resolve().then(() => (init_squared_broken_heart(), squared_broken_heart_exports))).IconSquaredBrokenHeart;
      case Icons.SQUARED_CHECK:
        return (await Promise.resolve().then(() => (init_squared_check(), squared_check_exports))).IconSquaredCheck;
      case Icons.SQUARED_EDIT:
        return (await Promise.resolve().then(() => (init_squared_edit(), squared_edit_exports))).IconSquaredEdit;
      case Icons.SQUARED_EXCLAMATION_MARK:
        return (await Promise.resolve().then(() => (init_squared_exclamation_mark(), squared_exclamation_mark_exports))).IconSquaredExclamationMark;
      case Icons.SQUARED_HEART:
        return (await Promise.resolve().then(() => (init_squared_heart(), squared_heart_exports))).IconSquaredHeart;
      case Icons.SQUARED_INFO:
        return (await Promise.resolve().then(() => (init_squared_info(), squared_info_exports))).IconSquaredInfo;
      case Icons.SQUARED_INVISIBLE:
        return (await Promise.resolve().then(() => (init_squared_invisible(), squared_invisible_exports))).IconSquaredInvisible;
      case Icons.SQUARED_MULTIPLY:
        return (await Promise.resolve().then(() => (init_squared_multiply(), squared_multiply_exports))).IconSquaredMultiply;
      case Icons.SQUARED_QUESTION_MARK:
        return (await Promise.resolve().then(() => (init_squared_question_mark(), squared_question_mark_exports))).IconSquaredQuestionMark;
      case Icons.SQUARED_SEARCH:
        return (await Promise.resolve().then(() => (init_squared_search(), squared_search_exports))).IconSquaredSearch;
      case Icons.SQUARED_STAR:
        return (await Promise.resolve().then(() => (init_squared_star(), squared_star_exports))).IconSquaredStar;
      case Icons.SQUARED_SUBTRACT:
        return (await Promise.resolve().then(() => (init_squared_subtract(), squared_subtract_exports))).IconSquaredSubtract;
      case Icons.SQUARED_VISIBLE:
        return (await Promise.resolve().then(() => (init_squared_visible(), squared_visible_exports))).IconSquaredVisible;
      case Icons.SQUARED:
        return (await Promise.resolve().then(() => (init_squared(), squared_exports))).IconSquared;
      case Icons.STAMP:
        return (await Promise.resolve().then(() => (init_stamp(), stamp_exports))).IconStamp;
      case Icons.STAR_FAT:
        return (await Promise.resolve().then(() => (init_star_fat(), star_fat_exports))).IconStarFat;
      case Icons.STAR_L:
        return (await Promise.resolve().then(() => (init_star_l(), star_l_exports))).IconStarL;
      case Icons.STAR_M:
        return (await Promise.resolve().then(() => (init_star_m(), star_m_exports))).IconStarM;
      case Icons.STAR_SMALL:
        return (await Promise.resolve().then(() => (init_star_small(), star_small_exports))).IconStarSmall;
      case Icons.STICKER:
        return (await Promise.resolve().then(() => (init_sticker(), sticker_exports))).IconSticker;
      case Icons.STOPWATCH:
        return (await Promise.resolve().then(() => (init_stopwatch(), stopwatch_exports))).IconStopwatch;
      case Icons.SUBTRACT_FAT:
        return (await Promise.resolve().then(() => (init_subtract_fat(), subtract_fat_exports))).IconSubtractFat;
      case Icons.SUBTRACT_L:
        return (await Promise.resolve().then(() => (init_subtract_l(), subtract_l_exports))).IconSubtractL;
      case Icons.SUBTRACT_M:
        return (await Promise.resolve().then(() => (init_subtract_m(), subtract_m_exports))).IconSubtractM;
      case Icons.SUBTRACT_S:
        return (await Promise.resolve().then(() => (init_subtract_s(), subtract_s_exports))).IconSubtractS;
      case Icons.SUN2:
        return (await Promise.resolve().then(() => (init_sun2(), sun2_exports))).IconSun2;
      case Icons.SUN:
        return (await Promise.resolve().then(() => (init_sun(), sun_exports))).IconSun;
      case Icons.TABLES:
        return (await Promise.resolve().then(() => (init_tables(), tables_exports))).IconTables;
      case Icons.TALK_ADD:
        return (await Promise.resolve().then(() => (init_talk_add(), talk_add_exports))).IconTalkAdd;
      case Icons.TALK_CHECK:
        return (await Promise.resolve().then(() => (init_talk_check(), talk_check_exports))).IconTalkCheck;
      case Icons.TALK_DELETE:
        return (await Promise.resolve().then(() => (init_talk_delete(), talk_delete_exports))).IconTalkDelete;
      case Icons.TALK_EDIT:
        return (await Promise.resolve().then(() => (init_talk_edit(), talk_edit_exports))).IconTalkEdit;
      case Icons.TALK_EXCLAMATION_MARK:
        return (await Promise.resolve().then(() => (init_talk_exclamation_mark(), talk_exclamation_mark_exports))).IconTalkExclamationMark;
      case Icons.TALK_HEART_BROKEN:
        return (await Promise.resolve().then(() => (init_talk_heart_broken(), talk_heart_broken_exports))).IconTalkHeartBroken;
      case Icons.TALK_HEART:
        return (await Promise.resolve().then(() => (init_talk_heart(), talk_heart_exports))).IconTalkHeart;
      case Icons.TALK_INFO:
        return (await Promise.resolve().then(() => (init_talk_info(), talk_info_exports))).IconTalkInfo;
      case Icons.TALK_INVISIBLE:
        return (await Promise.resolve().then(() => (init_talk_invisible(), talk_invisible_exports))).IconTalkInvisible;
      case Icons.TALK_QUESTION_MARK:
        return (await Promise.resolve().then(() => (init_talk_question_mark(), talk_question_mark_exports))).IconTalkQuestionMark;
      case Icons.TALK_SEARCH:
        return (await Promise.resolve().then(() => (init_talk_search(), talk_search_exports))).IconTalkSearch;
      case Icons.TALK_STAR:
        return (await Promise.resolve().then(() => (init_talk_star(), talk_star_exports))).IconTalkStar;
      case Icons.TALK_SUBTRACT:
        return (await Promise.resolve().then(() => (init_talk_subtract(), talk_subtract_exports))).IconTalkSubtract;
      case Icons.TALK_VISIBLE:
        return (await Promise.resolve().then(() => (init_talk_visible(), talk_visible_exports))).IconTalkVisible;
      case Icons.TALK:
        return (await Promise.resolve().then(() => (init_talk(), talk_exports))).IconTalk;
      case Icons.TARGET:
        return (await Promise.resolve().then(() => (init_target(), target_exports))).IconTarget;
      case Icons.TEXT_ALIGN_CENTER:
        return (await Promise.resolve().then(() => (init_text_align_center(), text_align_center_exports))).IconTextAlignCenter;
      case Icons.TEXT_ALIGN_JUSTIFY_CENTERED:
        return (await Promise.resolve().then(() => (init_text_align_justify_centered(), text_align_justify_centered_exports))).IconTextAlignJustifyCentered;
      case Icons.TEXT_ALIGN_JUSTIFY_LEFT:
        return (await Promise.resolve().then(() => (init_text_align_justify_left(), text_align_justify_left_exports))).IconTextAlignJustifyLeft;
      case Icons.TEXT_ALIGN_JUSTIFY_RIGHT:
        return (await Promise.resolve().then(() => (init_text_align_justify_right(), text_align_justify_right_exports))).IconTextAlignJustifyRight;
      case Icons.TEXT_ALIGN_JUSTIFY:
        return (await Promise.resolve().then(() => (init_text_align_justify(), text_align_justify_exports))).IconTextAlignJustify;
      case Icons.TEXT_ALIGN_LEFT:
        return (await Promise.resolve().then(() => (init_text_align_left(), text_align_left_exports))).IconTextAlignLeft;
      case Icons.TEXT_ALIGN_RIGHT_ORDER_DESC:
        return (await Promise.resolve().then(() => (init_text_align_right_order_desc(), text_align_right_order_desc_exports))).IconTextAlignRightOrderDesc;
      case Icons.TEXT_ALIGN_RIGHT:
        return (await Promise.resolve().then(() => (init_text_align_right(), text_align_right_exports))).IconTextAlignRight;
      case Icons.TEXT_BOLD:
        return (await Promise.resolve().then(() => (init_text_bold(), text_bold_exports))).IconTextBold;
      case Icons.TEXT_DETAIL_LIST:
        return (await Promise.resolve().then(() => (init_text_detail_list(), text_detail_list_exports))).IconTextDetailList;
      case Icons.TEXT_INDENT:
        return (await Promise.resolve().then(() => (init_text_indent(), text_indent_exports))).IconTextIndent;
      case Icons.TEXT_ITALIC:
        return (await Promise.resolve().then(() => (init_text_italic(), text_italic_exports))).IconTextItalic;
      case Icons.TEXT_LINE_THROUGH:
        return (await Promise.resolve().then(() => (init_text_line_through(), text_line_through_exports))).IconTextLineThrough;
      case Icons.TEXT_ORDER_ASC123:
        return (await Promise.resolve().then(() => (init_text_order_asc123(), text_order_asc123_exports))).IconTextOrderAsc123;
      case Icons.TEXT_ORDER_ASC127:
        return (await Promise.resolve().then(() => (init_text_order_asc127(), text_order_asc127_exports))).IconTextOrderAsc127;
      case Icons.TEXT_ORDER_DESC_COPY2:
        return (await Promise.resolve().then(() => (init_text_order_desc_copy2(), text_order_desc_copy2_exports))).IconTextOrderDescCopy2;
      case Icons.TEXT_ORDER_DESC_COPY3:
        return (await Promise.resolve().then(() => (init_text_order_desc_copy3(), text_order_desc_copy3_exports))).IconTextOrderDescCopy3;
      case Icons.TEXT_ORDER_DESC_COPY:
        return (await Promise.resolve().then(() => (init_text_order_desc_copy(), text_order_desc_copy_exports))).IconTextOrderDescCopy;
      case Icons.TEXT_ORDER_DESC:
        return (await Promise.resolve().then(() => (init_text_order_desc(), text_order_desc_exports))).IconTextOrderDesc;
      case Icons.TEXT_OUTDENT:
        return (await Promise.resolve().then(() => (init_text_outdent(), text_outdent_exports))).IconTextOutdent;
      case Icons.TEXT_UNDERLINE:
        return (await Promise.resolve().then(() => (init_text_underline(), text_underline_exports))).IconTextUnderline;
      case Icons.THERMOMETER_COLD:
        return (await Promise.resolve().then(() => (init_thermometer_cold(), thermometer_cold_exports))).IconThermometerCold;
      case Icons.THERMOMETER_HOT:
        return (await Promise.resolve().then(() => (init_thermometer_hot(), thermometer_hot_exports))).IconThermometerHot;
      case Icons.THERMOMETER:
        return (await Promise.resolve().then(() => (init_thermometer(), thermometer_exports))).IconThermometer;
      case Icons.TIMER:
        return (await Promise.resolve().then(() => (init_timer(), timer_exports))).IconTimer;
      case Icons.TRASH2:
        return (await Promise.resolve().then(() => (init_trash2(), trash2_exports))).IconTrash2;
      case Icons.TRASH:
        return (await Promise.resolve().then(() => (init_trash(), trash_exports))).IconTrash;
      case Icons.TRIANGLED_EXCLAMATION_MARK:
        return (await Promise.resolve().then(() => (init_triangled_exclamation_mark(), triangled_exclamation_mark_exports))).IconTriangledExclamationMark;
      case Icons.TRIANGLED_INFO:
        return (await Promise.resolve().then(() => (init_triangled_info(), triangled_info_exports))).IconTriangledInfo;
      case Icons.TRIANGLED_QUESTION_MARK:
        return (await Promise.resolve().then(() => (init_triangled_question_mark(), triangled_question_mark_exports))).IconTriangledQuestionMark;
      case Icons.TRIANGLED:
        return (await Promise.resolve().then(() => (init_triangled(), triangled_exports))).IconTriangled;
      case Icons.USER_ADD:
        return (await Promise.resolve().then(() => (init_user_add(), user_add_exports))).IconUserAdd;
      case Icons.USER_DELETE:
        return (await Promise.resolve().then(() => (init_user_delete(), user_delete_exports))).IconUserDelete;
      case Icons.USER_GROUP:
        return (await Promise.resolve().then(() => (init_user_group(), user_group_exports))).IconUserGroup;
      case Icons.USER:
        return (await Promise.resolve().then(() => (init_user(), user_exports))).IconUser;
      case Icons.USERS:
        return (await Promise.resolve().then(() => (init_users(), users_exports))).IconUsers;
      case Icons.VISIBLE_FAT:
        return (await Promise.resolve().then(() => (init_visible_fat(), visible_fat_exports))).IconVisibleFat;
      case Icons.VISIBLE_L:
        return (await Promise.resolve().then(() => (init_visible_l(), visible_l_exports))).IconVisibleL;
      case Icons.VISIBLE_M:
        return (await Promise.resolve().then(() => (init_visible_m(), visible_m_exports))).IconVisibleM;
      case Icons.VISIBLE_S:
        return (await Promise.resolve().then(() => (init_visible_s(), visible_s_exports))).IconVisibleS;
      case Icons.WHEELCHAIR_ACTION:
        return (await Promise.resolve().then(() => (init_wheelchair_action(), wheelchair_action_exports))).IconWheelchairAction;
      case Icons.WHEELCHAIR:
        return (await Promise.resolve().then(() => (init_wheelchair(), wheelchair_exports))).IconWheelchair;
      case Icons.AIRPLANE_ARRIVALS:
        return (await Promise.resolve().then(() => (init_airplane_arrivals(), airplane_arrivals_exports))).IconAirplaneArrivals;
      case Icons.AIRPLANE_DEPARTURES:
        return (await Promise.resolve().then(() => (init_airplane_departures(), airplane_departures_exports))).IconAirplaneDepartures;
      case Icons.AIRPLANE:
        return (await Promise.resolve().then(() => (init_airplane(), airplane_exports))).IconAirplane;
      case Icons.AIRPORT_CONNECT_FLIGHTS:
        return (await Promise.resolve().then(() => (init_airport_connect_flights(), airport_connect_flights_exports))).IconAirportConnectFlights;
      case Icons.AIRPORT_TRANSFER2:
        return (await Promise.resolve().then(() => (init_airport_transfer2(), airport_transfer2_exports))).IconAirportTransfer2;
      case Icons.AIRPORT_TRANSFER:
        return (await Promise.resolve().then(() => (init_airport_transfer(), airport_transfer_exports))).IconAirportTransfer;
      case Icons.ANCHOR:
        return (await Promise.resolve().then(() => (init_anchor(), anchor_exports))).IconAnchor;
      case Icons.BICYCLE_SURFBOARD:
        return (await Promise.resolve().then(() => (init_bicycle_surfboard(), bicycle_surfboard_exports))).IconBicycleSurfboard;
      case Icons.BICYCLE:
        return (await Promise.resolve().then(() => (init_bicycle(), bicycle_exports))).IconBicycle;
      case Icons.BRIEFCASE_CROSS:
        return (await Promise.resolve().then(() => (init_briefcase_cross(), briefcase_cross_exports))).IconBriefcaseCross;
      case Icons.CAR:
        return (await Promise.resolve().then(() => (init_car(), car_exports))).IconCar;
      case Icons.CROSS_CIRCLED:
        return (await Promise.resolve().then(() => (init_cross_circled(), cross_circled_exports))).IconCrossCircled;
      case Icons.CROSS:
        return (await Promise.resolve().then(() => (init_cross(), cross_exports))).IconCross;
      case Icons.CRUISESHIP:
        return (await Promise.resolve().then(() => (init_cruiseship(), cruiseship_exports))).IconCruiseship;
      case Icons.ELEVATOR1:
        return (await Promise.resolve().then(() => (init_elevator1(), elevator1_exports))).IconElevator1;
      case Icons.ELEVATOR2:
        return (await Promise.resolve().then(() => (init_elevator2(), elevator2_exports))).IconElevator2;
      case Icons.ELEVATOR3:
        return (await Promise.resolve().then(() => (init_elevator3(), elevator3_exports))).IconElevator3;
      case Icons.ELEVATOR4:
        return (await Promise.resolve().then(() => (init_elevator4(), elevator4_exports))).IconElevator4;
      case Icons.ESCALATOR_DOWN:
        return (await Promise.resolve().then(() => (init_escalator_down(), escalator_down_exports))).IconEscalatorDown;
      case Icons.ESCALATOR_UP:
        return (await Promise.resolve().then(() => (init_escalator_up(), escalator_up_exports))).IconEscalatorUp;
      case Icons.ESCALATOR:
        return (await Promise.resolve().then(() => (init_escalator(), escalator_exports))).IconEscalator;
      case Icons.FERRY:
        return (await Promise.resolve().then(() => (init_ferry(), ferry_exports))).IconFerry;
      case Icons.FIRE_EXTINGUISHER:
        return (await Promise.resolve().then(() => (init_fire_extinguisher(), fire_extinguisher_exports))).IconFireExtinguisher;
      case Icons.FIRE_HOSE:
        return (await Promise.resolve().then(() => (init_fire_hose(), fire_hose_exports))).IconFireHose;
      case Icons.FIRE:
        return (await Promise.resolve().then(() => (init_fire(), fire_exports))).IconFire;
      case Icons.GRAVESTONE2:
        return (await Promise.resolve().then(() => (init_gravestone2(), gravestone2_exports))).IconGravestone2;
      case Icons.GRAVESTONE3:
        return (await Promise.resolve().then(() => (init_gravestone3(), gravestone3_exports))).IconGravestone3;
      case Icons.GRAVESTONE:
        return (await Promise.resolve().then(() => (init_gravestone(), gravestone_exports))).IconGravestone;
      case Icons.LUGGAGE_BELT:
        return (await Promise.resolve().then(() => (init_luggage_belt(), luggage_belt_exports))).IconLuggageBelt;
      case Icons.LUGGAGE_LOCKER:
        return (await Promise.resolve().then(() => (init_luggage_locker(), luggage_locker_exports))).IconLuggageLocker;
      case Icons.LUGGAGE_TROLLEY:
        return (await Promise.resolve().then(() => (init_luggage_trolley(), luggage_trolley_exports))).IconLuggageTrolley;
      case Icons.LUGGAGE:
        return (await Promise.resolve().then(() => (init_luggage(), luggage_exports))).IconLuggage;
      case Icons.METRO2:
        return (await Promise.resolve().then(() => (init_metro2(), metro2_exports))).IconMetro2;
      case Icons.METRO:
        return (await Promise.resolve().then(() => (init_metro(), metro_exports))).IconMetro;
      case Icons.NO_SMOKING_CIRCLED:
        return (await Promise.resolve().then(() => (init_no_smoking_circled(), no_smoking_circled_exports))).IconNoSmokingCircled;
      case Icons.NO_SMOKING:
        return (await Promise.resolve().then(() => (init_no_smoking(), no_smoking_exports))).IconNoSmoking;
      case Icons.PALMTREE_ISLAND_WAVE:
        return (await Promise.resolve().then(() => (init_palmtree_island_wave(), palmtree_island_wave_exports))).IconPalmtreeIslandWave;
      case Icons.PALMTREE_ISLAND:
        return (await Promise.resolve().then(() => (init_palmtree_island(), palmtree_island_exports))).IconPalmtreeIsland;
      case Icons.PALMTREE:
        return (await Promise.resolve().then(() => (init_palmtree(), palmtree_exports))).IconPalmtree;
      case Icons.PARASOL_ISLAND_WAVE:
        return (await Promise.resolve().then(() => (init_parasol_island_wave(), parasol_island_wave_exports))).IconParasolIslandWave;
      case Icons.PARASOL_ISLAND:
        return (await Promise.resolve().then(() => (init_parasol_island(), parasol_island_exports))).IconParasolIsland;
      case Icons.PARASOL:
        return (await Promise.resolve().then(() => (init_parasol(), parasol_exports))).IconParasol;
      case Icons.PLASTER:
        return (await Promise.resolve().then(() => (init_plaster(), plaster_exports))).IconPlaster;
      case Icons.PLASTERS:
        return (await Promise.resolve().then(() => (init_plasters(), plasters_exports))).IconPlasters;
      case Icons.RENTAL_CAR:
        return (await Promise.resolve().then(() => (init_rental_car(), rental_car_exports))).IconRentalCar;
      case Icons.SECURITY_CAMERA2:
        return (await Promise.resolve().then(() => (init_security_camera2(), security_camera2_exports))).IconSecurityCamera2;
      case Icons.SECURITY_CAMERA3:
        return (await Promise.resolve().then(() => (init_security_camera3(), security_camera3_exports))).IconSecurityCamera3;
      case Icons.SECURITY_CAMERA:
        return (await Promise.resolve().then(() => (init_security_camera(), security_camera_exports))).IconSecurityCamera;
      case Icons.SHIP:
        return (await Promise.resolve().then(() => (init_ship(), ship_exports))).IconShip;
      case Icons.SIGNPOST2:
        return (await Promise.resolve().then(() => (init_signpost2(), signpost2_exports))).IconSignpost2;
      case Icons.SIGNPOST:
        return (await Promise.resolve().then(() => (init_signpost(), signpost_exports))).IconSignpost;
      case Icons.SMOKING:
        return (await Promise.resolve().then(() => (init_smoking(), smoking_exports))).IconSmoking;
      case Icons.STAIRS_DOWN:
        return (await Promise.resolve().then(() => (init_stairs_down(), stairs_down_exports))).IconStairsDown;
      case Icons.STAIRS_UP:
        return (await Promise.resolve().then(() => (init_stairs_up(), stairs_up_exports))).IconStairsUp;
      case Icons.STAIRS:
        return (await Promise.resolve().then(() => (init_stairs(), stairs_exports))).IconStairs;
      case Icons.TAXI:
        return (await Promise.resolve().then(() => (init_taxi(), taxi_exports))).IconTaxi;
      case Icons.TRAIN_TRACK:
        return (await Promise.resolve().then(() => (init_train_track(), train_track_exports))).IconTrainTrack;
      case Icons.TRAIN:
        return (await Promise.resolve().then(() => (init_train(), train_exports))).IconTrain;
      default:
        return null;
    }
  };
  var findIt = (needle, haystack) => {
    const needles = (Array.isArray(needle) ? needle : [needle]).map((str) => str.toLowerCase());
    const haystacks = (Array.isArray(haystack) ? haystack : [haystack]).map((str) => str.toLowerCase());
    return needles.some((n) => haystacks.some((h) => h.includes(n)));
  };
  var searchIcon = (term, searchIn = void 0) => {
    const meta = {};
    const mergedIcons = Object.keys(Icons).map((key) => {
      const value = Icons[key];
      const metaData = meta[key];
      return {
        id: key,
        name: value,
        ...metaData
      };
    });
    return mergedIcons.filter((icon) => {
      if (searchIn) {
        return findIt(term, icon[searchIn]);
      } else {
        return ["name", "category", "tag", "description", "title"].some((field) => findIt(term, icon[field]));
      }
    });
  };
})();
